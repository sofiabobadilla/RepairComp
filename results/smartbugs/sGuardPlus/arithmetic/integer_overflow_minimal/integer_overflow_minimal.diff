--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/arithmetic/integer_overflow_minimal.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/sGuardPlus/arithmetic/integer_overflow_minimal/integer_overflow_minimal.sol
@@ -1,19 +1,21 @@
-/*

- * @source: https://github.com/SmartContractSecurity/SWC-registry/blob/master/test_cases/integer_overflow_and_underflow/integer_overflow_minimal.sol

- * @author: -

- * @vulnerable_at_lines: 17

- */

 

-//Single transaction overflow

-//Post-transaction effect: overflow escapes to publicly-readable storage

+                        contract sGuardPlus {

+                                constructor() internal {

+                                        

+                                        

+                                }

+                                function sub_uint(uint a, uint b) internal pure returns (uint) {

+                                assert(b <= a);

+                                return a - b;

+                        }

+                                

+                                

+                                

+                        }

+                contract IntegerOverflowMinimal is sGuardPlus {

+uint  public   count = 1;

+function run (uint256    input) public  {

+count=sub_uint(count, input);

+}

 

-pragma solidity ^0.4.19;

-

-contract IntegerOverflowMinimal {

-    uint public count = 1;

-

-    function run(uint256 input) public {

-        // <yes> <report> ARITHMETIC

-        count -= input;

-    }

 }
