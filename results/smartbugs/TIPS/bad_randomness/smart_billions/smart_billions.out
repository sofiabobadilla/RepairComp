Getting Slither report...
Switched global version to 0.4.26



'solc --version' running
'solc ../smartbugs-curated/dataset/bad_randomness/smart_billions.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/mokita/sc_study/temp/smartbugs-curated/dataset/bad_randomness' running
Compilation warnings/errors on ../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:84:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:181:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SmartBillions() {
    ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:8:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.26;"
library SafeMath {
^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:56:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, owner, _value);
        ^---------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:61:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:90:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:101:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:317:32: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(_amount > 0 && this.balance >= (investBalance * 9 / 10) + walletBalance + _amount);
                               ^----------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:319:33: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            require((_amount <= this.balance / 400) && coldStoreLast + 4 * 60 * 24 * 7 <= block.number);
                                ^----------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:369:23: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint maxpay = this.balance / 2;
                      ^----------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:426:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(0),msg.sender,senderBalance); // for etherscan
        ^-------------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:427:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(0),owner,ownerBalance); // for etherscan
        ^-------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:428:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(0),animator,animatorBalance); // for etherscan
        ^-------------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:429:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogInvestment(msg.sender,_partner,investing);
        ^------------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:439:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender,address(0),balances[msg.sender]); // for etherscan
        ^--------------------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:476:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogDividend(_who,balance,last);
        ^----------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:551:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogLate(msg.sender,player.blockNum,block.number);
            ^----------------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:573:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogLate(msg.sender,player.blockNum,block.number);
                ^----------------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:580:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogWin(msg.sender,uint(player.betHash),uint(hash),prize);
            ^------------------------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:583:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogRecordWin(msg.sender,prize);
                ^----------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:588:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogLoss(msg.sender,uint(player.betHash),uint(hash));
            ^-------------------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:617:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        return playSystem(uint(sha3(msg.sender,block.number)), address(0));
                               ^---------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:617:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return playSystem(uint(sha3(msg.sender,block.number)), address(0));
                               ^---------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:625:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        return playSystem(uint(sha3(msg.sender,block.number)), _partner);
                               ^---------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:625:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return playSystem(uint(sha3(msg.sender,block.number)), _partner);
                               ^---------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:659:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogBet(msg.sender,uint(bethash),hashNext,msg.value);
            ^-------------------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:24:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:25:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value);
  ^----------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:31:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:32:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value);
  ^----------------------------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:33:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value);
  ^--------------------------------------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:50:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) {
  ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:69:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:83:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) {
  ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:97:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) {
  ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:109:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:181:5: Warning: No visibility specified. Defaulting to "public". 
    function SmartBillions() {
    ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:522:43: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            return(betPrize(player,uint24(block.blockhash(player.blockNum))));
                                          ^-------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:559:27: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            hash = uint24(block.blockhash(player.blockNum));
                          ^-------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:699:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        return( ( uint(block.blockhash(_lastb  )) & 0xFFFFFF )
                       ^-------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:701:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+1)) & 0xFFFFFF ) << 24 )
                       ^-------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:703:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+2)) & 0xFFFFFF ) << 48 )
                       ^-------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:705:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+3)) & 0xFFFFFF ) << 72 )
                       ^-------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:707:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+4)) & 0xFFFFFF ) << 96 )
                       ^-------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:709:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+5)) & 0xFFFFFF ) << 120 )
                       ^-------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:711:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+6)) & 0xFFFFFF ) << 144 )
                       ^-------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:713:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+7)) & 0xFFFFFF ) << 168 )
                       ^-------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:715:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+8)) & 0xFFFFFF ) << 192 )
                       ^-------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:717:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+9)) & 0xFFFFFF ) << 216 )
                       ^-------------^
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:9:3: Warning: Function state mutability can be restricted to pure
  function sub(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:13:3: Warning: Function state mutability can be restricted to pure
  function add(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol:481:5: Warning: Function state mutability can be restricted to pure
    function betPrize(Bet _player, uint24 _hash) constant private returns (uint) { // house fee 13.85%
    ^ (Relevant source part starts here and spans across multiple lines).


SmartBillions (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#117-770) contract sets array length with a user-controlled value:
	- dividends.push(0) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#185)
SmartBillions (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#117-770) contract sets array length with a user-controlled value:
	- dividends.push(0) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#186)
SmartBillions (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#117-770) contract sets array length with a user-controlled value:
	- dividends.push(0) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#345)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

SmartBillions.invest(address) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#398-430) performs a multiplication on the result of a division:
	- walletBalance += (investing * 5 / 100) * 2 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#415)
SmartBillions.commitDividend(address) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#458-477) performs a multiplication on the result of a division:
	- share = balances[_who] * 0xffffffff / totalSupply (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#467)
	- balance += share * dividends[last] (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#470)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

SmartBillions (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#117-770) has incorrect ERC20 function interface:StandardToken.transferFrom(address,address,uint256) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#83-91)
SmartBillions (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#117-770) has incorrect ERC20 function interface:StandardToken.approve(address,uint256) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#97-102)
SmartBillions (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#117-770) has incorrect ERC20 function interface:ERC20.transferFrom(address,address,uint256) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#32)
SmartBillions (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#117-770) has incorrect ERC20 function interface:ERC20.approve(address,uint256) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#33)
SmartBillions (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#117-770) has incorrect ERC20 function interface:ERC20Basic.transfer(address,uint256) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#25)
SmartBillions (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#117-770) has incorrect ERC20 function interface:BasicToken.transfer(address,uint256) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#50-63)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

SmartBillions.addHashes(uint256) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#671-688) uses a dangerous strict equality:
	- require(bool)(hashFirst == 0 && _sadd > 0 && _sadd <= hashesSize) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#672)
SmartBillions.betOf(address) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#512-534) uses a dangerous strict equality:
	- (player.value == 0) || (player.blockNum <= 1) || (block.number < player.blockNum) || (block.number >= player.blockNum + (10 * hashesSize)) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#514-517)
SmartBillions.betOf(address) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#512-534) uses a dangerous strict equality:
	- hash == 0x1000000 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#526)
SmartBillions.betPrize(SmartBillions.Bet,uint24) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#481-507) uses a dangerous strict equality:
	- (hit & 0xF00000) == 0 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#484-490)
SmartBillions.putHash() (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#734-755) uses a dangerous strict equality:
	- lastb == 0 || block.number <= lastb + 10 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#736)
SmartBillions.won() (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#539-590) uses a dangerous strict equality:
	- player.blockNum == 0 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#541)
SmartBillions.won() (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#539-590) uses a dangerous strict equality:
	- (player.value == 0) || (player.blockNum == 1) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#545)
SmartBillions.won() (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#539-590) uses a dangerous strict equality:
	- hash == 0x1000000 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#565)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

ERC20.allowance(address,address).owner (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#31) shadows:
	- ERC20Basic.owner (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#22) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

SmartBillions.changeOwner(address) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#266-271) should emit an event for: 
	- owner = _who (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#270) 
SmartBillions.changeAnimator(address) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#277-282) should emit an event for: 
	- animator = _who (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#281) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

SmartBillions.setInvestStart(uint256) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#288-291) should emit an event for: 
	- investStart = _when (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#290) 
SmartBillions.setBetMax(uint256) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#297-299) should emit an event for: 
	- hashBetMax = _maxsum (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#298) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

SmartBillions.putHash() (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#734-755) has costly operations inside a loop:
	- hashLast = lastb + 10 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#753)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop

Deprecated standard detected (betPrize(player,uint24(block.blockhash(player.blockNum)))) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#522):
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected hash = uint24(block.blockhash(player.blockNum)) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#559):
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected playSystem(uint256(sha3()(msg.sender,block.number)),address(0)) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#617):
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected playSystem(uint256(sha3()(msg.sender,block.number)),_partner) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#625):
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected ((uint256(block.blockhash(_lastb)) & 0xFFFFFF) | ((uint256(block.blockhash(_lastb + 1)) & 0xFFFFFF) << 24) | ((uint256(block.blockhash(_lastb + 2)) & 0xFFFFFF) << 48) | ((uint256(block.blockhash(_lastb + 3)) & 0xFFFFFF) << 72) | ((uint256(block.blockhash(_lastb + 4)) & 0xFFFFFF) << 96) | ((uint256(block.blockhash(_lastb + 5)) & 0xFFFFFF) << 120) | ((uint256(block.blockhash(_lastb + 6)) & 0xFFFFFF) << 144) | ((uint256(block.blockhash(_lastb + 7)) & 0xFFFFFF) << 168) | ((uint256(block.blockhash(_lastb + 8)) & 0xFFFFFF) << 192) | ((uint256(block.blockhash(_lastb + 9)) & 0xFFFFFF) << 216) | ((uint256(_delta) / hashesSize) << 240)) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#699-718):
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter BasicToken.transfer(address,uint256)._to (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#50) is not in mixedCase
Parameter BasicToken.transfer(address,uint256)._value (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#50) is not in mixedCase
Parameter BasicToken.balanceOf(address)._owner (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#69) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._from (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#83) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._to (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#83) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._value (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#83) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._spender (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#97) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._value (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#97) is not in mixedCase
Parameter StandardToken.allowance(address,address)._owner (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#109) is not in mixedCase
Parameter StandardToken.allowance(address,address)._spender (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#109) is not in mixedCase
Parameter SmartBillions.walletBalanceOf(address)._owner (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#202) is not in mixedCase
Parameter SmartBillions.walletPeriodOf(address)._owner (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#210) is not in mixedCase
Parameter SmartBillions.walletBlockOf(address)._owner (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#218) is not in mixedCase
Parameter SmartBillions.betValueOf(address)._owner (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#226) is not in mixedCase
Parameter SmartBillions.betHashOf(address)._owner (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#234) is not in mixedCase
Parameter SmartBillions.betBlockNumberOf(address)._owner (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#242) is not in mixedCase
Parameter SmartBillions.changeOwner(address)._who (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#266) is not in mixedCase
Parameter SmartBillions.changeAnimator(address)._who (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#277) is not in mixedCase
Parameter SmartBillions.setInvestStart(uint256)._when (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#288) is not in mixedCase
Parameter SmartBillions.setBetMax(uint256)._maxsum (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#297) is not in mixedCase
Parameter SmartBillions.coldStore(uint256)._amount (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#315) is not in mixedCase
Parameter SmartBillions.pay(uint256)._amount (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#368) is not in mixedCase
Parameter SmartBillions.invest(address)._partner (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#398) is not in mixedCase
Parameter SmartBillions.commitDividend(address)._who (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#458) is not in mixedCase
Parameter SmartBillions.betPrize(SmartBillions.Bet,uint24)._player (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#481) is not in mixedCase
Parameter SmartBillions.betPrize(SmartBillions.Bet,uint24)._hash (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#481) is not in mixedCase
Parameter SmartBillions.betOf(address)._who (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#512) is not in mixedCase
Parameter SmartBillions.playRandom(address)._partner (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#624) is not in mixedCase
Parameter SmartBillions.playSystem(uint256,address)._hash (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#632) is not in mixedCase
Parameter SmartBillions.playSystem(uint256,address)._partner (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#632) is not in mixedCase
Parameter SmartBillions.addHashes(uint256)._sadd (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#671) is not in mixedCase
Parameter SmartBillions.calcHashes(uint32,uint32)._lastb (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#697) is not in mixedCase
Parameter SmartBillions.calcHashes(uint32,uint32)._delta (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#697) is not in mixedCase
Parameter SmartBillions.getHash(uint256)._block (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#721) is not in mixedCase
Parameter SmartBillions.putHashes(uint256)._num (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#761) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in SmartBillions.coldStore(uint256) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#315-323):
	External calls:
	- msg.sender.transfer(_amount) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#321)
	State variables written after the call(s):
	- coldStoreLast = block.number (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#322)
Reentrancy in SmartBillions.invest(address) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#398-430):
	External calls:
	- msg.sender.transfer(msg.value.sub(investing)) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#406)
	State variables written after the call(s):
	- balances[msg.sender] += senderBalance (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#422)
	- balances[owner] += ownerBalance (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#423)
	- balances[animator] += animatorBalance (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#424)
	- totalSupply += senderBalance + ownerBalance + animatorBalance (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#425)
	- walletBalance += investing / 10 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#412)
	- walletBalance += (investing * 5 / 100) * 2 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#415)
	- wallets[owner].balance += uint208(investing / 10) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#413)
	- wallets[owner].balance += uint208(investing * 5 / 100) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#416)
	- wallets[_partner].balance += uint208(investing * 5 / 100) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#417)
	- wallets[msg.sender].lastDividendPeriod = uint16(dividendPeriod) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#418)
	Event emitted after the call(s):
	- LogInvestment(msg.sender,_partner,investing) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#429)
	- Transfer(address(0),msg.sender,senderBalance) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#426)
	- Transfer(address(0),owner,ownerBalance) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#427)
	- Transfer(address(0),animator,animatorBalance) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#428)
Reentrancy in SmartBillions.pay(uint256) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#368-383):
	External calls:
	- msg.sender.transfer(_amount) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#371)
	State variables written after the call(s):
	- houseKeeping() (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#373)
		- dividendPeriod ++ (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#348)
	- houseKeeping() (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#373)
		- dividends.push(0) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#345)
	- houseKeeping() (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#373)
		- investStart = 0 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#339)
Reentrancy in SmartBillions.playSystem(uint256,address) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#632-663):
	External calls:
	- won() (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#633)
		- msg.sender.transfer(_amount) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#371)
		- msg.sender.transfer(maxpay) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#381)
	State variables written after the call(s):
	- bets[msg.sender] = Bet({value:uint192(msg.value),betHash:uint32(bethash),blockNum:uint32(hashNext)}) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#658)
	- dividends[dividendPeriod] += msg.value / 20 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#638)
	- hashBetSum = msg.value (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#647)
	- hashBetSum = msg.value (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#652)
	- hashBetSum += msg.value (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#655)
	- putHash() (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#661)
		- hashLast = lastb + 10 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#753)
	- hashNext = block.number + 3 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#646)
	- hashNext ++ (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#651)
	- putHash() (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#661)
		- hashes[delta % hashesSize] = calcHashes(uint32(lastb),uint32(delta)) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#752)
	- walletBalance += fee (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#642)
	- wallets[_partner].balance += uint208(fee) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#643)
	Event emitted after the call(s):
	- LogBet(msg.sender,uint256(bethash),hashNext,msg.value) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#659)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

SmartBillions.betPrize(SmartBillions.Bet,uint24) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#481-507) uses literals with too many digits:
	- (uint256(_player.value) * 7000000) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#492)
SmartBillions.betPrize(SmartBillions.Bet,uint24) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#481-507) uses literals with too many digits:
	- (hit & 0xF00000) == 0 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#484-490)
SmartBillions.betOf(address) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#512-534) uses literals with too many digits:
	- hash == 0x1000000 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#526)
SmartBillions.won() (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#539-590) uses literals with too many digits:
	- hash == 0x1000000 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#565)
SmartBillions.getHash(uint256) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#721-729) uses literals with too many digits:
	- (0x1000000) (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#725)
SmartBillions.slitherConstructorVariables() (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#117-770) uses literals with too many digits:
	- investBalanceMax = 200000000000000000000000 (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#143)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

Loop condition n < hashes.length (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#680) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length

SmartBillions.investBalanceMax (../smartbugs-curated/dataset/bad_randomness/smart_billions.sol#143) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
../smartbugs-curated/dataset/bad_randomness/smart_billions.sol analyzed (6 contracts with 95 detectors), 78 result(s) found

Error running slither
smart_billions.sol
Getting Solidity AST...
Running TIPS...
smart_billions.sol

Traceback (most recent call last):
  File "/home/mokita/sc_study/temp/TIPS/./src/TIPS.py", line 163, in <module>
    main()
  File "/home/mokita/sc_study/temp/TIPS/./src/TIPS.py", line 152, in main
    filename, code = switchCategory(defect, astPath, codePath)
  File "/home/mokita/sc_study/temp/TIPS/./src/TIPS.py", line 107, in switchCategory
    codepool.append(regenerateCode(item))
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 81, in regenerateCode
    codestr += switchHandler(item)
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 88, in switchHandler
    return contractDefHandler(node) 
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 199, in contractDefHandler
    codestr += switchHandler(node.children[i])
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 92, in switchHandler
    return functionDefHandler(node)
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 286, in functionDefHandler
    codestr += switchHandler(childNodes[i])
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 94, in switchHandler
    return blockHandler(node)
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 296, in blockHandler
    codestr += switchHandler(item)
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 122, in switchHandler
    return ifStatementHandler(node)
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 433, in ifStatementHandler
    codestr += switchHandler(childNodes[2])
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 94, in switchHandler
    return blockHandler(node)
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 296, in blockHandler
    codestr += switchHandler(item)
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 122, in switchHandler
    return ifStatementHandler(node)
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 433, in ifStatementHandler
    codestr += switchHandler(childNodes[2])
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 94, in switchHandler
    return blockHandler(node)
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 296, in blockHandler
    codestr += switchHandler(item)
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 106, in switchHandler
    return returnHandler(node)
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 343, in returnHandler
    codestr += switchHandler(node.children[0])
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 142, in switchHandler
    return tupleExpHandler(node)
  File "/home/mokita/sc_study/temp/TIPS/src/generateAST.py", line 560, in tupleExpHandler
    codestr += components[len(components)-1]['attributes']['value'] + ')'
TypeError: 'NoneType' object is not subscriptable

