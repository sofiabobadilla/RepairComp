Getting Slither report...
Switched global version to 0.4.26



'solc --version' running
'solc ../smartbugs-curated/dataset/reentrancy/etherbank.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/mokita/sc_study/temp/smartbugs-curated/dataset/reentrancy' running
Compilation warnings/errors on ../smartbugs-curated/dataset/reentrancy/etherbank.sol:
../smartbugs-curated/dataset/reentrancy/etherbank.sol:20:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender.call.value(amountToWithdraw)())) { throw; }
		                                                    ^---^
../smartbugs-curated/dataset/reentrancy/etherbank.sol:7:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.26;"
contract EtherBank{
^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/reentrancy/etherbank.sol:9:5: Warning: No visibility specified. Defaulting to "public". 
    function getBalance(address user) constant returns(uint) {  
    ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/reentrancy/etherbank.sol:13:2: Warning: No visibility specified. Defaulting to "public". 
	function addToBalance() {  
 ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/reentrancy/etherbank.sol:14:31: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
		userBalances[msg.sender] += msg.value;
		                            ^-------^
../smartbugs-curated/dataset/reentrancy/etherbank.sol:17:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawBalance() {  
 ^ (Relevant source part starts here and spans across multiple lines).


Reentrancy in EtherBank.withdrawBalance() (../smartbugs-curated/dataset/reentrancy/etherbank.sol#17-22):
	External calls:
	- ! (msg.sender.call.value(amountToWithdraw)()) (../smartbugs-curated/dataset/reentrancy/etherbank.sol#20)
	State variables written after the call(s):
	- userBalances[msg.sender] = 0 (../smartbugs-curated/dataset/reentrancy/etherbank.sol#21)
	EtherBank.userBalances (../smartbugs-curated/dataset/reentrancy/etherbank.sol#8) can be used in cross function reentrancies:
	- EtherBank.addToBalance() (../smartbugs-curated/dataset/reentrancy/etherbank.sol#13-15)
	- EtherBank.getBalance(address) (../smartbugs-curated/dataset/reentrancy/etherbank.sol#9-11)
	- EtherBank.withdrawBalance() (../smartbugs-curated/dataset/reentrancy/etherbank.sol#17-22)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Deprecated standard detected THROW (../smartbugs-curated/dataset/reentrancy/etherbank.sol#20):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in EtherBank.withdrawBalance() (../smartbugs-curated/dataset/reentrancy/etherbank.sol#17-22):
	- ! (msg.sender.call.value(amountToWithdraw)()) (../smartbugs-curated/dataset/reentrancy/etherbank.sol#20)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
../smartbugs-curated/dataset/reentrancy/etherbank.sol analyzed (1 contracts with 95 detectors), 4 result(s) found

Error running slither
etherbank.sol
Getting Solidity AST...
Running TIPS...
etherbank.sol
0.004278898239135742


