--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/time_manipulation/roulette.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/TIPS/time_manipulation/roulette/roulette.sol
@@ -1,25 +1,14 @@
-/*

- * @source: https://github.com/sigp/solidity-security-blog

- * @author: -

- * @vulnerable_at_lines: 18,20

- */

-

-pragma solidity ^0.4.25;

-

 contract Roulette {

-    uint public pastBlockTime; // Forces one bet per block

-

-    constructor() public payable {} // initially fund contract

-

-    // fallback function used to make a bet

-    function () public payable {

-        require(msg.value == 10 ether); // must send 10 ether to play

-        // <yes> <report> TIME_MANIPULATION

-        require(now != pastBlockTime); // only 1 transaction per block

-        // <yes> <report> TIME_MANIPULATION

-        pastBlockTime = now;

-        if(now % 15 == 0) { // winner

-            msg.sender.transfer(this.balance);

-        }

-    }

-}

+	uint public pastBlockTime;

+	constructor() payable public {

+	}

+	function () payable public {

+	require(msg.value == 10 ether);

+	require(now != pastBlockTime);

+	pastBlockTime = now;

+	if(now % 15 == 0){

+	msg.sender.transfer(this.balance);

+	}

+	}

+	

+}