--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/time_manipulation/lottopollo.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/TIPS/time_manipulation/lottopollo/lottopolloU1.sol
@@ -1,33 +1,28 @@
-/*

- * @source: https://github.com/seresistvanandras/EthBench/blob/master/Benchmark/Simple/timestampdependent.sol

- * @author: -

- * @vulnerable_at_lines: 13,27

- */

-

-pragma solidity ^0.4.0;

 contract lottopollo {

-  address leader;

-  uint    timestamp;

-  function payOut(uint rand) internal {

-    // <yes> <report> TIME MANIPULATION

-    if ( rand> 0 && now - rand > 24 hours ) {

-      msg.sender.send( msg.value );

-

-      if ( this.balance > 0 ) {

-        leader.send( this.balance );

-      }

-    }

-    else if ( msg.value >= 1 ether ) {

-      leader = msg.sender;

-      timestamp = rand;

-    }

-  }

-  function randomGen() constant returns (uint randomNumber) {

-      // <yes> <report> TIME MANIPULATION

-      return block.timestamp;   

-    }

-  function draw(uint seed){

-    uint randomNumber=randomGen(); 

-    payOut(randomNumber);

-  }

+	address leader;

+	uint timestamp;

+	function payOut(uint rand) internal {

+	if(rand > 0 && now - rand > 24 hours){

+	if(! msg.sender.send(msg.value)){

+	throw;}

+	if(this.balance > 0){

+	if(! leader.send(this.balance)){

+	throw;}

+	}

+	}

+	else{

+	if(msg.value >= 1 ether){

+	leader = msg.sender;

+	timestamp = rand;

+	}

+	}

+	}

+	function randomGen() view public returns(uint randomNumber){

+	return block.timestamp;

+	}

+	function draw(uint seed) public {

+	uint randomNumber = randomGen();

+	payOut(randomNumber);

+	}

+	

 }