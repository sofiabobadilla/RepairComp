Getting Slither report...
Switched global version to 0.4.26



'solc --version' running
'solc ../smartbugs-curated/dataset/denial_of_service/list_dos.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/mokita/sc_study/temp/smartbugs-curated/dataset/denial_of_service' running
Compilation warnings/errors on ../smartbugs-curated/dataset/denial_of_service/list_dos.sol:
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:22:6: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
     function Government() {
     ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:9:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.26;"
contract Government {
^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:36:14: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
             msg.sender.send(amount);
             ^---------------------^
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:38:14: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
             creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash);
             ^-------------------------------------------------------------------^
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:39:32: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
             corruptElite.send(this.balance);
                               ^----------^
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:39:14: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
             corruptElite.send(this.balance);
             ^-----------------------------^
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:61:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 corruptElite.send(amount * 5/100);
                 ^-------------------------------^
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:69:22: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                     buddy.send(amount * 5/100);
                     ^------------------------^
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:74:22: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                     creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]);
                     ^---------------------------------------------------------------------------------^
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:81:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 msg.sender.send(amount);
                 ^---------------------^
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:22:6: Warning: No visibility specified. Defaulting to "public". 
     function Government() {
     ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:25:28: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
         profitFromCrash = msg.value;
                           ^-------^
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:30:6: Warning: No visibility specified. Defaulting to "public". 
     function lendGovernmentMoney(address buddy) returns (bool) {
     ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:31:24: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
         uint amount = msg.value;
                       ^-------^
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:88:6: Warning: No visibility specified. Defaulting to "public". 
     function() {
     ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:92:6: Warning: No visibility specified. Defaulting to "public". 
     function totalDebt() returns (uint debt) {
     ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:98:6: Warning: No visibility specified. Defaulting to "public". 
     function totalPayedOut() returns (uint payout) {
     ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:105:6: Warning: No visibility specified. Defaulting to "public". 
     function investInTheSystem() {
     ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:106:29: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
         profitFromCrash += msg.value;
                            ^-------^
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:110:6: Warning: No visibility specified. Defaulting to "public". 
     function inheritToNextGeneration(address nextGeneration) {
     ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:116:6: Warning: No visibility specified. Defaulting to "public". 
     function getCreditorAddresses() returns (address[]) {
     ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:120:6: Warning: No visibility specified. Defaulting to "public". 
     function getCreditorAmounts() returns (uint[]) {
     ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:92:6: Warning: Function state mutability can be restricted to view
     function totalDebt() returns (uint debt) {
     ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:98:6: Warning: Function state mutability can be restricted to view
     function totalPayedOut() returns (uint payout) {
     ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:116:6: Warning: Function state mutability can be restricted to view
     function getCreditorAddresses() returns (address[]) {
     ^ (Relevant source part starts here and spans across multiple lines).
../smartbugs-curated/dataset/denial_of_service/list_dos.sol:120:6: Warning: Function state mutability can be restricted to view
     function getCreditorAmounts() returns (uint[]) {
     ^ (Relevant source part starts here and spans across multiple lines).


Government (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#9-123) contract sets array length with a user-controlled value:
	- creditorAddresses.push(msg.sender) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#57)
Government (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#9-123) contract sets array length with a user-controlled value:
	- creditorAmounts.push(amount * 110 / 100) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#58)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Government.lendGovernmentMoney(address) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#30-85) ignores return value by msg.sender.send(amount) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#36)
Government.lendGovernmentMoney(address) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#30-85) ignores return value by creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#38)
Government.lendGovernmentMoney(address) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#30-85) ignores return value by corruptElite.send(this.balance) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#39)
Government.lendGovernmentMoney(address) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#30-85) ignores return value by corruptElite.send(amount * 5 / 100) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#61)
Government.lendGovernmentMoney(address) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#30-85) ignores return value by buddy.send(amount * 5 / 100) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#69)
Government.lendGovernmentMoney(address) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#30-85) ignores return value by creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#74)
Government.lendGovernmentMoney(address) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#30-85) ignores return value by msg.sender.send(amount) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#81)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

Government.inheritToNextGeneration(address).nextGeneration (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#110) lacks a zero-check on :
		- corruptElite = nextGeneration (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#112)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Government.lendGovernmentMoney(address) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#30-85) uses timestamp for comparisons
	Dangerous comparisons:
	- lastTimeOfNewCredit + TWELVE_HOURS < block.timestamp (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#34)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Reentrancy in Government.lendGovernmentMoney(address) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#30-85):
	External calls:
	- msg.sender.send(amount) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#36)
	- creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#38)
	- corruptElite.send(this.balance) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#39)
	State variables written after the call(s):
	- creditorAddresses = new address[](0) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#45)
	- creditorAmounts = new uint256[](0) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#47)
	- lastCreditorPayedOut = 0 (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#41)
	- lastTimeOfNewCredit = block.timestamp (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#42)
	- profitFromCrash = 0 (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#43)
	- round += 1 (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#48)
Reentrancy in Government.lendGovernmentMoney(address) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#30-85):
	External calls:
	- corruptElite.send(amount * 5 / 100) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#61)
	State variables written after the call(s):
	- profitFromCrash += amount * 5 / 100 (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#64)
Reentrancy in Government.lendGovernmentMoney(address) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#30-85):
	External calls:
	- corruptElite.send(amount * 5 / 100) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#61)
	- buddy.send(amount * 5 / 100) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#69)
	State variables written after the call(s):
	- buddies[msg.sender] += amount * 110 / 100 (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#71)
Reentrancy in Government.lendGovernmentMoney(address) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#30-85):
	External calls:
	- corruptElite.send(amount * 5 / 100) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#61)
	- buddy.send(amount * 5 / 100) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#69)
	- creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]) (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#74)
	State variables written after the call(s):
	- buddies[creditorAddresses[lastCreditorPayedOut]] -= creditorAmounts[lastCreditorPayedOut] (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#75)
	- lastCreditorPayedOut += 1 (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#76)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

Loop condition i < creditorAmounts.length (../smartbugs-curated/dataset/denial_of_service/list_dos.sol#93) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length
../smartbugs-curated/dataset/denial_of_service/list_dos.sol analyzed (1 contracts with 95 detectors), 17 result(s) found

Error running slither
list_dos.sol
Getting Solidity AST...
Running TIPS...
list_dos.sol
0.029706239700317383


