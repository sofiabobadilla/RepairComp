--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/denial_of_service/dos_address.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/TIPS/denial_of_service/dos_address/dos_address.sol
@@ -1,36 +1,23 @@
-/*

- * @source: https://github.com/SmartContractSecurity/SWC-registry/blob/master/test_cases/dos_gas_limit/dos_address.sol

- * @author: -

- * @vulnerable_at_lines: 16,17,18

- */

-

-pragma solidity ^0.4.25;

-

 contract DosGas {

-

-    address[] creditorAddresses;

-    bool win = false;

-

-    function emptyCreditors() public {

-        // <yes> <report> DENIAL_OF_SERVICE

-        if(creditorAddresses.length>1500) {

-            creditorAddresses = new address[](0);

-            win = true;

-        }

-    }

-

-    function addCreditors() public returns (bool) {

-        for(uint i=0;i<350;i++) {

-          creditorAddresses.push(msg.sender);

-        }

-        return true;

-    }

-

-    function iWin() public view returns (bool) {

-        return win;

-    }

-

-    function numberCreditors() public view returns (uint) {

-        return creditorAddresses.length;

-    }

-}

+	address[] creditorAddresses;

+	bool win = false;

+	function emptyCreditors() public {

+	if(creditorAddresses.length > 1500){

+	creditorAddresses = new address[](0);

+	win = true;

+	}

+	}

+	function addCreditors() public returns(bool ){

+	for(uint i = 0;i < 350;i++){

+	creditorAddresses.push(msg.sender);

+	}

+	return true;

+	}

+	function iWin() view public returns(bool ){

+	return win;

+	}

+	function numberCreditors() view public returns(uint ){

+	return creditorAddresses.length;

+	}

+	

+}