patches/bad_randomness/lucky_doubler/lucky_doubler.sol:69:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function LuckyDoubler() {
    ^ (Relevant source part starts here and spans across multiple lines).
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:178:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (multi < 110 || multi > 150) throw;
                                        ^---^
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:185:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.24;"
contract sGuard{
^ (Relevant source part starts here and spans across multiple lines).
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:131:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        Entry theEntry = entries[unpaidEntries[index]];
        ^------------^
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:96:14: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
             msg.sender.send(msg.value);
             ^------------------------^
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:110:10: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        	msg.sender.send(sub_uint256(msg.value, 1 ether));
        	^----------------------------------------------^
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:138:13: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
            theEntry.entryAddress.send(payout);
            ^--------------------------------^
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:152:33: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint fees = sub_uint256(this.balance, balance);
                                ^----------^
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:155:17: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                owner.send(fees);
                ^--------------^
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:69:5: Warning: No visibility specified. Defaulting to "public". 
    function LuckyDoubler() {
    ^ (Relevant source part starts here and spans across multiple lines).
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:89:5: Warning: No visibility specified. Defaulting to "public". 
    function() {
    ^ (Relevant source part starts here and spans across multiple lines).
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:166:35: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        uint256 hashVal = uint256(block.blockhash(lastBlockNumber));
                                  ^-------------^
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:173:6: Warning: No visibility specified. Defaulting to "public". 
     function changeOwner(address newOwner) nonReentrant_  onlyowner {
     ^ (Relevant source part starts here and spans across multiple lines).
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:177:6: Warning: No visibility specified. Defaulting to "public". 
     function changeMultiplier(uint multi) nonReentrant_  onlyowner {
     ^ (Relevant source part starts here and spans across multiple lines).
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:183:6: Warning: No visibility specified. Defaulting to "public". 
     function changeFee(uint newFee) nonReentrant_  onlyowner {
     ^ (Relevant source part starts here and spans across multiple lines).
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:191:5: Warning: No visibility specified. Defaulting to "public". 
    function multiplierFactor() constant returns (uint factor, string info) {
    ^ (Relevant source part starts here and spans across multiple lines).
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:196:5: Warning: No visibility specified. Defaulting to "public". 
    function currentFee() constant returns (uint feePercentage, string info) {
    ^ (Relevant source part starts here and spans across multiple lines).
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:201:5: Warning: No visibility specified. Defaulting to "public". 
    function totalEntries() constant returns (uint count, string info) {
    ^ (Relevant source part starts here and spans across multiple lines).
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:206:5: Warning: No visibility specified. Defaulting to "public". 
    function userStats(address user) constant returns (uint deposits, uint payouts, string info)
    ^ (Relevant source part starts here and spans across multiple lines).
patches/bad_randomness/lucky_doubler/lucky_doubler.sol:216:5: Warning: No visibility specified. Defaulting to "public". 
    function entryDetails(uint index) constant returns (address user, uint payout, bool paid, string info)
    ^ (Relevant source part starts here and spans across multiple lines).
