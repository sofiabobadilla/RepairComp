patches/reentrancy/etherbank/etherbank.sol:38:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender.call.value(amountToWithdraw)())) { throw; }
		                                                    ^---^
patches/reentrancy/etherbank/etherbank.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.24;"
contract sGuard{
^ (Relevant source part starts here and spans across multiple lines).
patches/reentrancy/etherbank/etherbank.sol:27:5: Warning: No visibility specified. Defaulting to "public". 
    function getBalance(address user) constant returns(uint) {  
    ^ (Relevant source part starts here and spans across multiple lines).
patches/reentrancy/etherbank/etherbank.sol:31:3: Warning: No visibility specified. Defaulting to "public". 
	 function addToBalance() nonReentrant_  {  
  ^ (Relevant source part starts here and spans across multiple lines).
patches/reentrancy/etherbank/etherbank.sol:32:68: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
		userBalances[msg.sender] = add_uint256(userBalances[msg.sender], msg.value);
		                                                                 ^-------^
patches/reentrancy/etherbank/etherbank.sol:35:3: Warning: No visibility specified. Defaulting to "public". 
	 function withdrawBalance() nonReentrant_  {  
  ^ (Relevant source part starts here and spans across multiple lines).
