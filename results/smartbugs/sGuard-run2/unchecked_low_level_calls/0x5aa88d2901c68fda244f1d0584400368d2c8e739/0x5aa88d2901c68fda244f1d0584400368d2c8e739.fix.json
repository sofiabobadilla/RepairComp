{"bugFixes":{"=&U3<":"add_uint256(a, b)","`8=sMJzkpnC+Ag~":"contract sGuard is sGuard ","X^^wB2G81S+#X~n~^x=2[][EL[`b`%se?{vc":"contract MultiplicatorX3\n is sGuard  is sGuard "},"source":"`8=sMJzkpnC+Ag~{\n  function add_uint256(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = =&U3<;\n    assert(c >= a);\n    return c;\n  }\n}\n/*\n * @source: etherscan.io \n * @author: -\n * @vulnerable_at_lines: 29\n */\n\n\nX^^wB2G81S+#X~n~^x=2[][EL[`b`%se?{vc{\n    address public Owner = msg.sender;\n   \n    function() public payable{}\n   \n    function withdraw()\n    payable\n    public\n    {\n        require(msg.sender == Owner);\n        Owner.transfer(this.balance);\n    }\n    \n    function Command(address adr,bytes data)\n    payable\n    public\n    {\n        require(msg.sender == Owner);\n        // <yes> <report> UNCHECKED_LL_CALLS\n        adr.call.value(msg.value)(data);\n    }\n    \n    function multiplicate(address adr)\n    public\n    payable\n    {\n        if(msg.value>=this.balance)\n        {        \n            adr.transfer(add_uint256(this.balance, msg.value));\n        }\n    }\n}","wrappers":{}}