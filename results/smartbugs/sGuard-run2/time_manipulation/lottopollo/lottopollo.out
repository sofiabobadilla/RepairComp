
> symEvm@1.0.0 dev /sGuard
> node src/index.js "patches/time_manipulation/lottopollo/lottopollo.sol" "report_run/time_manipulation/lottopollo" "lottopollo"

patches/time_manipulation/lottopollo/lottopollo.sol
{ bugFixes:
   { 'TQ1:4': 'sub_uint256(a, b)',
     'bPLJh?RU/HciHtD': 'contract sGuard is sGuard ',
     '7U%%.&O$k2\'U1|TThP)gT~lfJa"~2fD': 'contract lottopollo  is sGuard  is sGuard ' },
  source:
   'bPLJh?RU/HciHtD{\n  function sub_uint256(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return TQ1:4;\n  }\n}\n/*\n * @source: https://github.com/seresistvanandras/EthBench/blob/master/Benchmark/Simple/timestampdependent.sol\n * @author: -\n * @vulnerable_at_lines: 13,27\n */\n\n7U%%.&O$k2\'U1|TThP)gT~lfJa"~2fD{\n  address leader;\n  uint    timestamp;\n  function payOut(uint rand) internal {\n    // <yes> <report> TIME MANIPULATION\n    if ( rand> 0 && sub_uint256(now, rand) > 24 hours ) {\n      msg.sender.send( msg.value );\n\n      if ( this.balance > 0 ) {\n        leader.send( this.balance );\n      }\n    }\n    else if ( msg.value >= 1 ether ) {\n      leader = msg.sender;\n      timestamp = rand;\n    }\n  }\n  function randomGen() constant returns (uint randomNumber) {\n      // <yes> <report> TIME MANIPULATION\n      return block.timestamp;   \n    }\n  function draw(uint seed){\n    uint randomNumber=randomGen(); \n    payOut(randomNumber);\n  }\n}',
  wrappers: Set { 'sub_uint256' } }
