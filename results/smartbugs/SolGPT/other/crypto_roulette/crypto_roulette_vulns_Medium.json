[
    {
        "description": "CryptoRoulette (shared/other/crypto_roulette.sol#14-61) contract sets array length with a user-controlled value:\n\t- gamesPlayed.push(game) (shared/other/crypto_roulette.sol#43)\n",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium",
        "first_markdown_element": "shared/other/crypto_roulette.sol#L14-L61"
    },
    {
        "description": "CryptoRoulette.shuffle() (shared/other/crypto_roulette.sol#32-35) uses a weak PRNG: \"secretNumber = uint8(sha3()(now,block.blockhash(block.number - 1))) % 20 + 1 (shared/other/crypto_roulette.sol#34)\" \n",
        "check": "weak-prng",
        "impact": "High",
        "confidence": "Medium",
        "first_markdown_element": "shared/other/crypto_roulette.sol#L32-L35"
    },
    {
        "description": "CryptoRoulette.play(uint256).game (shared/other/crypto_roulette.sol#40) is a storage variable never initialized\n",
        "check": "uninitialized-storage",
        "impact": "High",
        "confidence": "High",
        "first_markdown_element": "shared/other/crypto_roulette.sol#L40"
    },
    {
        "description": "CryptoRoulette.play(uint256) (shared/other/crypto_roulette.sol#37-52) uses a dangerous strict equality:\n\t- number == secretNumber (shared/other/crypto_roulette.sol#45)\n",
        "check": "incorrect-equality",
        "impact": "Medium",
        "confidence": "High",
        "first_markdown_element": "shared/other/crypto_roulette.sol#L37-L52"
    }
]