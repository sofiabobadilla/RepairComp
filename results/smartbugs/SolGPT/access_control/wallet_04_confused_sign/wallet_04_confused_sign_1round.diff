--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/access_control/wallet_04_confused_sign.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/SolGPT/access_control/wallet_04_confused_sign/wallet_04_confused_sign_1round.sol
@@ -1,42 +1,27 @@
-/*

- * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-105#wallet-04-confused-signsol

- * @author: -

- * @vulnerable_at_lines: 30

- */

+pragma solidity ^0.4.24;

 

- pragma solidity ^0.4.24;

+contract Wallet {

+    address creator;

 

- /* User can add pay in and withdraw Ether.

-    Unfortunatelty, the developer was drunk and used the wrong comparison operator in "withdraw()"

-    Anybody can withdraw arbitrary amounts of Ether :()

- */

+    mapping(address => uint256) balances;

 

- contract Wallet {

-     address creator;

+    constructor() public {

+        creator = msg.sender;

+    }

 

-     mapping(address => uint256) balances;

+    function deposit() public payable {

+        require(balances[msg.sender] + msg.value >= balances[msg.sender]);

+        balances[msg.sender] += msg.value;

+    }

 

-     constructor() public {

-         creator = msg.sender;

-     }

+    function withdraw(uint256 amount) public {

+        require(amount <= balances[msg.sender]);

+        balances[msg.sender] -= amount;

+        msg.sender.transfer(amount);

+    }

 

-     function deposit() public payable {

-         assert(balances[msg.sender] + msg.value > balances[msg.sender]);

-         balances[msg.sender] += msg.value;

-     }

-

-     function withdraw(uint256 amount) public {

-         // <yes> <report> ACCESS_CONTROL

-         require(amount >= balances[msg.sender]);

-         msg.sender.transfer(amount);

-         balances[msg.sender] -= amount;

-     }

-

-     // In an emergency the owner can migrate  allfunds to a different address.

-

-     function migrateTo(address to) public {

-         require(creator == msg.sender);

-         to.transfer(this.balance);

-     }

-

- }

+    function migrateTo(address to) public {

+        require(creator == msg.sender);

+        to.transfer(address(this).balance);

+    }

+}