--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/time_manipulation/lottopollo.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/SolGPT/time_manipulation/lottopollo/lottopollo_1round.sol
@@ -1,33 +1,28 @@
-/*

- * @source: https://github.com/seresistvanandras/EthBench/blob/master/Benchmark/Simple/timestampdependent.sol

- * @author: -

- * @vulnerable_at_lines: 13,27

- */

+pragma solidity ^0.4.0;

 

-pragma solidity ^0.4.0;

 contract lottopollo {

-  address leader;

-  uint    timestamp;

-  function payOut(uint rand) internal {

-    // <yes> <report> TIME MANIPULATION

-    if ( rand> 0 && now - rand > 24 hours ) {

-      msg.sender.send( msg.value );

+    address leader;

+    uint timestamp;

 

-      if ( this.balance > 0 ) {

-        leader.send( this.balance );

-      }

+    function payOut(uint rand) internal {

+        if (rand > 0 && now - rand > 24 hours) {

+            if (msg.sender.send(msg.value)) {

+                if (this.balance > 0) {

+                    leader.transfer(this.balance);

+                }

+            }

+        } else if (msg.value >= 1 ether) {

+            leader = msg.sender;

+            timestamp = rand;

+        }

     }

-    else if ( msg.value >= 1 ether ) {

-      leader = msg.sender;

-      timestamp = rand;

+

+    function randomGen() constant returns (uint randomNumber) {

+        return uint(keccak256(block.timestamp)) % 100;

     }

-  }

-  function randomGen() constant returns (uint randomNumber) {

-      // <yes> <report> TIME MANIPULATION

-      return block.timestamp;   

+

+    function draw(uint seed) {

+        uint randomNumber = randomGen();

+        payOut(randomNumber);

     }

-  function draw(uint seed){

-    uint randomNumber=randomGen(); 

-    payOut(randomNumber);

-  }

 }