2024-07-04 18:38:59,315 - root - INFO - 
Reading file 'dos_address.sol' 

2024-07-04 18:38:59,316 - root - INFO - 
Pragma: 0.4.25 

2024-07-04 18:38:59,316 - root - INFO - 
Processing /home/mokita/sc_study/smartbugs-curated/dataset/denial_of_service/dos_address.sol 

2024-07-04 18:38:59,316 - root - INFO - 
try 1/4: /home/mokita/sc_study/smartbugs-curated/dataset/denial_of_service/dos_address_1round.sol  

2024-07-04 18:38:59,324 - root - INFO - 

        Docker container name: slither
        Docker image name: trailofbits/eth-security-toolbox
        Docker shared folder: /home/mokita/sc_study/smartbugs-curated/dataset:/home/ethsec/shared
        Docker command: None
         

2024-07-04 18:38:59,326 - root - INFO - 
Running command: solc-select use --always-install 0.4.25 

2024-07-04 18:38:59,500 - root - INFO - 
Running command: slither shared/denial_of_service/dos_address.sol --json - 

2024-07-04 18:39:00,213 - root - INFO - 
b'{"success": true, "error": null, "results": {"detectors": [{"elements": [{"type": "contract", "name": "DosGas", "source_mapping": {"start": 201, "length": 647, "filename_relative": "shared/denial_of_service/dos_address.sol", "filename_absolute": "/home/ethsec/shared/denial_of_service/dos_address.sol", "filename_short": "shared/denial_of_service/dos_address.sol", "is_dependency": false, "lines": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "starting_column": 1, "ending_column": 2}}, {"type": "node", "name": "creditorAddresses.push(msg.sender)", "source_mapping": {"start": 590, "length": 34, "filename_relative": "shared/denial_of_service/dos_address.sol", "filename_absolute": "/home/ethsec/shared/denial_of_service/dos_address.sol", "filename_short": "shared/denial_of_service/dos_address.sol", "is_dependency": false, "lines": [24], "starting_column": 11, "ending_column": 45}, "type_specific_fields": {"parent": {"type": "function", "name": "addCreditors", "source_mapping": {"start": 498, "length": 164, "filename_relative": "shared/denial_of_service/dos_address.sol", "filename_absolute": "/home/ethsec/shared/denial_of_service/dos_address.sol", "filename_short": "shared/denial_of_service/dos_address.sol", "is_dependency": false, "lines": [22, 23, 24, 25, 26, 27], "starting_column": 5, "ending_column": 6}, "type_specific_fields": {"parent": {"type": "contract", "name": "DosGas", "source_mapping": {"start": 201, "length": 647, "filename_relative": "shared/denial_of_service/dos_address.sol", "filename_absolute": "/home/ethsec/shared/denial_of_service/dos_address.sol", "filename_short": "shared/denial_of_service/dos_address.sol", "is_dependency": false, "lines": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "starting_column": 1, "ending_column": 2}}, "signature": "addCreditors()"}}}}], "description": "DosGas (shared/denial_of_service/dos_address.sol#9-36) contract sets array length with a user-controlled value:\\n\\t- creditorAddresses.push(msg.sender) (shared/denial_of_service/dos_address.sol#24)\\n", "markdown": "[DosGas](shared/denial_of_service/dos_address.sol#L9-L36) contract sets array length with a user-controlled value:\\n\\t- [creditorAddresses.push(msg.sender)](shared/denial_of_service/dos_address.sol#L24)\\n", "first_markdown_element": "shared/denial_of_service/dos_address.sol#L9-L36", "id": "5790f799c219b4a2d4aa52ac2122807299acecec5a084510daa8edcb157631d5", "check": "controlled-array-length", "impact": "High", "confidence": "Medium"}, {"elements": [], "description": "solc-0.4.25 is not recommended for deployment\\n", "markdown": "solc-0.4.25 is not recommended for deployment\\n", "first_markdown_element": "", "id": "4d64003d70a62b1c6963f871e841b6cbd633d07d95554e1a50e0f25d9b71ebb3", "check": "solc-version", "impact": "Informational", "confidence": "High"}, {"elements": [{"type": "pragma", "name": "^0.4.25", "source_mapping": {"start": 175, "length": 24, "filename_relative": "shared/denial_of_service/dos_address.sol", "filename_absolute": "/home/ethsec/shared/denial_of_service/dos_address.sol", "filename_short": "shared/denial_of_service/dos_address.sol", "is_dependency": false, "lines": [7], "starting_column": 1, "ending_column": 25}, "type_specific_fields": {"directive": ["solidity", "^", "0.4", ".25"]}}], "description": "Pragma version^0.4.25 (shared/denial_of_service/dos_address.sol#7) allows old versions\\n", "markdown": "Pragma version[^0.4.25](shared/denial_of_service/dos_address.sol#L7) allows old versions\\n", "first_markdown_element": "shared/denial_of_service/dos_address.sol#L7", "id": "64efa9592aa111d32f2e58a33ff8cc698014341da68c300d6aa82ac2b3217341", "check": "solc-version", "impact": "Informational", "confidence": "High"}]}}\n' 

2024-07-04 18:39:00,214 - root - INFO - 
Found 1 vulnerabilities of severity Medium 

2024-07-04 18:39:03,040 - root - INFO - 
NEW CODE: pragma solidity ^0.4.25;

contract DosGas {

    address[] creditorAddresses;
    bool win = false;

    function emptyCreditors() public {

        if(creditorAddresses.length > 1500) {
            delete creditorAddresses;
            win = true;
        }
    }

    function addCreditors() public returns (bool) {
        require(creditorAddresses.length + 350 <= 1500);
        for(uint i=0; i<350; i++) {
            creditorAddresses.push(msg.sender);
        }
        return true;
    }

    function iWin() public view returns (bool) {
        return win;
    }

    function numberCreditors() public view returns (uint) {
        return creditorAddresses.length;
    }
} 

2024-07-04 18:39:03,040 - root - INFO - 
try 2/4: /home/mokita/sc_study/smartbugs-curated/dataset/denial_of_service/dos_address_2round.sol  

2024-07-04 18:39:03,040 - root - INFO - 
Found 1 vulnerabilities of severity Medium 

2024-07-04 18:39:06,007 - root - INFO - 
NEW CODE: pragma solidity ^0.4.25;

contract DosGas {

    address[] creditorAddresses;
    bool win = false;

    function emptyCreditors() public {

        if(creditorAddresses.length > 1500) {
            delete creditorAddresses;
            win = true;
        }
    }

    function addCreditors() public returns (bool) {
        require(creditorAddresses.length + 350 <= 1500);
        for(uint i=0; i<350; i++) {
            creditorAddresses.push(msg.sender);
        }
        return true;
    }

    function iWin() public view returns (bool) {
        return win;
    }

    function numberCreditors() public view returns (uint) {
        return creditorAddresses.length;
    }
} 

2024-07-04 18:39:06,008 - root - INFO - 
try 3/4: /home/mokita/sc_study/smartbugs-curated/dataset/denial_of_service/dos_address_3round.sol  

2024-07-04 18:39:06,008 - root - INFO - 
Found 1 vulnerabilities of severity Medium 

2024-07-04 18:39:08,875 - root - INFO - 
NEW CODE: pragma solidity ^0.4.25;

contract DosGas {

    address[] creditorAddresses;
    bool win = false;

    function emptyCreditors() public {

        if(creditorAddresses.length > 1500) {
            delete creditorAddresses;
            win = true;
        }
    }

    function addCreditors() public returns (bool) {
        require(creditorAddresses.length + 350 <= 1500);
        for(uint i=0; i<350; i++) {
            creditorAddresses.push(msg.sender);
        }
        return true;
    }

    function iWin() public view returns (bool) {
        return win;
    }

    function numberCreditors() public view returns (uint) {
        return creditorAddresses.length;
    }
} 

2024-07-04 18:39:08,875 - root - INFO - 
try 4/4: /home/mokita/sc_study/smartbugs-curated/dataset/denial_of_service/dos_address_4round.sol  

2024-07-04 18:39:08,876 - root - INFO - 
Found 1 vulnerabilities of severity Medium 

2024-07-04 18:39:11,538 - root - INFO - 
NEW CODE: pragma solidity ^0.4.25;

contract DosGas {

    address[] creditorAddresses;
    bool win = false;

    function emptyCreditors() public {

        if(creditorAddresses.length > 1500) {
            delete creditorAddresses;
            win = true;
        }
    }

    function addCreditors() public returns (bool) {
        require(creditorAddresses.length + 350 <= 1500);
        for(uint i=0; i<350; i++) {
            creditorAddresses.push(msg.sender);
        }
        return true;
    }

    function iWin() public view returns (bool) {
        return win;
    }

    function numberCreditors() public view returns (uint) {
        return creditorAddresses.length;
    }
} 

