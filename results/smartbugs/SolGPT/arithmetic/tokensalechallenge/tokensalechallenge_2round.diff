--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/arithmetic/tokensalechallenge.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/SolGPT/arithmetic/tokensalechallenge/tokensalechallenge_2round.sol
@@ -1,9 +1,3 @@
-/*

- * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101 // https://capturetheether.com/challenges/math/token-sale/

- * @author: Steve Marx

- * @vulnerable_at_lines: 23,25,33

- */

-

 pragma solidity ^0.4.21;

 

 contract TokenSaleChallenge {

@@ -19,9 +13,9 @@
     }

 

     function buy(uint256 numTokens) public payable {

-        // <yes> <report> ARITHMETIC

-        require(msg.value == numTokens * PRICE_PER_TOKEN);

-        // <yes> <report> ARITHMETIC

+        uint256 totalCost = numTokens * PRICE_PER_TOKEN;

+        require(msg.value == totalCost);

+

         balanceOf[msg.sender] += numTokens;

     }

 

@@ -29,7 +23,8 @@
         require(balanceOf[msg.sender] >= numTokens);

 

         balanceOf[msg.sender] -= numTokens;

-        // <yes> <report> ARITHMETIC

-        msg.sender.transfer(numTokens * PRICE_PER_TOKEN);

+

+        uint256 totalEthers = numTokens * PRICE_PER_TOKEN;

+        msg.sender.transfer(totalEthers);

     }

-}

+}