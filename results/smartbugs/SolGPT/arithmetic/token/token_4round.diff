--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/arithmetic/token.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/SolGPT/arithmetic/token/token_4round.sol
@@ -1,30 +1,23 @@
-/*

- * @source: https://github.com/sigp/solidity-security-blog

- * @author: Steve Marx

- * @vulnerable_at_lines: 20,22

- */

+pragma solidity ^0.4.18;

 

- pragma solidity ^0.4.18;

+contract Token {

 

- contract Token {

+    mapping(address => uint) balances;

+    uint public totalSupply;

 

-   mapping(address => uint) balances;

-   uint public totalSupply;

+    function Token(uint _initialSupply) {

+        balances[msg.sender] = totalSupply = _initialSupply;

+    }

 

-   function Token(uint _initialSupply) {

-     balances[msg.sender] = totalSupply = _initialSupply;

-   }

+    function transfer(address _to, uint _value) public returns (bool) {

+        require(balances[msg.sender] >= _value); // Fixed the vulnerability here

 

-   function transfer(address _to, uint _value) public returns (bool) {

-     // <yes> <report> ARITHMETIC

-     require(balances[msg.sender] - _value >= 0);

-     // <yes> <report> ARITHMETIC

-     balances[msg.sender] -= _value;

-     balances[_to] += _value;

-     return true;

-   }

+        balances[msg.sender] -= _value;

+        balances[_to] += _value;

+        return true;

+    }

 

-   function balanceOf(address _owner) public constant returns (uint balance) {

-     return balances[_owner];

-   }

- }

+    function balanceOf(address _owner) public constant returns (uint balance) {

+        return balances[_owner];

+    }

+}