2024-07-04 18:49:17,415 - root - INFO - 
Reading file 'reentrancy_insecure.sol' 

2024-07-04 18:49:17,416 - root - INFO - 
Pragma: 0.5.0 

2024-07-04 18:49:17,416 - root - INFO - 
Processing /home/mokita/sc_study/smartbugs-curated/dataset/reentrancy/reentrancy_insecure.sol 

2024-07-04 18:49:17,416 - root - INFO - 
try 1/4: /home/mokita/sc_study/smartbugs-curated/dataset/reentrancy/reentrancy_insecure_1round.sol  

2024-07-04 18:49:17,423 - root - INFO - 

        Docker container name: slither
        Docker image name: trailofbits/eth-security-toolbox
        Docker shared folder: /home/mokita/sc_study/smartbugs-curated/dataset:/home/ethsec/shared
        Docker command: None
         

2024-07-04 18:49:17,426 - root - INFO - 
Running command: solc-select use --always-install 0.5.0 

2024-07-04 18:49:18,724 - root - INFO - 
Running command: slither shared/reentrancy/reentrancy_insecure.sol --json - 

2024-07-04 18:49:19,442 - root - INFO - 
b'{"success": true, "error": null, "results": {"detectors": [{"elements": [{"type": "function", "name": "withdrawBalance", "source_mapping": {"start": 273, "length": 356, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [14, 15, 16, 17, 18, 19, 20], "starting_column": 5, "ending_column": 6}, "type_specific_fields": {"parent": {"type": "contract", "name": "Reentrancy_insecure", "source_mapping": {"start": 168, "length": 463, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "starting_column": 1, "ending_column": 2}}, "signature": "withdrawBalance()"}}, {"type": "node", "name": "(success) = msg.sender.call.value(amountToWithdraw)()", "source_mapping": {"start": 412, "length": 62, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [17], "starting_column": 9, "ending_column": 71}, "type_specific_fields": {"parent": {"type": "function", "name": "withdrawBalance", "source_mapping": {"start": 273, "length": 356, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [14, 15, 16, 17, 18, 19, 20], "starting_column": 5, "ending_column": 6}, "type_specific_fields": {"parent": {"type": "contract", "name": "Reentrancy_insecure", "source_mapping": {"start": 168, "length": 463, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "starting_column": 1, "ending_column": 2}}, "signature": "withdrawBalance()"}}}, "additional_fields": {"underlying_type": "external_calls"}}, {"type": "node", "name": "userBalances[msg.sender] = 0", "source_mapping": {"start": 594, "length": 28, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [19], "starting_column": 9, "ending_column": 37}, "type_specific_fields": {"parent": {"type": "function", "name": "withdrawBalance", "source_mapping": {"start": 273, "length": 356, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [14, 15, 16, 17, 18, 19, 20], "starting_column": 5, "ending_column": 6}, "type_specific_fields": {"parent": {"type": "contract", "name": "Reentrancy_insecure", "source_mapping": {"start": 168, "length": 463, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "starting_column": 1, "ending_column": 2}}, "signature": "withdrawBalance()"}}}, "additional_fields": {"underlying_type": "variables_written", "variable_name": "userBalances"}}], "description": "Reentrancy in Reentrancy_insecure.withdrawBalance() (shared/reentrancy/reentrancy_insecure.sol#14-20):\\n\\tExternal calls:\\n\\t- (success) = msg.sender.call.value(amountToWithdraw)() (shared/reentrancy/reentrancy_insecure.sol#17)\\n\\tState variables written after the call(s):\\n\\t- userBalances[msg.sender] = 0 (shared/reentrancy/reentrancy_insecure.sol#19)\\n\\tReentrancy_insecure.userBalances (shared/reentrancy/reentrancy_insecure.sol#12) can be used in cross function reentrancies:\\n\\t- Reentrancy_insecure.withdrawBalance() (shared/reentrancy/reentrancy_insecure.sol#14-20)\\n", "markdown": "Reentrancy in [Reentrancy_insecure.withdrawBalance()](shared/reentrancy/reentrancy_insecure.sol#L14-L20):\\n\\tExternal calls:\\n\\t- [(success) = msg.sender.call.value(amountToWithdraw)()](shared/reentrancy/reentrancy_insecure.sol#L17)\\n\\tState variables written after the call(s):\\n\\t- [userBalances[msg.sender] = 0](shared/reentrancy/reentrancy_insecure.sol#L19)\\n\\t[Reentrancy_insecure.userBalances](shared/reentrancy/reentrancy_insecure.sol#L12) can be used in cross function reentrancies:\\n\\t- [Reentrancy_insecure.withdrawBalance()](shared/reentrancy/reentrancy_insecure.sol#L14-L20)\\n", "first_markdown_element": "shared/reentrancy/reentrancy_insecure.sol#L14-L20", "id": "4ab7cf47f773c7bde2ad1de8d1e4fc3ae32cfb566888afd4d4658a7b55bbc03a", "check": "reentrancy-eth", "impact": "High", "confidence": "Medium"}, {"elements": [], "description": "solc-0.5.0 is not recommended for deployment\\n", "markdown": "solc-0.5.0 is not recommended for deployment\\n", "first_markdown_element": "", "id": "21539c75e015cde5bdae3a77b39cf5d17be24d0b87a05da1d6b5d5020b7aef22", "check": "solc-version", "impact": "Informational", "confidence": "High"}, {"elements": [{"type": "pragma", "name": "^0.5.0", "source_mapping": {"start": 143, "length": 23, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [7], "starting_column": 1, "ending_column": 24}, "type_specific_fields": {"directive": ["solidity", "^", "0.5", ".0"]}}], "description": "Pragma version^0.5.0 (shared/reentrancy/reentrancy_insecure.sol#7) allows old versions\\n", "markdown": "Pragma version[^0.5.0](shared/reentrancy/reentrancy_insecure.sol#L7) allows old versions\\n", "first_markdown_element": "shared/reentrancy/reentrancy_insecure.sol#L7", "id": "8549d9f1a3311edf2b08a21abf4d7d91a44d4d2180f56fc5809235e327cdc5f0", "check": "solc-version", "impact": "Informational", "confidence": "High"}, {"elements": [{"type": "function", "name": "withdrawBalance", "source_mapping": {"start": 273, "length": 356, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [14, 15, 16, 17, 18, 19, 20], "starting_column": 5, "ending_column": 6}, "type_specific_fields": {"parent": {"type": "contract", "name": "Reentrancy_insecure", "source_mapping": {"start": 168, "length": 463, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "starting_column": 1, "ending_column": 2}}, "signature": "withdrawBalance()"}}, {"type": "node", "name": "(success) = msg.sender.call.value(amountToWithdraw)()", "source_mapping": {"start": 412, "length": 62, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [17], "starting_column": 9, "ending_column": 71}, "type_specific_fields": {"parent": {"type": "function", "name": "withdrawBalance", "source_mapping": {"start": 273, "length": 356, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [14, 15, 16, 17, 18, 19, 20], "starting_column": 5, "ending_column": 6}, "type_specific_fields": {"parent": {"type": "contract", "name": "Reentrancy_insecure", "source_mapping": {"start": 168, "length": 463, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "starting_column": 1, "ending_column": 2}}, "signature": "withdrawBalance()"}}}}], "description": "Low level call in Reentrancy_insecure.withdrawBalance() (shared/reentrancy/reentrancy_insecure.sol#14-20):\\n\\t- (success) = msg.sender.call.value(amountToWithdraw)() (shared/reentrancy/reentrancy_insecure.sol#17)\\n", "markdown": "Low level call in [Reentrancy_insecure.withdrawBalance()](shared/reentrancy/reentrancy_insecure.sol#L14-L20):\\n\\t- [(success) = msg.sender.call.value(amountToWithdraw)()](shared/reentrancy/reentrancy_insecure.sol#L17)\\n", "first_markdown_element": "shared/reentrancy/reentrancy_insecure.sol#L14-L20", "id": "a308a93c8d1923875ea1f694967455316045021b70b506ea0b32c4dc6812a7c0", "check": "low-level-calls", "impact": "Informational", "confidence": "High"}, {"elements": [{"type": "contract", "name": "Reentrancy_insecure", "source_mapping": {"start": 168, "length": 463, "filename_relative": "shared/reentrancy/reentrancy_insecure.sol", "filename_absolute": "/home/ethsec/shared/reentrancy/reentrancy_insecure.sol", "filename_short": "shared/reentrancy/reentrancy_insecure.sol", "is_dependency": false, "lines": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "starting_column": 1, "ending_column": 2}, "additional_fields": {"target": "contract", "convention": "CapWords"}}], "description": "Contract Reentrancy_insecure (shared/reentrancy/reentrancy_insecure.sol#9-21) is not in CapWords\\n", "markdown": "Contract [Reentrancy_insecure](shared/reentrancy/reentrancy_insecure.sol#L9-L21) is not in CapWords\\n", "first_markdown_element": "shared/reentrancy/reentrancy_insecure.sol#L9-L21", "id": "d3f84bb0c008d009f04bb29170bf81a5a3eab8588c075eab23fbaa07c3c765f6", "check": "naming-convention", "impact": "Informational", "confidence": "High"}]}}\n' 

2024-07-04 18:49:19,444 - root - INFO - 
Found 1 vulnerabilities of severity Medium 

2024-07-04 18:49:21,131 - root - INFO - 
NEW CODE: pragma solidity ^0.5.0;

contract Reentrancy_insecure {

    mapping (address => uint) private userBalances;
    mapping (address => bool) private locked;

    function withdrawBalance() public {
        require(!locked[msg.sender]);
        locked[msg.sender] = true;
        
        uint amountToWithdraw = userBalances[msg.sender];
        userBalances[msg.sender] = 0;
        
        (bool success, ) = msg.sender.call.value(amountToWithdraw)("");
        require(success);
        
        locked[msg.sender] = false;
    }
} 

2024-07-04 18:49:21,132 - root - INFO - 
try 2/4: /home/mokita/sc_study/smartbugs-curated/dataset/reentrancy/reentrancy_insecure_2round.sol  

2024-07-04 18:49:21,132 - root - INFO - 
Found 1 vulnerabilities of severity Medium 

2024-07-04 18:49:23,161 - root - INFO - 
NEW CODE: pragma solidity ^0.5.0;

contract Reentrancy_insecure {

    mapping (address => uint) private userBalances;
    mapping (address => bool) private locked;

    function withdrawBalance() public {
        require(!locked[msg.sender]);
        locked[msg.sender] = true;
        
        uint amountToWithdraw = userBalances[msg.sender];
        userBalances[msg.sender] = 0;
        
        (bool success, ) = msg.sender.call.value(amountToWithdraw)("");
        require(success);
        
        locked[msg.sender] = false;
    }
} 

2024-07-04 18:49:23,162 - root - INFO - 
try 3/4: /home/mokita/sc_study/smartbugs-curated/dataset/reentrancy/reentrancy_insecure_3round.sol  

2024-07-04 18:49:23,162 - root - INFO - 
Found 1 vulnerabilities of severity Medium 

2024-07-04 18:49:24,814 - root - INFO - 
NEW CODE: pragma solidity ^0.5.0;

contract Reentrancy_insecure {

    mapping (address => uint) private userBalances;
    mapping (address => bool) private locked;

    function withdrawBalance() public {
        require(!locked[msg.sender]);
        locked[msg.sender] = true;
        
        uint amountToWithdraw = userBalances[msg.sender];
        userBalances[msg.sender] = 0;
        
        (bool success, ) = msg.sender.call.value(amountToWithdraw)("");
        require(success);
        
        locked[msg.sender] = false;
    }
} 

2024-07-04 18:49:24,815 - root - INFO - 
try 4/4: /home/mokita/sc_study/smartbugs-curated/dataset/reentrancy/reentrancy_insecure_4round.sol  

2024-07-04 18:49:24,815 - root - INFO - 
Found 1 vulnerabilities of severity Medium 

2024-07-04 18:49:26,760 - root - INFO - 
NEW CODE: pragma solidity ^0.5.0;

contract Reentrancy_insecure {

    mapping (address => uint) private userBalances;
    mapping (address => bool) private locked;

    function withdrawBalance() public {
        require(!locked[msg.sender], "Withdrawal in progress");
        locked[msg.sender] = true;
        
        uint amountToWithdraw = userBalances[msg.sender];
        userBalances[msg.sender] = 0;
        
        (bool success, ) = msg.sender.call.value(amountToWithdraw)("");
        require(success);
        
        locked[msg.sender] = false;
    }
} 

