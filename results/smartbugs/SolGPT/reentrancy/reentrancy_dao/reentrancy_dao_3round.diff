--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/reentrancy/reentrancy_dao.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/SolGPT/reentrancy/reentrancy_dao/reentrancy_dao_3round.sol
@@ -1,9 +1,3 @@
-/*

- * @source: https://github.com/ConsenSys/evm-analyzer-benchmark-suite

- * @author: Suhabe Bugrara

- * @vulnerable_at_lines: 18

- */

-

 pragma solidity ^0.4.19;

 

 contract ReentrancyDAO {

@@ -12,17 +6,17 @@
 

     function withdrawAll() public {

         uint oCredit = credit[msg.sender];

-        if (oCredit > 0) {

-            balance -= oCredit;

-            // <yes> <report> REENTRANCY

-            bool callResult = msg.sender.call.value(oCredit)();

-            require (callResult);

-            credit[msg.sender] = 0;

-        }

+        require(oCredit > 0);

+        

+        credit[msg.sender] = 0; // Update credit before making external call

+        balance -= oCredit;

+

+        bool callResult = msg.sender.call.value(oCredit)();

+        require(callResult);

     }

 

     function deposit() public payable {

         credit[msg.sender] += msg.value;

         balance += msg.value;

     }

-}

+}