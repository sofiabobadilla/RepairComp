
> symEvm@1.0.0 dev /sGuard
> node src/index.js "smartbugs/dataset/access_control/wallet_03_wrong_constructor.sol" "results/access_control/wallet_03_wrong_constructor" "Wallet"

smartbugs/dataset/access_control/wallet_03_wrong_constructor.sol
{ bugFixes:
   { 'Hh*6o{OO~^ET@MoHqsd3jY|qhEWZF0':
      'balances[msg.sender] = sub_uint256(balances[msg.sender], amount)',
     '!T<*,EWZj?U/%^o+5>ovlEV@yNW(f*T6': 'add_uint256(balances[msg.sender], msg.value)',
     'sqUzFTd/8\'t0syiqS~': ' function deposit() nonReentrant_ ',
     'K{)U-VQqAW5qZHPS_,7oo4,Vk\'l(Jy-J<':
      'balances[msg.sender] = add_uint256(balances[msg.sender], msg.value)',
     '[2ahM!+Z_uD@Fe/X': 'contract Wallet  is sGuard ',
     '6W+wg8E2m3Zg>Q],"%$__<C!\'1iL/>6Ti': ' function withdraw(uint256 amount) nonReentrant_ ' },
  source:
   '/*\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-105#wallet-03-wrong-constructorsol\n * @author: -\n * @vulnerable_at_lines: 19,20\n */\n\n\n /* User can add pay in and withdraw Ether.\n    The constructor is wrongly named, so anyone can become \'creator\' and withdraw all funds.\n */\n\n [2ahM!+Z_uD@Fe/X{\n     address creator;\n\n     mapping(address => uint256) balances;\n     \n     // <yes> <report> ACCESS_CONTROL\n     function initWallet() public {\n         creator = msg.sender;\n     }\n\n     sqUzFTd/8\'t0syiqS~ public payable {\n         assert(!T<*,EWZj?U/%^o+5>ovlEV@yNW(f*T6 > balances[msg.sender]);\n         K{)U-VQqAW5qZHPS_,7oo4,Vk\'l(Jy-J<;\n     }\n\n     6W+wg8E2m3Zg>Q],"%$__<C!\'1iL/>6Ti public {\n         require(amount <= balances[msg.sender]);\n         msg.sender.transfer(amount);\n         Hh*6o{OO~^ET@MoHqsd3jY|qhEWZF0;\n     }\n\n     // In an emergency the owner can migrate  allfunds to a different address.\n\n     function migrateTo(address to) public {\n         require(creator == msg.sender);\n         to.transfer(this.balance);\n     }\n\n }\n',
  wrappers: Set { 'sub_uint256', 'add_uint256', 'nonReentrant_' } }
