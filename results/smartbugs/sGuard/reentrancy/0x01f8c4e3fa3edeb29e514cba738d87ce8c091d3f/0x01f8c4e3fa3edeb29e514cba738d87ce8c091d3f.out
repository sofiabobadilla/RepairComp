
> symEvm@1.0.0 dev /sGuard
> node src/index.js "smartbugs/dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol" "results/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f" "PERSONAL_BANK"

smartbugs/dataset/reentrancy/0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol
{ bugFixes:
   { '[BsRp>y,X#[nS!$L7VYy<U\'"3':
      'balances[msg.sender] = sub_uint256(balances[msg.sender], _am)',
     'S\'kAHKl[\'iy0-&:cFvO|=M+M:GRRH': ' function SetMinSum(uint _val) nonReentrant_ ',
     'M]F?s\'MNN=9$\'})QEi*Us8': ' function Initialized() nonReentrant_ ',
     'dHomp]YfbyLe#8l\'T)': ' function Deposit() nonReentrant_ ',
     'hYh2<.;c>9979w<6L_En,/i': 'contract PERSONAL_BANK\n is sGuard ',
     'H"Zw&6\\d`<hJv+GkA0e"kpZU$H,\\)N`5':
      'balances[msg.sender] = add_uint256(balances[msg.sender], msg.value)',
     '9/)6zhVB@tz;h_-@=KQcVMqY2]': ' function Collect(uint _am) nonReentrant_ ',
     'x~A6>8Ry0jB|Z(U@s(}e.&g?x=>!,t%(C': ' function SetLogFile(address _log) nonReentrant_ ',
     'vu<:fCSwZ<"TMD&Tq': 'contract LogFile\n is sGuard ' },
  source:
   '/*\n * @source: etherscan.io \n * @author: -\n * @vulnerable_at_lines: 54\n */\n\n\nhYh2<.;c>9979w<6L_En,/i{\n    mapping (address=>uint256) public balances;   \n   \n    uint public MinSum = 1 ether;\n    \n    LogFile Log = LogFile(0x0486cF65A2F2F3A392CBEa398AFB7F5f0B72FF46);\n    \n    bool intitalized;\n    \n    S\'kAHKl[\'iy0-&:cFvO|=M+M:GRRH\n    public\n    {\n        if(intitalized)revert();\n        MinSum = _val;\n    }\n    \n    x~A6>8Ry0jB|Z(U@s(}e.&g?x=>!,t%(C\n    public\n    {\n        if(intitalized)revert();\n        Log = LogFile(_log);\n    }\n    \n    M]F?s\'MNN=9$\'})QEi*Us8\n    public\n    {\n        intitalized = true;\n    }\n    \n    dHomp]YfbyLe#8l\'T)\n    public\n    payable\n    {\n        H"Zw&6\\d`<hJv+GkA0e"kpZU$H,\\)N`5;\n        Log.AddMessage(msg.sender,msg.value,"Put");\n    }\n    \n    9/)6zhVB@tz;h_-@=KQcVMqY2]\n    public\n    payable\n    {\n        if(balances[msg.sender]>=MinSum && balances[msg.sender]>=_am)\n        {\n            // <yes> <report> REENTRANCY\n            if(msg.sender.call.value(_am)())\n            {\n                [BsRp>y,X#[nS!$L7VYy<U\'"3;\n                Log.AddMessage(msg.sender,_am,"Collect");\n            }\n        }\n    }\n    \n    function() \n    public \n    payable\n    {\n        Deposit();\n    }\n    \n}\n\n\n\nvu<:fCSwZ<"TMD&Tq{\n    struct Message\n    {\n        address Sender;\n        string  Data;\n        uint Val;\n        uint  Time;\n    }\n    \n    Message[] public History;\n    \n    Message LastMsg;\n    \n    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n}',
  wrappers: Set { 'sub_uint256', 'nonReentrant_', 'add_uint256' } }
