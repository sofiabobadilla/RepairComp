
> symEvm@1.0.0 dev /sGuard
> node src/index.js "smartbugs/dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol" "results/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782" "PrivateDeposit"

smartbugs/dataset/reentrancy/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol
{ bugFixes:
   { 'MiT-tMDe9qm$]`uteOurIMn+c':
      'balances[msg.sender] = sub_uint256(balances[msg.sender], _am)',
     'T7+-3-5~8Jv$/<5u*kF_O_!\'Em': ' function CashOut(uint _am) nonReentrant_ ',
     'mf+IB#!1D': 'msg.sender',
     'WA48rlQLk5=]"gJ;};K&(]{;': 'contract PrivateDeposit\n is sGuard ',
     'w1tj5^HF:nt0pt4t\'k;E(e;NwI0G#+H':
      'balances[msg.sender] = add_uint256(balances[msg.sender], msg.value)',
     'G$Oh-aS;LeE|KY': 'contract Log \n is sGuard ',
     '8*hf"N`R>dcrdIj=86': ' function Deposit() nonReentrant_ ' },
  source:
   '/*\n * @source: etherscan.io \n * @author: -\n * @vulnerable_at_lines: 52\n */\n\n\nWA48rlQLk5=]"gJ;};K&(]{;{\n    mapping (address => uint) public balances;\n        \n    uint public MinDeposit = 1 ether;\n    address public owner;\n    \n    Log TransferLog;\n    \n    modifier onlyOwner() {\n        require(mf+IB#!1D == owner);\n        _;\n    }    \n    \n    function PrivateDeposit()\n    {\n        owner = msg.sender;\n        TransferLog = new Log();\n    }\n    \n    \n    \n    function setLog(address _lib) onlyOwner\n    {\n        TransferLog = Log(_lib);\n    }    \n    \n    8*hf"N`R>dcrdIj=86\n    public\n    payable\n    {\n        if(msg.value >= MinDeposit)\n        {\n            w1tj5^HF:nt0pt4t\'k;E(e;NwI0G#+H;\n            TransferLog.AddMessage(msg.sender,msg.value,"Deposit");\n        }\n    }\n    \n    T7+-3-5~8Jv$/<5u*kF_O_!\'Em\n    {\n        if(_am<=balances[msg.sender])\n        {            \n            // <yes> <report> REENTRANCY\n            if(msg.sender.call.value(_am)())\n            {\n                MiT-tMDe9qm$]`uteOurIMn+c;\n                TransferLog.AddMessage(msg.sender,_am,"CashOut");\n            }\n        }\n    }\n    \n    function() public payable{}    \n    \n}\n\nG$Oh-aS;LeE|KY{\n   \n    struct Message\n    {\n        address Sender;\n        string  Data;\n        uint Val;\n        uint  Time;\n    }\n    \n    Message[] public History;\n    \n    Message LastMsg;\n    \n    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n}',
  wrappers: Set { 'sub_uint256', 'nonReentrant_', 'add_uint256' } }
