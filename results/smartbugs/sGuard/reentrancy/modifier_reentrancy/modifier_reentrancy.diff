--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/reentrancy/modifier_reentrancy.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/sGuard/reentrancy/modifier_reentrancy/modifier_reentrancy.sol
@@ -1,19 +1,36 @@
+contract sGuard{

+  function add_uint256(uint256 a, uint256 b) internal pure returns (uint256) {

+    uint256 c = a + b;

+    assert(c >= a);

+    return c;

+  }

+  

+  bool internal locked_;

+  constructor() internal {

+    locked_ = false;

+  }

+  modifier nonReentrant_() {

+    require(!locked_);

+    locked_ = true;

+    _;

+    locked_ = false;

+  }

+}

 /*

  * @source: https://github.com/SmartContractSecurity/SWC-registry/blob/master/test_cases/reentracy/modifier_reentrancy.sol

  * @author: - 

  * @vulnerable_at_lines: 15

  */

 

-pragma solidity ^0.4.24;

 

-contract ModifierEntrancy {

+contract ModifierEntrancy  is sGuard {

   mapping (address => uint) public tokenBalance;

   string constant name = "Nu Token";

 

   //If a contract has a zero balance and supports the token give them some token

   // <yes> <report> REENTRANCY

-  function airDrop() hasNoBalance supportsToken  public{

-    tokenBalance[msg.sender] += 20;

+   function airDrop() nonReentrant_  hasNoBalance supportsToken  public{

+    tokenBalance[msg.sender] = add_uint256(tokenBalance[msg.sender], 20);

   }

 

   //Checks that the contract responds the way we want

@@ -28,13 +45,13 @@
   }

 }

 

-contract Bank{

+contract Bank is sGuard {

     function supportsToken() external pure returns(bytes32){

         return(keccak256(abi.encodePacked("Nu Token")));

     }

 }

 

-contract attack{ //An example of a contract that breaks the contract above.

+contract attack is sGuard { //An example of a contract that breaks the contract above.

     bool hasBeenCalled;

     function supportsToken() external returns(bytes32){

         if(!hasBeenCalled){
