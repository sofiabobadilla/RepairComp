
> symEvm@1.0.0 dev /sGuard
> node src/index.js "smartbugs/dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol" "results/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106" "PRIVATE_ETH_CELL"

smartbugs/dataset/reentrancy/0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol
{ bugFixes:
   { 'M0sI#;2,O[m,)|,"/I2Wzn3cd':
      'balances[msg.sender] = sub_uint256(balances[msg.sender], _am)',
     '>>^B0"&pzv`Kljv.Q|Oh0ocRA?C+/': ' function SetMinSum(uint _val) nonReentrant_ ',
     '4.RY:n~ZH@kz\\v?:U3a~&%': ' function Initialized() nonReentrant_ ',
     '{R=U_(F,3_:,wV_Mj[': ' function Deposit() nonReentrant_ ',
     'o}nlTg~jv]g;QB>grt%lGq\'R.#': 'contract PRIVATE_ETH_CELL\n is sGuard ',
     '4*(<rvXI-+iL_TM=)Kr]o*bn?/M),47~':
      'balances[msg.sender] = add_uint256(balances[msg.sender], msg.value)',
     'P]D~Tpl>l^ht\'zHjw^#fB6U{_x': ' function Collect(uint _am) nonReentrant_ ',
     'y0FD"d)fgS.8HIfV`elB}FT%<pTe.o1=%': ' function SetLogFile(address _log) nonReentrant_ ',
     'In#npVq]s"B^I8\\oS': 'contract LogFile\n is sGuard ' },
  source:
   '/*\n * @source: etherscan.io \n * @author: -\n * @vulnerable_at_lines: 54\n */\n\n\no}nlTg~jv]g;QB>grt%lGq\'R.#{\n    mapping (address=>uint256) public balances;   \n   \n    uint public MinSum;\n    \n    LogFile Log;\n    \n    bool intitalized;\n    \n    >>^B0"&pzv`Kljv.Q|Oh0ocRA?C+/\n    public\n    {\n        require(!intitalized);\n        MinSum = _val;\n    }\n    \n    y0FD"d)fgS.8HIfV`elB}FT%<pTe.o1=%\n    public\n    {\n        require(!intitalized);\n        Log = LogFile(_log);\n    }\n    \n    4.RY:n~ZH@kz\\v?:U3a~&%\n    public\n    {\n        intitalized = true;\n    }\n    \n    {R=U_(F,3_:,wV_Mj[\n    public\n    payable\n    {\n        4*(<rvXI-+iL_TM=)Kr]o*bn?/M),47~;\n        Log.AddMessage(msg.sender,msg.value,"Put");\n    }\n    \n    P]D~Tpl>l^ht\'zHjw^#fB6U{_x\n    public\n    payable\n    {\n        if(balances[msg.sender]>=MinSum && balances[msg.sender]>=_am)\n        {\n            // <yes> <report> REENTRANCY\n            if(msg.sender.call.value(_am)())\n            {\n                M0sI#;2,O[m,)|,"/I2Wzn3cd;\n                Log.AddMessage(msg.sender,_am,"Collect");\n            }\n        }\n    }\n    \n    function() \n    public \n    payable\n    {\n        Deposit();\n    }\n    \n}\n\n\n\nIn#npVq]s"B^I8\\oS{\n    struct Message\n    {\n        address Sender;\n        string  Data;\n        uint Val;\n        uint  Time;\n    }\n    \n    Message[] public History;\n    \n    Message LastMsg;\n    \n    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n}',
  wrappers: Set { 'sub_uint256', 'nonReentrant_', 'add_uint256' } }
