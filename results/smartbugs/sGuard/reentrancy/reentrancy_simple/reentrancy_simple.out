
> symEvm@1.0.0 dev /sGuard
> node src/index.js "smartbugs/dataset/reentrancy/reentrancy_simple.sol" "results/reentrancy/reentrancy_simple" "Reentrance"

smartbugs/dataset/reentrancy/reentrancy_simple.sol
{ bugFixes:
   { 'DoYB;8Q"LU__?ITp1+v2uSy[yLdb5^R$6Eho':
      'userBalance[msg.sender] = add_uint256(userBalance[msg.sender], msg.value)',
     'ir]["W";\'IfZ*y|3ca6E*!]>Xs': ' function withdrawBalance() nonReentrant_ ',
     '9U5-<K9GWYlHhds>9,j/[re': ' function addToBalance() nonReentrant_ ',
     'SO`(/<V\\3)J[uQkARpm(': 'contract Reentrance  is sGuard ' },
  source:
   '/*\n * @source: https://github.com/trailofbits/not-so-smart-contracts/blob/master/reentrancy/Reentrancy.sol\n * @author: -\n * @vulnerable_at_lines: 24\n */\n\n\n SO`(/<V\\3)J[uQkARpm({\n     mapping (address => uint) userBalance;\n\n     function getBalance(address u) constant returns(uint){\n         return userBalance[u];\n     }\n\n     9U5-<K9GWYlHhds>9,j/[re payable{\n         DoYB;8Q"LU__?ITp1+v2uSy[yLdb5^R$6Eho;\n     }\n\n     ir]["W";\'IfZ*y|3ca6E*!]>Xs{\n         // send userBalance[msg.sender] ethers to msg.sender\n         // if mgs.sender is a contract, it will call its fallback function\n         // <yes> <report> REENTRANCY\n         if( ! (msg.sender.call.value(userBalance[msg.sender])() ) ){\n             throw;\n         }\n         userBalance[msg.sender] = 0;\n     }\n }\n',
  wrappers: Set { 'add_uint256', 'nonReentrant_' } }
