
> symEvm@1.0.0 dev /sGuard
> node src/index.js "smartbugs/dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol" "results/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e" "ETH_FUND"

smartbugs/dataset/reentrancy/0x941d225236464a25eb18076df7da6a91d0f95e9e.sol
{ bugFixes:
   { 'pQYB"*vl^|j_wKwTq/scEwk+H':
      'balances[msg.sender] = sub_uint256(balances[msg.sender], _am)',
     'W{`T<H=[-J0WG3|q:*': ' function Deposit() nonReentrant_ ',
     '1`xAM09uxM%g~u': 'contract Log \n is sGuard ',
     'LS;R|W?`BEqz%Gwd\'tP-^Em~n;@OW%x':
      'balances[msg.sender] = add_uint256(balances[msg.sender], msg.value)',
     '!2c.nZV%7xcpAqVG7H': 'contract ETH_FUND\n is sGuard ',
     ']Hj]uppOJ}NUjg#s}9NX[F$rW?': ' function CashOut(uint _am) nonReentrant_ ' },
  source:
   '/*\n * @source: etherscan.io \n * @author: -\n * @vulnerable_at_lines: 44\n */\n\n\n!2c.nZV%7xcpAqVG7H{\n    mapping (address => uint) public balances;\n    \n    uint public MinDeposit = 1 ether;\n    \n    Log TransferLog;\n    \n    uint lastBlock;\n    \n    function ETH_FUND(address _log)\n    public \n    {\n        TransferLog = Log(_log);\n    }\n    \n    W{`T<H=[-J0WG3|q:*\n    public\n    payable\n    {\n        if(msg.value > MinDeposit)\n        {\n            LS;R|W?`BEqz%Gwd\'tP-^Em~n;@OW%x;\n            TransferLog.AddMessage(msg.sender,msg.value,"Deposit");\n            lastBlock = block.number;\n        }\n    }\n    \n    ]Hj]uppOJ}NUjg#s}9NX[F$rW?\n    public\n    payable\n    {\n        if(_am<=balances[msg.sender]&&block.number>lastBlock)\n        {\n            // <yes> <report> REENTRANCY\n            if(msg.sender.call.value(_am)())\n            {\n                pQYB"*vl^|j_wKwTq/scEwk+H;\n                TransferLog.AddMessage(msg.sender,_am,"CashOut");\n            }\n        }\n    }\n    \n    function() public payable{}    \n    \n}\n\n1`xAM09uxM%g~u{\n   \n    struct Message\n    {\n        address Sender;\n        string  Data;\n        uint Val;\n        uint  Time;\n    }\n    \n    Message[] public History;\n    \n    Message LastMsg;\n    \n    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n}',
  wrappers: Set { 'sub_uint256', 'nonReentrant_', 'add_uint256' } }
