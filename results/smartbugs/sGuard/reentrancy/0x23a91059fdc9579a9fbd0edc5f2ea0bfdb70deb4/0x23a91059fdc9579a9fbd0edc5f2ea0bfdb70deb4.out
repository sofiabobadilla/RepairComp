
> symEvm@1.0.0 dev /sGuard
> node src/index.js "smartbugs/dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol" "results/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4" "PrivateBank"

smartbugs/dataset/reentrancy/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol
{ bugFixes:
   { 'g/~]>s!sYK@^qQnpTrYj"|`I.':
      'balances[msg.sender] = sub_uint256(balances[msg.sender], _am)',
     'y-2$1=XK9~CA9CNs<zRZ>2e!Vo': ' function CashOut(uint _am) nonReentrant_ ',
     '?Aips/5J*pY5Z)': 'contract Log \n is sGuard ',
     '0FQ-fQ^%dQ!>+-f2"d2TdvFMeF${8\'S':
      'balances[msg.sender] = add_uint256(balances[msg.sender], msg.value)',
     '>!79`SeDE_hew6o`"26S1': 'contract PrivateBank\n is sGuard ',
     'Bo&%x7FwHG)gX>=#0*': ' function Deposit() nonReentrant_ ' },
  source:
   '/*\n * @source: etherscan.io \n * @author: -\n * @vulnerable_at_lines: 38\n */\n\n\n>!79`SeDE_hew6o`"26S1{\n    mapping (address => uint) public balances;\n    \n    uint public MinDeposit = 1 ether;\n    \n    Log TransferLog;\n    \n    function PrivateBank(address _log)\n    {\n        TransferLog = Log(_log);\n    }\n    \n    Bo&%x7FwHG)gX>=#0*\n    public\n    payable\n    {\n        if(msg.value >= MinDeposit)\n        {\n            0FQ-fQ^%dQ!>+-f2"d2TdvFMeF${8\'S;\n            TransferLog.AddMessage(msg.sender,msg.value,"Deposit");\n        }\n    }\n    \n    y-2$1=XK9~CA9CNs<zRZ>2e!Vo\n    {\n        if(_am<=balances[msg.sender])\n        {            \n            // <yes> <report> REENTRANCY\n            if(msg.sender.call.value(_am)())\n            {\n                g/~]>s!sYK@^qQnpTrYj"|`I.;\n                TransferLog.AddMessage(msg.sender,_am,"CashOut");\n            }\n        }\n    }\n    \n    function() public payable{}    \n    \n}\n\n?Aips/5J*pY5Z){\n   \n    struct Message\n    {\n        address Sender;\n        string  Data;\n        uint Val;\n        uint  Time;\n    }\n    \n    Message[] public History;\n    \n    Message LastMsg;\n    \n    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n}',
  wrappers: Set { 'sub_uint256', 'nonReentrant_', 'add_uint256' } }
