{"bugFixes":{"M'ez8{S>\\^6)kV@m":"acc.balance = sub_uint256(acc.balance, _am)","zqe|\\o5@L0D'*":"add_uint256(now, _lockTime)","D8D]?dVVvC!tT@]:_NCE#8&2l#^W\"":" function SetMinSum(uint _val) nonReentrant_ ","J<:9/{:g\"Pus~S{z4^fjO@":" function Initialized() nonReentrant_ ","G*Q>k_zXrXWmknyCDIS**v!.Ku(t":" function Put(uint _lockTime) nonReentrant_ ","Us;S<(qBh.*IZ0z2zr;Zrx#.nE":"contract PENNY_BY_PENNY  \n is sGuard ","L{`Q<z',ze-`r":"add_uint256(now, _lockTime)","75x7G>ZX;pL&5Wi&-B0J_RV-=f_C|{F`Q":" function SetLogFile(address _log) nonReentrant_ ","X|B3#>B{\\i\\BSgLI&":"contract LogFile\n is sGuard ","*>b81Ty1`uk1(I#T(FRi193J":"acc.balance = add_uint256(acc.balance, msg.value)","B,Bnb*X:\"l}e&({_d0KMNnVA2u":" function Collect(uint _am) nonReentrant_ "},"source":"/*\n * @source: etherscan.io \n * @author: -\n * @vulnerable_at_lines: 63\n */\n\n\nUs;S<(qBh.*IZ0z2zr;Zrx#.nE{\n    struct Holder   \n    {\n        uint unlockTime;\n        uint balance;\n    }\n    \n    mapping (address => Holder) public Acc;\n    \n    uint public MinSum;\n    \n    LogFile Log;\n    \n    bool intitalized;\n    \n    D8D]?dVVvC!tT@]:_NCE#8&2l#^W\"\n    public\n    {\n        if(intitalized)throw;\n        MinSum = _val;\n    }\n    \n    75x7G>ZX;pL&5Wi&-B0J_RV-=f_C|{F`Q\n    public\n    {\n        if(intitalized)throw;\n        Log = LogFile(_log);\n    }\n    \n    J<:9/{:g\"Pus~S{z4^fjO@\n    public\n    {\n        intitalized = true;\n    }\n    \n    G*Q>k_zXrXWmknyCDIS**v!.Ku(t\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        *>b81Ty1`uk1(I#T(FRi193J;\n        if(zqe|\\o5@L0D'*>acc.unlockTime)acc.unlockTime=L{`Q<z',ze-`r;\n        Log.AddMessage(msg.sender,msg.value,\"Put\");\n    }\n    \n    B,Bnb*X:\"l}e&({_d0KMNnVA2u\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            // <yes> <report> REENTRANCY\n            if(msg.sender.call.value(_am)())\n            {\n                M'ez8{S>\\^6)kV@m;\n                Log.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }\n    }\n    \n    function() \n    public \n    payable\n    {\n        Put(0);\n    }\n    \n}\n\n\nX|B3#>B{\\i\\BSgLI&{\n    struct Message\n    {\n        address Sender;\n        string  Data;\n        uint Val;\n        uint  Time;\n    }\n    \n    Message[] public History;\n    \n    Message LastMsg;\n    \n    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n}","wrappers":{}}