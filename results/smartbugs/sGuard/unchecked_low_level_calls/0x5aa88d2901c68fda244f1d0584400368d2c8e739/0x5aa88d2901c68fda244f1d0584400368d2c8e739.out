
> symEvm@1.0.0 dev /sGuard
> node src/index.js "smartbugs/dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol" "results/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739" "MultiplicatorX3"

smartbugs/dataset/unchecked_low_level_calls/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol
{ bugFixes:
   { '4K80LxHxZ<r?#@4Cw!8DG)': 'add_uint256(this.balance, msg.value)',
     'Hu.1Q8Gfy7#G!\'dWwcLJ_l$_]': 'contract MultiplicatorX3\n is sGuard ' },
  source:
   '/*\n * @source: etherscan.io \n * @author: -\n * @vulnerable_at_lines: 29\n */\n\n\nHu.1Q8Gfy7#G!\'dWwcLJ_l$_]{\n    address public Owner = msg.sender;\n   \n    function() public payable{}\n   \n    function withdraw()\n    payable\n    public\n    {\n        require(msg.sender == Owner);\n        Owner.transfer(this.balance);\n    }\n    \n    function Command(address adr,bytes data)\n    payable\n    public\n    {\n        require(msg.sender == Owner);\n        // <yes> <report> UNCHECKED_LL_CALLS\n        adr.call.value(msg.value)(data);\n    }\n    \n    function multiplicate(address adr)\n    public\n    payable\n    {\n        if(msg.value>=this.balance)\n        {        \n            adr.transfer(4K80LxHxZ<r?#@4Cw!8DG));\n        }\n    }\n}',
  wrappers: Set { 'add_uint256' } }
