
> symEvm@1.0.0 dev /sGuard
> node src/index.js "smartbugs/dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol" "results/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c" "Proxy"

smartbugs/dataset/unchecked_low_level_calls/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol
{ bugFixes: {},
  source:
   '/*\n * @source: etherscan.io \n * @author: -\n * @vulnerable_at_lines: 14\n */\n\n\ncontract Proxy  {\n    modifier onlyOwner { if (msg.sender == Owner) _; } address Owner = msg.sender;\n    function transferOwner(address _owner) public onlyOwner { Owner = _owner; } \n    function proxy(address target, bytes data) public payable {\n        // <yes> <report> UNCHECKED_LL_CALLS\n        target.call.value(msg.value)(data);\n    }\n}\n\ncontract VaultProxy is Proxy {\n    address public Owner;\n    mapping (address => uint256) public Deposits;\n\n    function () public payable { }\n    \n    function Vault() public payable {\n        if (msg.sender == tx.origin) {\n            Owner = msg.sender;\n            deposit();\n        }\n    }\n    \n    function deposit() public payable {\n        if (msg.value > 0.5 ether) {\n            Deposits[msg.sender] += msg.value;\n        }\n    }\n    \n    function withdraw(uint256 amount) public onlyOwner {\n        if (amount>0 && Deposits[msg.sender]>=amount) {\n            msg.sender.transfer(amount);\n        }\n    }\n}',
  wrappers: Set {} }
