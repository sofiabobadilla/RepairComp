--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/sGuard/unchecked_low_level_calls/0x7d09edb07d23acb532a82be3da5c17d9d85806b4/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol
@@ -1,13 +1,24 @@
+contract sGuard{

+  function div_uint256(uint256 a, uint256 b) internal pure returns (uint256) {

+    uint256 c = a / b;

+    return c;

+  }

+  

+  function add_uint256(uint256 a, uint256 b) internal pure returns (uint256) {

+    uint256 c = a + b;

+    assert(c >= a);

+    return c;

+  }

+}

 /*

  * @source: etherscan.io 

  * @author: -

  * @vulnerable_at_lines: 198,210 

  */

 

-pragma solidity ^0.4.24;

 

 contract PoCGame

-{

+ is sGuard {

     

     /**

      * Modifiers

@@ -27,7 +38,7 @@
 

     modifier onlyRealPeople()

     {

-          require (msg.sender == tx.origin);

+          require (msg.sender == msg.sender);

         _;

     }

 

@@ -147,16 +158,16 @@
             timestamps[msg.sender] = 0;

             wagers[msg.sender] = 0;

     

-            uint256 winningNumber = uint256(keccak256(abi.encodePacked(blockhash(blockNumber),  msg.sender)))%difficulty +1;

-    

-            if(winningNumber == difficulty / 2)

+            uint256 winningNumber = add_uint256(uint256(keccak256(abi.encodePacked(blockhash(blockNumber),  msg.sender)))%difficulty, 1);

+    

+            if(winningNumber == div_uint256(difficulty, 2))

             {

                 payout(msg.sender);

             }

             else 

             {

                 //player loses

-                loseWager(betLimit / 2);

+                loseWager(div_uint256(betLimit, 2));

             }    

         }

         else

@@ -182,7 +193,7 @@
     function payout(address winner) 

     internal 

     {

-        uint256 ethToTransfer = address(this).balance / 2;

+        uint256 ethToTransfer = div_uint256(address(this).balance, 2);

         

         winner.transfer(ethToTransfer);

         emit Win(ethToTransfer, winner);

@@ -289,6 +300,6 @@
 

 //Define ERC20Interface.transfer, so PoCWHALE can transfer tokens accidently sent to it.

 contract ERC20Interface 

-{

+ is sGuard {

     function transfer(address to, uint256 tokens) public returns (bool success);

 }