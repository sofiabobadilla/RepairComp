--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/sGuard/unchecked_low_level_calls/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol
@@ -1,24 +1,46 @@
+contract sGuard{

+  function sub_uint256(uint256 a, uint256 b) internal pure returns (uint256) {

+    assert(b <= a);

+    return a - b;

+  }

+  

+  bool internal locked_;

+  constructor() internal {

+    locked_ = false;

+  }

+  modifier nonReentrant_() {

+    require(!locked_);

+    locked_ = true;

+    _;

+    locked_ = false;

+  }

+  

+  function add_uint256(uint256 a, uint256 b) internal pure returns (uint256) {

+    uint256 c = a + b;

+    assert(c >= a);

+    return c;

+  }

+}

 /*

  * @source: etherscan.io 

  * @author: -

  * @vulnerable_at_lines: 44

  */

 

-pragma solidity ^0.4.19;

 

 contract Ownable

-{

+ is sGuard {

     address newOwner;

     address owner = msg.sender;

     

-    function changeOwner(address addr)

+     function changeOwner(address addr) nonReentrant_ 

     public

     onlyOwner

     {

         newOwner = addr;

     }

     

-    function confirmOwner() 

+     function confirmOwner() nonReentrant_  

     public

     {

         if(msg.sender==newOwner)

@@ -33,7 +55,7 @@
     }

 }

 

-contract Token is Ownable

+contract Token is sGuard,  Ownable

 {

     address owner = msg.sender;

     function WithdrawToken(address token, uint256 amount,address to)

@@ -45,13 +67,13 @@
     }

 }

 

-contract TokenBank is Token

+contract TokenBank is sGuard,  Token

 {

     uint public MinDeposit;

     mapping (address => uint) public Holders;

     

      ///Constructor

-    function initTokenBank()

+     function initTokenBank() nonReentrant_ 

     public

     {

         owner = msg.sender;

@@ -64,16 +86,16 @@
         Deposit();

     }

    

-    function Deposit() 

+     function Deposit() nonReentrant_  

     payable

     {

         if(msg.value>MinDeposit)

         {

-            Holders[msg.sender]+=msg.value;

+            Holders[msg.sender] = add_uint256(Holders[msg.sender], msg.value);

         }

     }

     

-    function WitdrawTokenToHolder(address _to,address _token,uint _amount)

+     function WitdrawTokenToHolder(address _to,address _token,uint _amount) nonReentrant_ 

     public

     onlyOwner

     {

@@ -84,7 +106,7 @@
         }

     }

    

-    function WithdrawToHolder(address _addr, uint _wei) 

+     function WithdrawToHolder(address _addr, uint _wei) nonReentrant_  

     public

     onlyOwner

     payable

@@ -93,7 +115,7 @@
         {

             if(_addr.call.value(_wei)())

             {

-                Holders[_addr]-=_wei;

+                Holders[_addr] = sub_uint256(Holders[_addr], _wei);

             }

         }

     }
