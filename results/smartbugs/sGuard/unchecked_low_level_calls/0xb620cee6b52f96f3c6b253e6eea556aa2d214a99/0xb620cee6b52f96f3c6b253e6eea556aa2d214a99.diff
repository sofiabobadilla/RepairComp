--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/sGuard/unchecked_low_level_calls/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol
@@ -1,3 +1,9 @@
+contract sGuard{

+  function sub_uint256(uint256 a, uint256 b) internal pure returns (uint256) {

+    assert(b <= a);

+    return a - b;

+  }

+}

 /*

  * @source: etherscan.io 

  * @author: -

@@ -9,9 +15,8 @@
 // 0.02 to play

 

 

-pragma solidity ^0.4.23;

 

-contract DrainMe {

+contract DrainMe  is sGuard {

 

 //constants

 

@@ -83,7 +88,7 @@
 }

 

 function unlockSecret() private returns(bool){

-    bytes32 hash = keccak256(blockhash(block.number-1));

+    bytes32 hash = keccak256(blockhash(sub_uint256(block.number, 1)));

     uint256 secret = uint256(hash);

         if(secret%5==0){

             winner = msg.sender;
