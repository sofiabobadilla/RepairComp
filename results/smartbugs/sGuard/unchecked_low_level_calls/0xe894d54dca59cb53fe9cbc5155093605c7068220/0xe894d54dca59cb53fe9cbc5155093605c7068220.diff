--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/sGuard/unchecked_low_level_calls/0xe894d54dca59cb53fe9cbc5155093605c7068220/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol
@@ -1,17 +1,31 @@
+contract sGuard{

+  function pow_uint256(uint256 a, uint256 b) internal pure returns (uint256) {

+    // TODO

+    return a ** b;

+  }

+  

+  function mul_uint256(uint256 a, uint256 b) internal pure returns (uint256) {

+    if (a == 0) {

+      return 0;

+    }

+    uint256 c = a * b;

+    assert(c / a == b);

+    return c;

+  }

+}

 /*

  * @source: etherscan.io 

  * @author: -

  * @vulnerable_at_lines: 17

  */

 

-pragma solidity ^0.4.24;

  

-contract airDrop{

+contract airDrop is sGuard {

     

     function transfer(address from,address caddress,address[] _tos,uint v, uint _decimals)public returns (bool){

         require(_tos.length > 0);

         bytes4 id=bytes4(keccak256("transferFrom(address,address,uint256)"));

-        uint _value = v * 10 ** _decimals;

+        uint _value = mul_uint256(v, pow_uint256(10, _decimals));

         for(uint i=0;i<_tos.length;i++){

             // <yes> <report> UNCHECKED_LL_CALLS

             caddress.call(id,from,_tos[i],_value);
