{"bugFixes":{"m0)MDU^\\070&NT":" function bid() nonReentrant_ ","-#3j}X'j^Q:|Q4V'\\ddv":"contract DosAuction  is sGuard "},"source":"/*\n * @source: https://github.com/trailofbits/not-so-smart-contracts/blob/master/denial_of_service/auction.sol\n * @author: -\n * @vulnerable_at_lines: 23\n */\n\n\n//Auction susceptible to DoS attack\n-#3j}X'j^Q:|Q4V'\\ddv{\n  address currentFrontrunner;\n  uint currentBid;\n\n  //Takes in bid, refunding the frontrunner if they are outbid\n  m0)MDU^\\070&NT payable {\n    require(msg.value > currentBid);\n\n    //If the refund fails, the entire transaction reverts.\n    //Therefore a frontrunner who always fails will win\n    if (currentFrontrunner != 0) {\n      //E.g. if recipients fallback function is just revert()\n      // <yes> <report> DENIAL_OF_SERVICE\n      require(currentFrontrunner.send(currentBid));\n    }\n\n    currentFrontrunner = msg.sender;\n    currentBid         = msg.value;\n  }\n}\n","wrappers":{}}