--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/front_running/eth_tx_order_dependence_minimal.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/sGuard/front_running/eth_tx_order_dependence_minimal/eth_tx_order_dependence_minimal.sol
@@ -1,12 +1,23 @@
+contract sGuard{

+  bool internal locked_;

+  constructor() internal {

+    locked_ = false;

+  }

+  modifier nonReentrant_() {

+    require(!locked_);

+    locked_ = true;

+    _;

+    locked_ = false;

+  }

+}

 /*

  * @source: https://github.com/ConsenSys/evm-analyzer-benchmark-suite

  * @author: Suhabe Bugrara

  * @vulnerable_at_lines: 23,31

  */

 

-pragma solidity ^0.4.16;

 

-contract EthTxOrderDependenceMinimal {

+contract EthTxOrderDependenceMinimal  is sGuard {

     address public owner;

     bool public claimed;

     uint public reward;

@@ -15,7 +26,7 @@
         owner = msg.sender;

     }

 

-    function setReward() public payable {

+     function setReward() nonReentrant_  public payable {

         require (!claimed);

 

         require(msg.sender == owner);

@@ -24,7 +35,7 @@
         reward = msg.value;

     }

 

-    function claimReward(uint256 submission) {

+     function claimReward(uint256 submission) nonReentrant_  {

         require (!claimed);

         require(submission < 10);

         // <yes> <report> FRONT_RUNNING
