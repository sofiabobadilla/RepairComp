{"bugFixes":{"[3oB68UfsEafi=^#r+)N8-8Vf@HGj`+}\"IF":"add_uint256(players[0].number, players[1].number)","sj;XEf=x`[xDmx4zTMKi-m:0D}":" function play(uint number) nonReentrant_ ","-\\Y5l":"(tot = add_uint8(tot, 1))","\"n^G9`qa&aisU-p}D>SHn":"contract OddsAndEvens is sGuard "},"source":"/*\n * @source: http://blockchain.unica.it/projects/ethereum-survey/attacks.html#oddsandevens\n * @author: -\n * @vulnerable_at_lines: 25,28\n */\n\n\n\"n^G9`qa&aisU-p}D>SHn{\n\n  struct Player {\n    address addr;\n    uint number;\n  }\n\n  Player[2] public players;         //public only for debug purpose\n\n  uint8 tot;\n  address owner;\n\n  function OddsAndEvens() {\n    owner = msg.sender;\n  }\n// <yes> <report> FRONT_RUNNING\n  sj;XEf=x`[xDmx4zTMKi-m:0D} payable{\n    if (msg.value != 1 ether) throw;\n    // <yes> <report> FRONT_RUNNING\n    players[tot] = Player(msg.sender, number);\n    -\\Y5l;\n\n    if (tot==2) andTheWinnerIs();\n  }\n\n  function andTheWinnerIs() private {\n    bool res ;\n    uint n = [3oB68UfsEafi=^#r+)N8-8Vf@HGj`+}\"IF;\n    if (n%2==0) {\n      res = players[0].addr.send(1800 finney);\n    }\n    else {\n      res = players[1].addr.send(1800 finney);\n    }\n\n    delete players;\n    tot=0;\n  }\n\n  function getProfit() {\n    if(msg.sender!=owner) throw;\n    bool res = msg.sender.send(this.balance);\n  }\n\n}\n","wrappers":{}}