[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.003167s
[INFO] # path : 16

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.00095s
Generating VCs ... took 0.002458s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.027204
[
0 -> true
]
[
]
1/5 ... [IO] line 39, (pot + msg.value) ... proven
2/5 ... [IO] line 40, (pot + msg.value) ... proven
3/5 ... [IO] line 53, (pot - FEE_AMOUNT) ... proven
4/5 ... [ETH_LEAK] line 50, bank.transfer(FEE_AMOUNT); ... unproven
5/5 ... [ETH_LEAK] line 53, msg.sender.transfer((pot - FEE_AMOUNT)); ... unproven
took 11.00752s

Generating VCs ... took 0.001256s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 11.039315
[
0 -> (Read(@TU, bank__@9) == true)
]
[
]
1/5 ... [IO] line 39, (pot + msg.value) ... proven
2/5 ... [IO] line 40, (pot + msg.value) ... proven
3/5 ... [IO] line 53, (pot - FEE_AMOUNT) ... proven
4/5 ... [ETH_LEAK] line 50, bank.transfer(FEE_AMOUNT); ... proven
5/5 ... [ETH_LEAK] line 53, msg.sender.transfer((pot - FEE_AMOUNT)); ... unproven
took 7.047314s

Generating VCs ... took 0.001284s
Checking validity of VCs ... took 1.596562s

Generating VCs ... took 0.001413s
Checking validity of VCs ... took 0.011458s

Generating VCs ... took 0.001241s
Checking validity of VCs ... took 0.08014s

Generating VCs ... took 0.001319s
Checking validity of VCs ... took 0.087736s

Generating VCs ... took 0.001321s
Checking validity of VCs ... took 0.088221s

Generating VCs ... took 0.001258s
Checking validity of VCs ... took 0.085577s

Generating VCs ... took 0.001364s
Checking validity of VCs ... took 0.087778s

Iter : 10 To explore : 193 Explored : 244 Total elapsed : 20.146964
Generating VCs ... took 0.001239s
Checking validity of VCs ... took 1.767087s

Generating VCs ... took 0.001229s
Checking validity of VCs ... took 0.086988s

Generating VCs ... took 0.001477s
Checking validity of VCs ... took 3.063731s

Generating VCs ... took 0.001342s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 13 Total elapsed : 25.165561
[
0 -> ((TICKET_AMOUNT__@4 == 10) /\ (Read(@TU, bank__@9) == true))
]
[
]
1/5 ... [IO] line 39, (pot + msg.value) ... proven
2/5 ... [IO] line 40, (pot + msg.value) ... proven
3/5 ... [IO] line 53, (pot - FEE_AMOUNT) ... proven
4/5 ... [ETH_LEAK] line 50, bank.transfer(FEE_AMOUNT); ... proven
5/5 ... [ETH_LEAK] line 53, msg.sender.transfer((pot - FEE_AMOUNT)); ... unproven
took 6.324186s

Generating VCs ... took 0.001285s
Checking validity of VCs ... took 0.086623s

Generating VCs ... took 0.001254s
Checking validity of VCs ... took 3.063263s

Generating VCs ... took 0.001267s
Checking validity of VCs ... took 4.359695s

Generating VCs ... took 0.001255s
Checking validity of VCs ... took 0.089263s

Generating VCs ... took 0.001355s
Checking validity of VCs ... took 0.092643s

Generating VCs ... took 0.001328s
Checking validity of VCs ... took 0.09312s

Iter : 20 To explore : 169 Explored : 499 Total elapsed : 39.224638
Generating VCs ... took 0.001371s
Checking validity of VCs ... took 2.382279s

Generating VCs ... took 0.001269s
Checking validity of VCs ... took 0.088283s

Generating VCs ... took 0.001279s
Checking validity of VCs ... took 0.090287s

Generating VCs ... took 0.00129399999999s
Checking validity of VCs ... took 1.890131s

Generating VCs ... took 0.001334s
Checking validity of VCs ... took 1.848841s

Generating VCs ... took 0.001375s
Checking validity of VCs ... took 5.69627s

Generating VCs ... took 0.00126599999999s
Checking validity of VCs ... took 0.373885s

Generating VCs ... took 0.00132799999999s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 27 Total elapsed : 51.718664
[
0 -> (((FEE_AMOUNT__@7 == 1) /\ (TICKET_AMOUNT__@4 == 10)) /\ (Read(@TU, bank__@9) == true))
]
[
]
1/5 ... [IO] line 39, (pot + msg.value) ... proven
2/5 ... [IO] line 40, (pot + msg.value) ... proven
3/5 ... [IO] line 53, (pot - FEE_AMOUNT) ... proven
4/5 ... [ETH_LEAK] line 50, bank.transfer(FEE_AMOUNT); ... proven
5/5 ... [ETH_LEAK] line 53, msg.sender.transfer((pot - FEE_AMOUNT)); ... unproven
took 1.385825s

Generating VCs ... took 0.001229s
Checking validity of VCs ... took 1.902478s

Generating VCs ... took 0.001278s
Checking validity of VCs ... took 2.670196s

Iter : 30 To explore : 79 Explored : 647 Total elapsed : 57.612892
Generating VCs ... took 0.001264s
Checking validity of VCs ... took 2.336765s

Generating VCs ... took 0.001279s
Checking validity of VCs ... took 1.743169s

Generating VCs ... took 0.001224s
Checking validity of VCs ... took 0.330034s

Generating VCs ... took 0.001288s
Checking validity of VCs ... took 1.69838s

Generating VCs ... took 0.001302s
Checking validity of VCs ... took 1.731486s

Generating VCs ... took 0.001215s
Checking validity of VCs ... took 0.092486s

Generating VCs ... took 0.00126899999999s
Checking validity of VCs ... took 0.091604s

Generating VCs ... took 0.001304s
Checking validity of VCs ... took 4.36045s

Generating VCs ... took 0.001396s
Checking validity of VCs ... took 6.459102s

Generating VCs ... took 0.00129s
Checking validity of VCs ... took 6.413081s

Iter : 40 To explore : 87 Explored : 665 Total elapsed : 82.918313
Generating VCs ... took 0.001215s
Checking validity of VCs ... took 6.220325s

Generating VCs ... took 0.00134s
Checking validity of VCs ... took 0.242121s

Generating VCs ... took 0.001265s
Checking validity of VCs ... took 0.117222s

Generating VCs ... took 0.001227s
Checking validity of VCs ... took 0.120561s

Generating VCs ... took 0.00135299999999s
Checking validity of VCs ... took 0.128603s

Generating VCs ... took 0.00291s
Checking validity of VCs ... took 0.245748s

Generating VCs ... took 0.001267s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 46 Total elapsed : 90.118355
[
0 -> ((((TICKET_AMOUNT__@4 >= FEE_AMOUNT__@7) /\ (FEE_AMOUNT__@7 == 1)) /\ (TICKET_AMOUNT__@4 == 10)) /\ (Read(@TU, bank__@9) == true))
]
[
]
1/5 ... [IO] line 39, (pot + msg.value) ... proven
2/5 ... [IO] line 40, (pot + msg.value) ... proven
3/5 ... [IO] line 53, (pot - FEE_AMOUNT) ... proven
4/5 ... [ETH_LEAK] line 50, bank.transfer(FEE_AMOUNT); ... proven
5/5 ... [ETH_LEAK] line 53, msg.sender.transfer((pot - FEE_AMOUNT)); ... unproven
took 1.099064s

Generating VCs ... took 0.001294s
Checking validity of VCs ... took 1.708756s

Generating VCs ... took 0.001282s
Checking validity of VCs ... took 1.727831s

Generating VCs ... took 0.00127099999999s
Checking validity of VCs ... took 2.122604s

Iter : 50 To explore : 84 Explored : 759 Total elapsed : 96.706239
Generating VCs ... took 0.001307s
Checking validity of VCs ... took 1.916361s

Generating VCs ... took 0.00120700000001s
Checking validity of VCs ... took 0.316529s

Generating VCs ... took 0.003531s
Checking validity of VCs ... took 2.730602s

Generating VCs ... took 0.001312s
Checking validity of VCs ... took 3.798971s

Generating VCs ... took 0.00135400000001s
Checking validity of VCs ... took 3.464014s

Generating VCs ... took 0.001239s
Checking validity of VCs ... took 5.892279s

Generating VCs ... took 0.00129199999999s
Checking validity of VCs ... took 6.338859s

Generating VCs ... took 0.00123499999999s
Checking validity of VCs ... took 2.712257s

Generating VCs ... took 0.00127499999999s
Checking validity of VCs ... took 8.385183s

Generating VCs ... took 0.001316s
Checking validity of VCs ... took 0.116003s

Iter : 60 To explore : 76 Explored : 761 Total elapsed : 132.433266
Generating VCs ... took 0.00130499999997s
Checking validity of VCs ... took 0.118747s

Generating VCs ... took 0.001294s
Checking validity of VCs ... took 7.860621s

Generating VCs ... took 0.00132200000002s
Checking validity of VCs ... took 0.220134s

Generating VCs ... took 0.001259s
Checking validity of VCs ... took 0.117576s

Generating VCs ... took 0.00125299999999s
Checking validity of VCs ... took 0.240359s

Generating VCs ... took 0.001248s
Checking validity of VCs ... took 2.269027s

Generating VCs ... took 0.00121300000001s
Checking validity of VCs ... took 4.502974s

Generating VCs ... took 0.00124799999998s
Checking validity of VCs ... took 4.501665s

Generating VCs ... took 0.000607000000002s
Checking validity of VCs ... 
1/8 ... [NO_EFFECT] line 40, (@pre2 == pot) ... unproven
2/8 ... [NO_EFFECT] line 44, (@pre1 == random) ... unproven
3/8 ... [ASSIGN_CONST] line 40, ((!(bank != msg.sender)) || (pot == 0)) ... unproven
4/8 ... [DEAD] line 36, false ... unproven
5/8 ... [DEAD] line 39, false ... unproven
6/8 ... [DEAD] line 47, false ... unproven
7/8 ... [DEAD] line 50, false ... unproven
8/8 ... [DEAD] line 53, false ... unproven
took 3.336403s


===== Vulnerability Report =====
[1] [IO] line 39, (pot + msg.value) : proven
[2] [IO] line 40, (pot + msg.value) : proven
[3] [IO] line 53, (pot - FEE_AMOUNT) : proven
[4] [ETH_LEAK] line 50, bank.transfer(FEE_AMOUNT); : proven
[5] [ETH_LEAK] line 53, msg.sender.transfer((pot - FEE_AMOUNT)); : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 40, (@pre2 == pot) : unproven
[2] [NO_EFFECT] line 44, (@pre1 == random) : unproven
[3] [ASSIGN_CONST] line 40, ((!(bank != msg.sender)) || (pot == 0)) : unproven
[4] [DEAD] line 36, false : unproven
[5] [DEAD] line 39, false : unproven
[6] [DEAD] line 47, false : unproven
[7] [DEAD] line 50, false : unproven
[8] [DEAD] line 53, false : unproven

============ Statistics ============
# Iter                    : 67
# Alarm / Query           : 1 / 5
- integer over/underflow  : 0 / 3
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 2
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 0

Time Elapsed (Real) : 155.640374899
Time Elapsed (CPU)  : 155.646112
