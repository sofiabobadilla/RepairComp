[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.000334s
[INFO] # path : 17

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.00113s
Generating VCs ... took 0.003057s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.032625
[
0 -> true
]
[
]
1/6 ... [IO] line 40, (pot + msg.value) ... proven
2/6 ... [IO] line 41, (pot + msg.value) ... proven
3/6 ... [IO] line 54, (pot - FEE_AMOUNT) ... proven
4/6 ... [ETH_LEAK] line 51, bank.transfer(FEE_AMOUNT); ... unproven
5/6 ... [ETH_LEAK] line 54, msg.sender.transfer((pot - FEE_AMOUNT)); ... unproven
6/6 ... [TX_ORG] line 36, assume((bank == msg.sender)); ... proven
took 3.972722s

Generating VCs ... took 0.001318s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 4.006579
[
0 -> (Read(@TU, bank__@9) == true)
]
[
]
1/6 ... [IO] line 40, (pot + msg.value) ... proven
2/6 ... [IO] line 41, (pot + msg.value) ... proven
3/6 ... [IO] line 54, (pot - FEE_AMOUNT) ... proven
4/6 ... [ETH_LEAK] line 51, bank.transfer(FEE_AMOUNT); ... proven
5/6 ... [ETH_LEAK] line 54, msg.sender.transfer((pot - FEE_AMOUNT)); ... proven
6/6 ... [TX_ORG] line 36, assume((bank == msg.sender)); ... proven
took 0.085113s

Generating VCs ... took 0.000589s
Checking validity of VCs ... 
1/9 ... [NO_EFFECT] line 41, (@pre2 == pot) ... unproven
2/9 ... [NO_EFFECT] line 45, (@pre1 == random) ... unproven
3/9 ... [ASSIGN_CONST] line 41, ((!(bank != msg.sender)) || (pot == 0)) ... proven
4/9 ... [DEAD] line 36, false ... unproven
5/9 ... [DEAD] line 37, false ... unproven
6/9 ... [DEAD] line 40, false ... unproven
7/9 ... [DEAD] line 48, false ... unproven
8/9 ... [DEAD] line 51, false ... unproven
9/9 ... [DEAD] line 54, false ... unproven
took 4.417008s


===== Vulnerability Report =====
[1] [IO] line 40, (pot + msg.value) : proven
[2] [IO] line 41, (pot + msg.value) : proven
[3] [IO] line 54, (pot - FEE_AMOUNT) : proven
[4] [ETH_LEAK] line 51, bank.transfer(FEE_AMOUNT); : proven
[5] [ETH_LEAK] line 54, msg.sender.transfer((pot - FEE_AMOUNT)); : proven
[6] [TX_ORG] line 36, assume((bank == msg.sender)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 41, (@pre2 == pot) : unproven
[2] [NO_EFFECT] line 45, (@pre1 == random) : unproven
[3] [ASSIGN_CONST] line 41, ((!(bank != msg.sender)) || (pot == 0)) : proven
[4] [DEAD] line 36, false : unproven
[5] [DEAD] line 37, false : unproven
[6] [DEAD] line 40, false : unproven
[7] [DEAD] line 48, false : unproven
[8] [DEAD] line 51, false : unproven
[9] [DEAD] line 54, false : unproven

============ Statistics ============
# Iter                    : 2
# Alarm / Query           : 0 / 6
- integer over/underflow  : 0 / 3
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 2
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 1

Time Elapsed (Real) : 8.52810311317
Time Elapsed (CPU)  : 8.50715
