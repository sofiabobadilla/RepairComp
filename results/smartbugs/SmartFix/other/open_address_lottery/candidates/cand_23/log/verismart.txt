[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 7
[INFO] reachable : 6
[INFO] Generating Paths ... took 0.002165s
[INFO] # path : 49

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.003982s
Generating VCs ... took 0.027343s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.117584
[
0 -> true
]
[
146 -> (true, true)
]
1/12 ... [IO] line 56, (msg.value * 7) ... proven
2/12 ... [IO] line 57, (msg.value * 7) ... proven
3/12 ... [IO] line 65, (block.number - lastReseed) ... proven
4/12 ... [IO] line 96, (block.number - 1) ... proven
5/12 ... [IO] line 97, (block.difficulty * uint256(block.coinbase)) ... unproven
6/12 ... [IO] line 98, (tx.gasprice * 7) ... unproven
7/12 ... [KA] line 87, selfdestruct(msg.sender); ... unproven
8/12 ... [ETH_LEAK] line 61, msg.sender.transfer(win); ... unproven
9/12 ... [ETH_LEAK] line 87, selfdestruct(msg.sender); ... unproven
10/12 ... [TX_ORG] line 85, assume((msg.sender == owner)); ... proven
11/12 ... [TX_ORG] line 91, assume((msg.sender == owner)); ... proven
12/12 ... [TX_ORG] line 104, assume((msg.sender != owner)); ... proven
took 1.68709s

Generating VCs ... took 0.026565s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 1.852907
[
0 -> (Read(@TU, owner__@12) == true)
]
[
146 -> ((Read(@TU, owner__@12) == true), (Read(@TU, owner__@12) == true))
]
1/12 ... [IO] line 56, (msg.value * 7) ... proven
2/12 ... [IO] line 57, (msg.value * 7) ... proven
3/12 ... [IO] line 65, (block.number - lastReseed) ... proven
4/12 ... [IO] line 96, (block.number - 1) ... proven
5/12 ... [IO] line 97, (block.difficulty * uint256(block.coinbase)) ... unproven
6/12 ... [IO] line 98, (tx.gasprice * 7) ... unproven
7/12 ... [KA] line 87, selfdestruct(msg.sender); ... proven
8/12 ... [ETH_LEAK] line 61, msg.sender.transfer(win); ... unproven
9/12 ... [ETH_LEAK] line 87, selfdestruct(msg.sender); ... proven
10/12 ... [TX_ORG] line 85, assume((msg.sender == owner)); ... proven
11/12 ... [TX_ORG] line 91, assume((msg.sender == owner)); ... proven
12/12 ... [TX_ORG] line 104, assume((msg.sender != owner)); ... proven
took 0.752972s

Generating VCs ... took 0.029775s
Checking validity of VCs ... took 4.04998s

Generating VCs ... took 0.026384s
Checking validity of VCs ... took 0.01909s

Generating VCs ... took 0.026718s
Checking validity of VCs ... took 3.046095s

Generating VCs ... took 0.026128s
Checking validity of VCs ... took 0.467488s

Generating VCs ... took 0.029805s
Checking validity of VCs ... took 5.879988s

Generating VCs ... took 0.029261s
Checking validity of VCs ... took 3.440426s

Generating VCs ... took 0.026466s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 9 Total elapsed : 20.234837
[
0 -> ((LuckyNumber__@19 == 7) /\ (Read(@TU, owner__@12) == true))
]
[
146 -> (((LuckyNumber__@19 == 7) /\ (Read(@TU, owner__@12) == true)), ((LuckyNumber__@19 == 7) /\ (Read(@TU, owner__@12) == true)))
]
1/12 ... [IO] line 56, (msg.value * 7) ... proven
2/12 ... [IO] line 57, (msg.value * 7) ... proven
3/12 ... [IO] line 65, (block.number - lastReseed) ... proven
4/12 ... [IO] line 96, (block.number - 1) ... proven
5/12 ... [IO] line 97, (block.difficulty * uint256(block.coinbase)) ... unproven
6/12 ... [IO] line 98, (tx.gasprice * 7) ... unproven
7/12 ... [KA] line 87, selfdestruct(msg.sender); ... proven
8/12 ... [ETH_LEAK] line 61, msg.sender.transfer(win); ... unproven
9/12 ... [ETH_LEAK] line 87, selfdestruct(msg.sender); ... proven
10/12 ... [TX_ORG] line 85, assume((msg.sender == owner)); ... proven
11/12 ... [TX_ORG] line 91, assume((msg.sender == owner)); ... proven
12/12 ... [TX_ORG] line 104, assume((msg.sender != owner)); ... proven
took 1.322825s

Iter : 10 To explore : 166 Explored : 473 Total elapsed : 21.113647
Generating VCs ... took 0.02972s
Checking validity of VCs ... took 4.893279s

Generating VCs ... took 0.02829s
Checking validity of VCs ... took 3.521501s

Generating VCs ... took 0.026016s
Checking validity of VCs ... took 4.074851s

Generating VCs ... took 0.026582s
Checking validity of VCs ... took 3.438016s

Generating VCs ... took 0.025945s
Checking validity of VCs ... took 0.506665s

Generating VCs ... took 0.031127s
Checking validity of VCs ... took 0.50433s

Generating VCs ... took 0.027208s
Checking validity of VCs ... took 0.499126s

Generating VCs ... took 0.026488s
Checking validity of VCs ... took 0.516505s

Generating VCs ... took 0.026453s
Checking validity of VCs ... took 4.260302s

Generating VCs ... took 0.026469s
Checking validity of VCs ... took 4.077506s

Iter : 20 To explore : 233 Explored : 550 Total elapsed : 47.756066
Generating VCs ... took 0.026432s
Checking validity of VCs ... took 5.210184s

Generating VCs ... took 0.028559s
Checking validity of VCs ... took 3.495733s

Generating VCs ... took 0.026063s
Checking validity of VCs ... took 5.341527s

Generating VCs ... took 0.026775s
Checking validity of VCs ... took 4.728358s

Generating VCs ... took 0.025948s
Checking validity of VCs ... took 3.893038s

Generating VCs ... took 0.026418s
Checking validity of VCs ... took 3.395508s

Generating VCs ... took 0.026818s
Checking validity of VCs ... took 4.170433s

Generating VCs ... took 0.026557s
Checking validity of VCs ... took 3.868917s

Generating VCs ... took 0.025956s
Checking validity of VCs ... took 3.545078s

Generating VCs ... took 0.026369s
Checking validity of VCs ... took 4.781077s

Iter : 30 To explore : 426 Explored : 753 Total elapsed : 90.573884
Generating VCs ... took 0.026605s
Checking validity of VCs ... took 3.667965s

Generating VCs ... took 0.026733s
Checking validity of VCs ... took 4.57968s

Generating VCs ... took 0.026552s
Checking validity of VCs ... took 4.485104s

Generating VCs ... took 0.027458s
Checking validity of VCs ... took 4.165579s

Generating VCs ... took 0.027324s
Checking validity of VCs ... took 3.78364s

Generating VCs ... took 0.027553s
Checking validity of VCs ... took 4.914262s

Generating VCs ... took 0.026539s
Checking validity of VCs ... took 0.741424s

Generating VCs ... took 0.02691s
Checking validity of VCs ... took 4.442526s

Generating VCs ... took 0.026415s
Checking validity of VCs ... took 0.745031s

Generating VCs ... took 0.026316s
Checking validity of VCs ... took 5.830473s

Iter : 40 To explore : 579 Explored : 916 Total elapsed : 128.310692
Generating VCs ... took 0.026532s
Checking validity of VCs ... took 0.740099s

Generating VCs ... took 0.026996s
Checking validity of VCs ... took 3.450075s

Generating VCs ... took 0.027645s
Checking validity of VCs ... took 5.057157s

Generating VCs ... took 0.02704s
Checking validity of VCs ... took 3.903315s

Generating VCs ... took 0.02715s
Checking validity of VCs ... took 5.148507s

Generating VCs ... took 0.026589s
Checking validity of VCs ... took 4.824816s

Generating VCs ... took 0.00752199999999s
Checking validity of VCs ... 
1/28 ... [NO_EFFECT] line 57, (@pre6 == win) ... unproven
2/28 ... [NO_EFFECT] line 60, (@pre5 == win) ... unproven
3/28 ... [NO_EFFECT] line 66, (@pre1 == struct_init(SeedComponents, uint256(block.coinbase), block.difficulty, block.gaslimit, block.timestamp).component4) ... unproven
4/28 ... [NO_EFFECT] line 66, (@pre2 == struct_init(SeedComponents, uint256(block.coinbase), block.difficulty, block.gaslimit, block.timestamp).component3) ... unproven
5/28 ... [NO_EFFECT] line 66, (@pre3 == struct_init(SeedComponents, uint256(block.coinbase), block.difficulty, block.gaslimit, block.timestamp).component2) ... unproven
6/28 ... [NO_EFFECT] line 66, (@pre4 == struct_init(SeedComponents, uint256(block.coinbase), block.difficulty, block.gaslimit, block.timestamp).component1) ... unproven
7/28 ... [NO_EFFECT] line 71, (@pre7 == n) ... unproven
8/28 ... [NO_EFFECT] line 75, (@pre9 == secretSeed) ... unproven
9/28 ... [NO_EFFECT] line 81, (@pre8 == lastReseed) ... unproven
10/28 ... [NO_EFFECT] line 94, (@pre13 == s.component1) ... unproven
11/28 ... [NO_EFFECT] line 96, (@pre12 == s.component2) ... unproven
12/28 ... [NO_EFFECT] line 97, (@pre11 == s.component3) ... unproven
13/28 ... [NO_EFFECT] line 98, (@pre10 == s.component4) ... unproven
14/28 ... [DEAD] line 47, false ... unproven
15/28 ... [DEAD] line 51, false ... unproven
16/28 ... [DEAD] line 53, false ... unproven
17/28 ... [DEAD] line 56, false ... unproven
18/28 ... [DEAD] line 59, false ... unproven
19/28 ... [DEAD] line 61, false ... unproven
20/28 ... [DEAD] line 64, false ... unproven
21/28 ... [DEAD] line 65, false ... unproven
22/28 ... [DEAD] line 66, false ... unproven
23/28 ... [DEAD] line 85, false ... unproven
24/28 ... [DEAD] line 91, false ... unproven
25/28 ... [DEAD] line 95, false ... unproven
26/28 ... [DEAD] line 100, false ... unproven
27/28 ... [DEAD] line 104, false ... unproven
28/28 ... [DEAD] line 105, false ... unproven
took 2.578833s


===== Vulnerability Report =====
[1] [IO] line 56, (msg.value * 7) : proven
[2] [IO] line 57, (msg.value * 7) : proven
[3] [IO] line 65, (block.number - lastReseed) : proven
[4] [IO] line 96, (block.number - 1) : proven
[5] [IO] line 97, (block.difficulty * uint256(block.coinbase)) : unproven
[6] [IO] line 98, (tx.gasprice * 7) : unproven
[7] [KA] line 87, selfdestruct(msg.sender); : proven
[8] [ETH_LEAK] line 61, msg.sender.transfer(win); : unproven
[9] [ETH_LEAK] line 87, selfdestruct(msg.sender); : proven
[10] [TX_ORG] line 85, assume((msg.sender == owner)); : proven
[11] [TX_ORG] line 91, assume((msg.sender == owner)); : proven
[12] [TX_ORG] line 104, assume((msg.sender != owner)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 57, (@pre6 == win) : unproven
[2] [NO_EFFECT] line 60, (@pre5 == win) : unproven
[3] [NO_EFFECT] line 66, (@pre1 == struct_init(SeedComponents, uint256(block.coinbase), block.difficulty, block.gaslimit, block.timestamp).component4) : unproven
[4] [NO_EFFECT] line 66, (@pre2 == struct_init(SeedComponents, uint256(block.coinbase), block.difficulty, block.gaslimit, block.timestamp).component3) : unproven
[5] [NO_EFFECT] line 66, (@pre3 == struct_init(SeedComponents, uint256(block.coinbase), block.difficulty, block.gaslimit, block.timestamp).component2) : unproven
[6] [NO_EFFECT] line 66, (@pre4 == struct_init(SeedComponents, uint256(block.coinbase), block.difficulty, block.gaslimit, block.timestamp).component1) : unproven
[7] [NO_EFFECT] line 71, (@pre7 == n) : unproven
[8] [NO_EFFECT] line 75, (@pre9 == secretSeed) : unproven
[9] [NO_EFFECT] line 81, (@pre8 == lastReseed) : unproven
[10] [NO_EFFECT] line 94, (@pre13 == s.component1) : unproven
[11] [NO_EFFECT] line 96, (@pre12 == s.component2) : unproven
[12] [NO_EFFECT] line 97, (@pre11 == s.component3) : unproven
[13] [NO_EFFECT] line 98, (@pre10 == s.component4) : unproven
[14] [DEAD] line 47, false : unproven
[15] [DEAD] line 51, false : unproven
[16] [DEAD] line 53, false : unproven
[17] [DEAD] line 56, false : unproven
[18] [DEAD] line 59, false : unproven
[19] [DEAD] line 61, false : unproven
[20] [DEAD] line 64, false : unproven
[21] [DEAD] line 65, false : unproven
[22] [DEAD] line 66, false : unproven
[23] [DEAD] line 85, false : unproven
[24] [DEAD] line 91, false : unproven
[25] [DEAD] line 95, false : unproven
[26] [DEAD] line 100, false : unproven
[27] [DEAD] line 104, false : unproven
[28] [DEAD] line 105, false : unproven

============ Statistics ============
# Iter                    : 45
# Alarm / Query           : 3 / 12
- integer over/underflow  : 2 / 6
- kill-anyone             : 0 / 1
- ether-leaking           : 1 / 2
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 3

Time Elapsed (Real) : 154.235100985
Time Elapsed (CPU)  : 154.261453
