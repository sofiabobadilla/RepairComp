[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.000176s
[INFO] # path : 11

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.00051s
Generating VCs ... took 0.000968s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.027177
[
0 -> true
]
[
]
1/6 ... [IO] line 23, (numTokens * PRICE_PER_TOKEN) ... unproven
2/6 ... [IO] line 25, (balanceOf[msg.sender] + numTokens) ... proven
3/6 ... [IO] line 26, (balanceOf[msg.sender] + numTokens) ... proven
4/6 ... [IO] line 32, (balanceOf[msg.sender] - numTokens) ... proven
5/6 ... [IO] line 34, (numTokens * PRICE_PER_TOKEN) ... unproven
6/6 ... [ETH_LEAK] line 34, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); ... unproven
took 0.16596s

Generating VCs ... took 0.000318s
Checking validity of VCs ... took 0.694639s

Generating VCs ... took 0.000369s
Checking validity of VCs ... took 17.684258s

Generating VCs ... took 0.000307000000003s
Checking validity of VCs ... took 0.164168s

Generating VCs ... took 0.000316000000002s
Checking validity of VCs ... took 0.171809s

Generating VCs ... took 0.000318s
Checking validity of VCs ... took 0.176263s

Generating VCs ... took 0.000357000000001s
Checking validity of VCs ... took 7.990477s

Generating VCs ... took 0.000364000000001s
Checking validity of VCs ... took 0.774603s

Generating VCs ... took 0.000315999999998s
Checking validity of VCs ... took 0.838333s

Iter : 10 To explore : 49 Explored : 58 Total elapsed : 28.694811
Generating VCs ... took 0.000308s
Checking validity of VCs ... took 0.80763s

Generating VCs ... took 0.000317999999996s
Checking validity of VCs ... took 1.52308s

Generating VCs ... took 0.000311999999997s
Checking validity of VCs ... took 1.869693s

Generating VCs ... took 0.000312999999998s
Checking validity of VCs ... took 2.18429s

Generating VCs ... took 0.000308999999994s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 14 Total elapsed : 35.084355
[
0 -> (PRICE_PER_TOKEN__@8 == 1000000000000000000)
]
[
]
1/6 ... [IO] line 23, (numTokens * PRICE_PER_TOKEN) ... unproven
2/6 ... [IO] line 25, (balanceOf[msg.sender] + numTokens) ... proven
3/6 ... [IO] line 26, (balanceOf[msg.sender] + numTokens) ... proven
4/6 ... [IO] line 32, (balanceOf[msg.sender] - numTokens) ... proven
5/6 ... [IO] line 34, (numTokens * PRICE_PER_TOKEN) ... unproven
6/6 ... [ETH_LEAK] line 34, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); ... unproven
took 0.160794s

Generating VCs ... took 0.000323000000002s
Checking validity of VCs ... took 0.015186s

Generating VCs ... took 0.000306000000002s
Checking validity of VCs ... took 0.658068s

Generating VCs ... took 0.000318s
Checking validity of VCs ... took 16.210452s

Generating VCs ... took 0.000332999999998s
Checking validity of VCs ... took 0.176435s

Generating VCs ... took 0.000388000000001s
Checking validity of VCs ... took 0.174581s

Iter : 20 To explore : 20 Explored : 90 Total elapsed : 52.485492
Generating VCs ... took 0.000366s
Checking validity of VCs ... took 0.177244s

Generating VCs ... took 0.000367000000004s
Checking validity of VCs ... took 9.389157s

Generating VCs ... took 0.000315999999998s
Checking validity of VCs ... took 0.770874s

Generating VCs ... took 0.000318999999998s
Checking validity of VCs ... took 0.794437s

Generating VCs ... took 0.000315000000001s
Checking validity of VCs ... took 0.854006s

Generating VCs ... took 0.000315999999998s
Checking validity of VCs ... took 1.988504s

Generating VCs ... took 0.000316999999995s
Checking validity of VCs ... took 1.951813s

Generating VCs ... took 0.000309999999999s
Checking validity of VCs ... took 2.145801s

Generating VCs ... took 0.000340000000008s
Checking validity of VCs ... took 2.37889s

Generating VCs ... took 0.000322000000011s
Checking validity of VCs ... took 2.762603s

Iter : 30 To explore : 13 Explored : 93 Total elapsed : 75.710062
Generating VCs ... took 0.000310999999996s
Checking validity of VCs ... took 2.325925s

Generating VCs ... took 0.000367999999995s
Checking validity of VCs ... took 0.123705s

Generating VCs ... took 0.000315000000001s
Checking validity of VCs ... took 0.124008s

Generating VCs ... took 0.000311999999994s
Checking validity of VCs ... took 0.174542s

Generating VCs ... took 0.000354000000002s
Checking validity of VCs ... took 0.208364s

Generating VCs ... took 0.00031899999999s
Checking validity of VCs ... took 0.487808s

Generating VCs ... took 0.000285000000005s
Checking validity of VCs ... took 0.207064s

Generating VCs ... took 0.000330000000005s
Checking validity of VCs ... took 0.207653s

Generating VCs ... took 0.000287s
Checking validity of VCs ... took 0.217963s

Generating VCs ... took 0.000326999999999s
Checking validity of VCs ... took 1.790613s

Iter : 40 To explore : 6 Explored : 96 Total elapsed : 81.587042
Generating VCs ... took 0.000331000000003s
Checking validity of VCs ... took 0.315146s

Generating VCs ... took 0.000323000000009s
Checking validity of VCs ... took 2.606045s

Generating VCs ... took 0.000314999999986s
Checking validity of VCs ... took 0.32333s

Generating VCs ... took 0.000334999999993s
Checking validity of VCs ... took 0.119123s

Generating VCs ... took 0.000351999999992s
Checking validity of VCs ... took 0.219208s

Generating VCs ... took 0.000319999999988s
Checking validity of VCs ... took 0.227308s

Generating VCs ... took 0.000321s
Checking validity of VCs ... took 0.313545s

Generating VCs ... took 0.00017299999999s
Checking validity of VCs ... 
1/8 ... [NO_EFFECT] line 26, (@pre1 == balanceOf[msg.sender]) ... unproven
2/8 ... [NO_EFFECT] line 32, (@pre2 == balanceOf[msg.sender]) ... unproven
3/8 ... [ASSIGN_CONST] line 26, (balanceOf[msg.sender] == 0) ... unproven
4/8 ... [ASSIGN_CONST] line 32, (balanceOf[msg.sender] == 0) ... unproven
5/8 ... [DEAD] line 23, false ... unproven
6/8 ... [DEAD] line 25, false ... unproven
7/8 ... [DEAD] line 30, false ... unproven
8/8 ... [DEAD] line 34, false ... unproven
took 0.35874s


===== Vulnerability Report =====
[1] [IO] line 23, (numTokens * PRICE_PER_TOKEN) : unproven
[2] [IO] line 25, (balanceOf[msg.sender] + numTokens) : proven
[3] [IO] line 26, (balanceOf[msg.sender] + numTokens) : proven
[4] [IO] line 32, (balanceOf[msg.sender] - numTokens) : proven
[5] [IO] line 34, (numTokens * PRICE_PER_TOKEN) : unproven
[6] [ETH_LEAK] line 34, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 26, (@pre1 == balanceOf[msg.sender]) : unproven
[2] [NO_EFFECT] line 32, (@pre2 == balanceOf[msg.sender]) : unproven
[3] [ASSIGN_CONST] line 26, (balanceOf[msg.sender] == 0) : unproven
[4] [ASSIGN_CONST] line 32, (balanceOf[msg.sender] == 0) : unproven
[5] [DEAD] line 23, false : unproven
[6] [DEAD] line 25, false : unproven
[7] [DEAD] line 30, false : unproven
[8] [DEAD] line 34, false : unproven

============ Statistics ============
# Iter                    : 47
# Alarm / Query           : 3 / 6
- integer over/underflow  : 2 / 5
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 1
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 0

Time Elapsed (Real) : 86.0901970863
Time Elapsed (CPU)  : 86.075206
