[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.004862s
[INFO] # path : 16

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000615s
Generating VCs ... took 0.001441s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.036552
[
0 -> true
]
[
]
1/7 ... [IO] line 23, (numTokens * PRICE_PER_TOKEN) ... unproven
2/7 ... [IO] line 25, (balanceOf[msg.sender] + numTokens) ... proven
3/7 ... [IO] line 26, (balanceOf[msg.sender] + numTokens) ... proven
4/7 ... [IO] line 32, (balanceOf[msg.sender] - numTokens) ... proven
5/7 ... [IO] line 34, (numTokens * PRICE_PER_TOKEN) ... proven
6/7 ... [IO] line 35, (numTokens * PRICE_PER_TOKEN) ... proven
7/7 ... [ETH_LEAK] line 35, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); ... unproven
took 0.350773s

Generating VCs ... took 0.000707s
Checking validity of VCs ... took 0.619705s

Generating VCs ... took 0.000744s
Checking validity of VCs ... took 14.590581s

Generating VCs ... took 0.000726999999999s
Checking validity of VCs ... took 0.175143s

Generating VCs ... took 0.000681s
Checking validity of VCs ... took 0.168738s

Generating VCs ... took 0.000616000000001s
Checking validity of VCs ... took 0.177358s

Generating VCs ... took 0.000612s
Checking validity of VCs ... took 11.351778s

Generating VCs ... took 0.000617000000002s
Checking validity of VCs ... took 0.856342s

Generating VCs ... took 0.000775999999998s
Checking validity of VCs ... took 0.752037s

Iter : 10 To explore : 49 Explored : 58 Total elapsed : 29.088985
Generating VCs ... took 0.000549999999997s
Checking validity of VCs ... took 0.698996s

Generating VCs ... took 0.000708999999997s
Checking validity of VCs ... took 1.804555s

Generating VCs ... took 0.000629s
Checking validity of VCs ... took 1.739888s

Generating VCs ... took 0.000616000000001s
Checking validity of VCs ... took 2.178487s

Generating VCs ... took 0.000767000000003s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 14 Total elapsed : 35.517929
[
0 -> (PRICE_PER_TOKEN__@8 == 1000000000000000000)
]
[
]
1/7 ... [IO] line 23, (numTokens * PRICE_PER_TOKEN) ... unproven
2/7 ... [IO] line 25, (balanceOf[msg.sender] + numTokens) ... proven
3/7 ... [IO] line 26, (balanceOf[msg.sender] + numTokens) ... proven
4/7 ... [IO] line 32, (balanceOf[msg.sender] - numTokens) ... proven
5/7 ... [IO] line 34, (numTokens * PRICE_PER_TOKEN) ... proven
6/7 ... [IO] line 35, (numTokens * PRICE_PER_TOKEN) ... proven
7/7 ... [ETH_LEAK] line 35, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); ... unproven
took 0.121273s

Generating VCs ... took 0.000614000000006s
Checking validity of VCs ... took 0.016028s

Generating VCs ... took 0.000773000000002s
Checking validity of VCs ... took 0.615113s

Generating VCs ... took 0.000602000000001s
Checking validity of VCs ... took 18.77007s

Generating VCs ... took 0.000721999999996s
Checking validity of VCs ... took 0.196379s

Generating VCs ... took 0.000632000000003s
Checking validity of VCs ... took 0.174474s

Iter : 20 To explore : 20 Explored : 90 Total elapsed : 55.418396
Generating VCs ... took 0.000644999999999s
Checking validity of VCs ... took 0.18501s

Generating VCs ... took 0.000624000000002s
Checking validity of VCs ... took 7.378198s

Generating VCs ... took 0.000680000000003s
Checking validity of VCs ... took 0.855948s

Generating VCs ... took 0.000675000000001s
Checking validity of VCs ... took 0.900084s

Generating VCs ... took 0.000658000000001s
Checking validity of VCs ... took 0.80814s

Generating VCs ... took 0.000568000000001s
Checking validity of VCs ... took 1.501836s

Generating VCs ... took 0.000577000000007s
Checking validity of VCs ... took 1.961426s

Generating VCs ... took 0.00062299999999s
Checking validity of VCs ... took 2.219669s

Generating VCs ... took 0.000889999999998s
Checking validity of VCs ... took 2.237051s

Generating VCs ... took 0.000913999999995s
Checking validity of VCs ... took 2.717798s

Iter : 30 To explore : 13 Explored : 93 Total elapsed : 76.199712
Generating VCs ... took 0.000629999999987s
Checking validity of VCs ... took 2.174287s

Generating VCs ... took 0.000724999999989s
Checking validity of VCs ... took 0.1525s

Generating VCs ... took 0.000616000000008s
Checking validity of VCs ... took 0.153448s

Generating VCs ... took 0.000627000000009s
Checking validity of VCs ... took 0.18434s

Generating VCs ... took 0.000734999999992s
Checking validity of VCs ... took 0.242531s

Generating VCs ... took 0.000692999999998s
Checking validity of VCs ... took 3.45731s

Generating VCs ... took 0.000728999999993s
Checking validity of VCs ... took 0.236325s

Generating VCs ... took 0.000840999999994s
Checking validity of VCs ... took 0.242231s

Generating VCs ... took 0.000718000000006s
Checking validity of VCs ... took 0.251455s

Generating VCs ... took 0.00072999999999s
Checking validity of VCs ... took 1.499119s

Iter : 40 To explore : 6 Explored : 96 Total elapsed : 84.806403
Generating VCs ... took 0.000658999999999s
Checking validity of VCs ... took 0.359748s

Generating VCs ... took 0.000638000000009s
Checking validity of VCs ... took 2.499099s

Generating VCs ... took 0.000603999999996s
Checking validity of VCs ... took 0.355845s

Generating VCs ... took 0.000817999999995s
Checking validity of VCs ... took 0.153475s

Generating VCs ... took 0.000629000000004s
Checking validity of VCs ... took 0.257829s

Generating VCs ... took 0.000728999999993s
Checking validity of VCs ... took 0.252277s

Generating VCs ... took 0.000627000000009s
Checking validity of VCs ... took 0.357562s

Generating VCs ... took 0.000292999999999s
Checking validity of VCs ... 
1/9 ... [NO_EFFECT] line 26, (@pre1 == balanceOf[msg.sender]) ... unproven
2/9 ... [NO_EFFECT] line 32, (@pre2 == balanceOf[msg.sender]) ... unproven
3/9 ... [ASSIGN_CONST] line 26, (balanceOf[msg.sender] == 0) ... unproven
4/9 ... [ASSIGN_CONST] line 32, (balanceOf[msg.sender] == 0) ... unproven
5/9 ... [DEAD] line 23, false ... unproven
6/9 ... [DEAD] line 25, false ... unproven
7/9 ... [DEAD] line 30, false ... unproven
8/9 ... [DEAD] line 34, false ... unproven
9/9 ... [DEAD] line 35, false ... unproven
took 0.34996s


===== Vulnerability Report =====
[1] [IO] line 23, (numTokens * PRICE_PER_TOKEN) : unproven
[2] [IO] line 25, (balanceOf[msg.sender] + numTokens) : proven
[3] [IO] line 26, (balanceOf[msg.sender] + numTokens) : proven
[4] [IO] line 32, (balanceOf[msg.sender] - numTokens) : proven
[5] [IO] line 34, (numTokens * PRICE_PER_TOKEN) : proven
[6] [IO] line 35, (numTokens * PRICE_PER_TOKEN) : proven
[7] [ETH_LEAK] line 35, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 26, (@pre1 == balanceOf[msg.sender]) : unproven
[2] [NO_EFFECT] line 32, (@pre2 == balanceOf[msg.sender]) : unproven
[3] [ASSIGN_CONST] line 26, (balanceOf[msg.sender] == 0) : unproven
[4] [ASSIGN_CONST] line 32, (balanceOf[msg.sender] == 0) : unproven
[5] [DEAD] line 23, false : unproven
[6] [DEAD] line 25, false : unproven
[7] [DEAD] line 30, false : unproven
[8] [DEAD] line 34, false : unproven
[9] [DEAD] line 35, false : unproven

============ Statistics ============
# Iter                    : 47
# Alarm / Query           : 2 / 7
- integer over/underflow  : 1 / 6
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 1
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 0

Time Elapsed (Real) : 89.4207530022
Time Elapsed (CPU)  : 89.401378
