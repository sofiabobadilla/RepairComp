[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.000339s
[INFO] # path : 20

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000872s
Generating VCs ... took 0.002305s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.037891
[
0 -> true
]
[
]
1/8 ... [IO] line 23, (numTokens * PRICE_PER_TOKEN) ... proven
2/8 ... [IO] line 24, (numTokens * PRICE_PER_TOKEN) ... proven
3/8 ... [IO] line 26, (balanceOf[msg.sender] + numTokens) ... proven
4/8 ... [IO] line 27, (balanceOf[msg.sender] + numTokens) ... proven
5/8 ... [IO] line 33, (balanceOf[msg.sender] - numTokens) ... proven
6/8 ... [IO] line 35, (numTokens * PRICE_PER_TOKEN) ... proven
7/8 ... [IO] line 36, (numTokens * PRICE_PER_TOKEN) ... proven
8/8 ... [ETH_LEAK] line 36, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); ... unproven
took 0.338316s

Generating VCs ... took 0.000818s
Checking validity of VCs ... took 0.593505s

Generating VCs ... took 0.000663s
Checking validity of VCs ... took 13.808s

Generating VCs ... took 0.000748s
Checking validity of VCs ... took 0.18842s

Generating VCs ... took 0.000689999999999s
Checking validity of VCs ... took 0.163477s

Generating VCs ... took 0.000724s
Checking validity of VCs ... took 0.171314s

Generating VCs ... took 0.000672999999999s
Checking validity of VCs ... took 8.248814s

Generating VCs ... took 0.000717999999999s
Checking validity of VCs ... took 0.718762s

Generating VCs ... took 0.000706999999998s
Checking validity of VCs ... took 0.616797s

Iter : 10 To explore : 49 Explored : 58 Total elapsed : 24.895668
Generating VCs ... took 0.000665000000001s
Checking validity of VCs ... took 1.315248s

Generating VCs ... took 0.000802999999998s
Checking validity of VCs ... took 1.349086s

Generating VCs ... took 0.00117s
Checking validity of VCs ... took 1.857033s

Generating VCs ... took 0.000805s
Checking validity of VCs ... took 2.255553s

Generating VCs ... took 0.000881999999997s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 14 Total elapsed : 31.68113
[
0 -> (PRICE_PER_TOKEN__@8 == 1000000000000000000)
]
[
]
1/8 ... [IO] line 23, (numTokens * PRICE_PER_TOKEN) ... proven
2/8 ... [IO] line 24, (numTokens * PRICE_PER_TOKEN) ... proven
3/8 ... [IO] line 26, (balanceOf[msg.sender] + numTokens) ... proven
4/8 ... [IO] line 27, (balanceOf[msg.sender] + numTokens) ... proven
5/8 ... [IO] line 33, (balanceOf[msg.sender] - numTokens) ... proven
6/8 ... [IO] line 35, (numTokens * PRICE_PER_TOKEN) ... proven
7/8 ... [IO] line 36, (numTokens * PRICE_PER_TOKEN) ... proven
8/8 ... [ETH_LEAK] line 36, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); ... unproven
took 0.073608s

Generating VCs ... took 0.000772999999999s
Checking validity of VCs ... took 0.014575s

Generating VCs ... took 0.000744000000001s
Checking validity of VCs ... took 1.248373s

Generating VCs ... took 0.000791999999997s
Checking validity of VCs ... took 16.309957s

Generating VCs ... took 0.000807999999999s
Checking validity of VCs ... took 0.201499s

Generating VCs ... took 0.000821999999999s
Checking validity of VCs ... took 0.177664s

Iter : 20 To explore : 20 Explored : 90 Total elapsed : 49.714563
Generating VCs ... took 0.000823000000004s
Checking validity of VCs ... took 0.199398s

Generating VCs ... took 0.000827999999998s
Checking validity of VCs ... took 8.882945s

Generating VCs ... took 0.000814999999996s
Checking validity of VCs ... took 0.755678s

Generating VCs ... took 0.000956000000002s
Checking validity of VCs ... took 0.886967s

Generating VCs ... took 0.000727000000005s
Checking validity of VCs ... took 0.649696s

Generating VCs ... took 0.001437s
Checking validity of VCs ... took 1.275572s

Generating VCs ... took 0.000705999999994s
Checking validity of VCs ... took 1.822275s

Generating VCs ... took 0.001013s
Checking validity of VCs ... took 2.307632s

Generating VCs ... took 0.000820000000004s
Checking validity of VCs ... took 2.129553s

Generating VCs ... took 0.000698999999997s
Checking validity of VCs ... took 2.912592s

Iter : 30 To explore : 13 Explored : 93 Total elapsed : 71.555337
Generating VCs ... took 0.000737000000001s
Checking validity of VCs ... took 2.296295s

Generating VCs ... took 0.00135300000001s
Checking validity of VCs ... took 0.158739s

Generating VCs ... took 0.00088199999999s
Checking validity of VCs ... took 0.162665s

Generating VCs ... took 0.000834000000012s
Checking validity of VCs ... took 0.21588s

Generating VCs ... took 0.000682000000012s
Checking validity of VCs ... took 0.248433s

Generating VCs ... took 0.000740999999991s
Checking validity of VCs ... took 0.849192s

Generating VCs ... took 0.000810999999999s
Checking validity of VCs ... took 0.246801s

Generating VCs ... took 0.00081999999999s
Checking validity of VCs ... took 0.248491s

Generating VCs ... took 0.000764000000004s
Checking validity of VCs ... took 0.248242s

Generating VCs ... took 0.00142699999999s
Checking validity of VCs ... took 1.895822s

Iter : 40 To explore : 6 Explored : 96 Total elapsed : 78.141121
Generating VCs ... took 0.000750999999994s
Checking validity of VCs ... took 0.357725s

Generating VCs ... took 0.000754000000001s
Checking validity of VCs ... took 2.099473s

Generating VCs ... took 0.00165100000001s
Checking validity of VCs ... took 0.362209s

Generating VCs ... took 0.000743999999997s
Checking validity of VCs ... took 0.164205s

Generating VCs ... took 0.000784999999993s
Checking validity of VCs ... took 0.259262s

Generating VCs ... took 0.000772000000012s
Checking validity of VCs ... took 0.26184s

Generating VCs ... took 0.000821999999999s
Checking validity of VCs ... took 0.349047s

Generating VCs ... took 0.000575999999995s
Checking validity of VCs ... 
1/10 ... [NO_EFFECT] line 27, (@pre1 == balanceOf[msg.sender]) ... unproven
2/10 ... [NO_EFFECT] line 33, (@pre2 == balanceOf[msg.sender]) ... unproven
3/10 ... [ASSIGN_CONST] line 27, (balanceOf[msg.sender] == 0) ... unproven
4/10 ... [ASSIGN_CONST] line 33, (balanceOf[msg.sender] == 0) ... unproven
5/10 ... [DEAD] line 23, false ... unproven
6/10 ... [DEAD] line 24, false ... unproven
7/10 ... [DEAD] line 26, false ... unproven
8/10 ... [DEAD] line 31, false ... unproven
9/10 ... [DEAD] line 35, false ... unproven
10/10 ... [DEAD] line 36, false ... unproven
took 0.277203s


===== Vulnerability Report =====
[1] [IO] line 23, (numTokens * PRICE_PER_TOKEN) : proven
[2] [IO] line 24, (numTokens * PRICE_PER_TOKEN) : proven
[3] [IO] line 26, (balanceOf[msg.sender] + numTokens) : proven
[4] [IO] line 27, (balanceOf[msg.sender] + numTokens) : proven
[5] [IO] line 33, (balanceOf[msg.sender] - numTokens) : proven
[6] [IO] line 35, (numTokens * PRICE_PER_TOKEN) : proven
[7] [IO] line 36, (numTokens * PRICE_PER_TOKEN) : proven
[8] [ETH_LEAK] line 36, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 27, (@pre1 == balanceOf[msg.sender]) : unproven
[2] [NO_EFFECT] line 33, (@pre2 == balanceOf[msg.sender]) : unproven
[3] [ASSIGN_CONST] line 27, (balanceOf[msg.sender] == 0) : unproven
[4] [ASSIGN_CONST] line 33, (balanceOf[msg.sender] == 0) : unproven
[5] [DEAD] line 23, false : unproven
[6] [DEAD] line 24, false : unproven
[7] [DEAD] line 26, false : unproven
[8] [DEAD] line 31, false : unproven
[9] [DEAD] line 35, false : unproven
[10] [DEAD] line 36, false : unproven

============ Statistics ============
# Iter                    : 47
# Alarm / Query           : 1 / 8
- integer over/underflow  : 0 / 7
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 1
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 0

Time Elapsed (Real) : 82.2972099781
Time Elapsed (CPU)  : 82.282632
