[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.000243s
[INFO] # path : 15

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.004784s
Generating VCs ... took 0.00097s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.032544
[
0 -> true
]
[
]
1/7 ... [IO] line 23, (numTokens * PRICE_PER_TOKEN) ... proven
2/7 ... [IO] line 24, (numTokens * PRICE_PER_TOKEN) ... proven
3/7 ... [IO] line 26, (balanceOf[msg.sender] + numTokens) ... proven
4/7 ... [IO] line 27, (balanceOf[msg.sender] + numTokens) ... proven
5/7 ... [IO] line 33, (balanceOf[msg.sender] - numTokens) ... proven
6/7 ... [IO] line 35, (numTokens * PRICE_PER_TOKEN) ... unproven
7/7 ... [ETH_LEAK] line 35, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); ... unproven
took 0.140791s

Generating VCs ... took 0.000679s
Checking validity of VCs ... took 1.079711s

Generating VCs ... took 0.000411s
Checking validity of VCs ... took 21.252009s

Generating VCs ... took 0.000413000000002s
Checking validity of VCs ... took 0.177965s

Generating VCs ... took 0.000426999999998s
Checking validity of VCs ... took 0.162146s

Generating VCs ... took 0.000443999999998s
Checking validity of VCs ... took 0.157946s

Generating VCs ... took 0.000425999999997s
Checking validity of VCs ... took 9.947294s

Generating VCs ... took 0.000427000000002s
Checking validity of VCs ... took 0.933474s

Generating VCs ... took 0.000444000000002s
Checking validity of VCs ... took 0.514988s

Iter : 10 To explore : 49 Explored : 58 Total elapsed : 34.407547
Generating VCs ... took 0.000405999999998s
Checking validity of VCs ... took 0.536076s

Generating VCs ... took 0.000507000000006s
Checking validity of VCs ... took 1.58018s

Generating VCs ... took 0.000427999999999s
Checking validity of VCs ... took 1.521981s

Generating VCs ... took 0.000416999999999s
Checking validity of VCs ... took 2.03788s

Generating VCs ... took 0.000520000000002s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 14 Total elapsed : 40.089913
[
0 -> (PRICE_PER_TOKEN__@8 == 1000000000000000000)
]
[
]
1/7 ... [IO] line 23, (numTokens * PRICE_PER_TOKEN) ... proven
2/7 ... [IO] line 24, (numTokens * PRICE_PER_TOKEN) ... proven
3/7 ... [IO] line 26, (balanceOf[msg.sender] + numTokens) ... proven
4/7 ... [IO] line 27, (balanceOf[msg.sender] + numTokens) ... proven
5/7 ... [IO] line 33, (balanceOf[msg.sender] - numTokens) ... proven
6/7 ... [IO] line 35, (numTokens * PRICE_PER_TOKEN) ... unproven
7/7 ... [ETH_LEAK] line 35, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); ... unproven
took 0.112975s

Generating VCs ... took 0.000458999999999s
Checking validity of VCs ... took 0.013965s

Generating VCs ... took 0.000458999999999s
Checking validity of VCs ... took 0.889575s

Generating VCs ... took 0.000461999999999s
Checking validity of VCs ... took 18.70023s

Generating VCs ... took 0.000472000000002s
Checking validity of VCs ... took 0.179204s

Generating VCs ... took 0.000413999999999s
Checking validity of VCs ... took 0.178095s

Iter : 20 To explore : 20 Explored : 90 Total elapsed : 60.169952
Generating VCs ... took 0.000386999999996s
Checking validity of VCs ... took 0.182413s

Generating VCs ... took 0.000392999999995s
Checking validity of VCs ... took 12.237885s

Generating VCs ... took 0.000447999999992s
Checking validity of VCs ... took 0.594142s

Generating VCs ... took 0.000529999999998s
Checking validity of VCs ... took 1.249165s

Generating VCs ... took 0.000392000000005s
Checking validity of VCs ... took 0.534366s

Generating VCs ... took 0.000433999999998s
Checking validity of VCs ... took 1.837025s

Generating VCs ... took 0.000430999999992s
Checking validity of VCs ... took 1.920783s

Generating VCs ... took 0.000422999999998s
Checking validity of VCs ... took 1.995517s

Generating VCs ... took 0.000450999999998s
Checking validity of VCs ... took 2.125422s

Generating VCs ... took 0.000543999999991s
Checking validity of VCs ... took 2.481151s

Iter : 30 To explore : 13 Explored : 93 Total elapsed : 85.34007
Generating VCs ... took 0.000422s
Checking validity of VCs ... took 2.484937s

Generating VCs ... took 0.000405999999998s
Checking validity of VCs ... took 0.140633s

Generating VCs ... took 0.000427999999999s
Checking validity of VCs ... took 0.141271s

Generating VCs ... took 0.000584000000003s
Checking validity of VCs ... took 0.182401s

Generating VCs ... took 0.000435999999993s
Checking validity of VCs ... took 0.223231s

Generating VCs ... took 0.000422999999998s
Checking validity of VCs ... took 0.720584s

Generating VCs ... took 0.000436000000008s
Checking validity of VCs ... took 0.218114s

Generating VCs ... took 0.000421000000003s
Checking validity of VCs ... took 0.226237s

Generating VCs ... took 0.000432000000004s
Checking validity of VCs ... took 0.226561s

Generating VCs ... took 0.000501999999997s
Checking validity of VCs ... took 1.805082s

Iter : 40 To explore : 6 Explored : 96 Total elapsed : 91.719239
Generating VCs ... took 0.000427000000002s
Checking validity of VCs ... took 0.337062s

Generating VCs ... took 0.000485999999995s
Checking validity of VCs ... took 2.016136s

Generating VCs ... took 0.000470000000007s
Checking validity of VCs ... took 0.335782s

Generating VCs ... took 0.000427999999999s
Checking validity of VCs ... took 0.1433s

Generating VCs ... took 0.000527000000005s
Checking validity of VCs ... took 0.232617s

Generating VCs ... took 0.000510000000006s
Checking validity of VCs ... took 0.236554s

Generating VCs ... took 0.000433999999998s
Checking validity of VCs ... took 0.323716s

Generating VCs ... took 0.000212000000005s
Checking validity of VCs ... 
1/9 ... [NO_EFFECT] line 27, (@pre1 == balanceOf[msg.sender]) ... unproven
2/9 ... [NO_EFFECT] line 33, (@pre2 == balanceOf[msg.sender]) ... unproven
3/9 ... [ASSIGN_CONST] line 27, (balanceOf[msg.sender] == 0) ... unproven
4/9 ... [ASSIGN_CONST] line 33, (balanceOf[msg.sender] == 0) ... unproven
5/9 ... [DEAD] line 23, false ... unproven
6/9 ... [DEAD] line 24, false ... unproven
7/9 ... [DEAD] line 26, false ... unproven
8/9 ... [DEAD] line 31, false ... unproven
9/9 ... [DEAD] line 35, false ... unproven
took 0.272649s


===== Vulnerability Report =====
[1] [IO] line 23, (numTokens * PRICE_PER_TOKEN) : proven
[2] [IO] line 24, (numTokens * PRICE_PER_TOKEN) : proven
[3] [IO] line 26, (balanceOf[msg.sender] + numTokens) : proven
[4] [IO] line 27, (balanceOf[msg.sender] + numTokens) : proven
[5] [IO] line 33, (balanceOf[msg.sender] - numTokens) : proven
[6] [IO] line 35, (numTokens * PRICE_PER_TOKEN) : unproven
[7] [ETH_LEAK] line 35, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 27, (@pre1 == balanceOf[msg.sender]) : unproven
[2] [NO_EFFECT] line 33, (@pre2 == balanceOf[msg.sender]) : unproven
[3] [ASSIGN_CONST] line 27, (balanceOf[msg.sender] == 0) : unproven
[4] [ASSIGN_CONST] line 33, (balanceOf[msg.sender] == 0) : unproven
[5] [DEAD] line 23, false : unproven
[6] [DEAD] line 24, false : unproven
[7] [DEAD] line 26, false : unproven
[8] [DEAD] line 31, false : unproven
[9] [DEAD] line 35, false : unproven

============ Statistics ============
# Iter                    : 47
# Alarm / Query           : 2 / 7
- integer over/underflow  : 1 / 6
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 1
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 0

Time Elapsed (Real) : 95.6396830082
Time Elapsed (CPU)  : 95.624937
