[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.000185s
[INFO] # path : 13

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.00045s
Generating VCs ... took 0.000901s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.024134
[
0 -> true
]
[
]
1/6 ... [IO] line 23, (numTokens * PRICE_PER_TOKEN) ... proven
2/6 ... [IO] line 24, (numTokens * PRICE_PER_TOKEN) ... proven
3/6 ... [IO] line 26, (balanceOf[msg.sender] + numTokens) ... unproven
4/6 ... [IO] line 32, (balanceOf[msg.sender] - numTokens) ... proven
5/6 ... [IO] line 34, (numTokens * PRICE_PER_TOKEN) ... unproven
6/6 ... [ETH_LEAK] line 34, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); ... unproven
took 0.176848s

Generating VCs ... took 0.000465s
Checking validity of VCs ... took 0.670348s

Generating VCs ... took 0.000423s
Checking validity of VCs ... took 18.199599s

Generating VCs ... took 0.000377s
Checking validity of VCs ... took 0.159295s

Generating VCs ... took 0.000806999999998s
Checking validity of VCs ... took 0.169432s

Generating VCs ... took 0.000360000000001s
Checking validity of VCs ... took 0.135499s

Generating VCs ... took 0.000366s
Checking validity of VCs ... took 8.17288s

Generating VCs ... took 0.00037s
Checking validity of VCs ... took 0.60586s

Generating VCs ... took 0.000360999999998s
Checking validity of VCs ... took 0.79428s

Iter : 10 To explore : 49 Explored : 58 Total elapsed : 29.117056
Generating VCs ... took 0.000355000000003s
Checking validity of VCs ... took 0.643874s

Generating VCs ... took 0.000359999999997s
Checking validity of VCs ... took 1.661041s

Generating VCs ... took 0.000356s
Checking validity of VCs ... took 1.555499s

Generating VCs ... took 0.000362999999993s
Checking validity of VCs ... took 2.275975s

Generating VCs ... took 0.000359999999993s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 14 Total elapsed : 35.259256
[
0 -> (PRICE_PER_TOKEN__@8 == 1000000000000000000)
]
[
]
1/6 ... [IO] line 23, (numTokens * PRICE_PER_TOKEN) ... proven
2/6 ... [IO] line 24, (numTokens * PRICE_PER_TOKEN) ... proven
3/6 ... [IO] line 26, (balanceOf[msg.sender] + numTokens) ... unproven
4/6 ... [IO] line 32, (balanceOf[msg.sender] - numTokens) ... proven
5/6 ... [IO] line 34, (numTokens * PRICE_PER_TOKEN) ... unproven
6/6 ... [ETH_LEAK] line 34, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); ... unproven
took 0.182494s

Generating VCs ... took 0.000388000000001s
Checking validity of VCs ... took 0.014097s

Generating VCs ... took 0.000352999999997s
Checking validity of VCs ... took 0.746435s

Generating VCs ... took 0.000368999999999s
Checking validity of VCs ... took 19.360897s

Generating VCs ... took 0.000509000000008s
Checking validity of VCs ... took 0.145421s

Generating VCs ... took 0.000411999999997s
Checking validity of VCs ... took 0.147278s

Iter : 20 To explore : 20 Explored : 90 Total elapsed : 55.861763
Generating VCs ... took 0.000357999999999s
Checking validity of VCs ... took 0.153347s

Generating VCs ... took 0.000363999999998s
Checking validity of VCs ... took 9.995707s

Generating VCs ... took 0.000378000000012s
Checking validity of VCs ... took 0.770749s

Generating VCs ... took 0.000422999999998s
Checking validity of VCs ... took 0.663913s

Generating VCs ... took 0.000366999999997s
Checking validity of VCs ... took 0.49481s

Generating VCs ... took 0.000366s
Checking validity of VCs ... took 1.682349s

Generating VCs ... took 0.000444999999999s
Checking validity of VCs ... took 2.221356s

Generating VCs ... took 0.000366999999997s
Checking validity of VCs ... took 2.137355s

Generating VCs ... took 0.000369000000006s
Checking validity of VCs ... took 2.413716s

Generating VCs ... took 0.000378999999995s
Checking validity of VCs ... took 3.056607s

Iter : 30 To explore : 13 Explored : 93 Total elapsed : 79.463288
Generating VCs ... took 0.000362999999993s
Checking validity of VCs ... took 2.817272s

Generating VCs ... took 0.000415000000004s
Checking validity of VCs ... took 0.145084s

Generating VCs ... took 0.000364000000005s
Checking validity of VCs ... took 0.146803s

Generating VCs ... took 0.000364000000005s
Checking validity of VCs ... took 0.149222s

Generating VCs ... took 0.000410000000002s
Checking validity of VCs ... took 0.229753s

Generating VCs ... took 0.000367999999995s
Checking validity of VCs ... took 0.754882s

Generating VCs ... took 0.000413999999992s
Checking validity of VCs ... took 0.237355s

Generating VCs ... took 0.000370000000004s
Checking validity of VCs ... took 0.247411s

Generating VCs ... took 0.000393000000003s
Checking validity of VCs ... took 0.245236s

Generating VCs ... took 0.000364999999988s
Checking validity of VCs ... took 1.738362s

Iter : 40 To explore : 6 Explored : 96 Total elapsed : 86.184719
Generating VCs ... took 0.000365000000002s
Checking validity of VCs ... took 0.359213s

Generating VCs ... took 0.000362999999993s
Checking validity of VCs ... took 2.231455s

Generating VCs ... took 0.000368999999992s
Checking validity of VCs ... took 0.367447s

Generating VCs ... took 0.000440000000012s
Checking validity of VCs ... took 0.150928s

Generating VCs ... took 0.000368999999992s
Checking validity of VCs ... took 0.246206s

Generating VCs ... took 0.000367999999995s
Checking validity of VCs ... took 0.250223s

Generating VCs ... took 0.000369000000006s
Checking validity of VCs ... took 0.350981s

Generating VCs ... took 0.000180999999998s
Checking validity of VCs ... 
1/8 ... [NO_EFFECT] line 26, (@pre1 == balanceOf[msg.sender]) ... unproven
2/8 ... [NO_EFFECT] line 32, (@pre2 == balanceOf[msg.sender]) ... unproven
3/8 ... [ASSIGN_CONST] line 26, (balanceOf[msg.sender] == 0) ... unproven
4/8 ... [ASSIGN_CONST] line 32, (balanceOf[msg.sender] == 0) ... unproven
5/8 ... [DEAD] line 23, false ... unproven
6/8 ... [DEAD] line 24, false ... unproven
7/8 ... [DEAD] line 30, false ... unproven
8/8 ... [DEAD] line 34, false ... unproven
took 0.130315s


===== Vulnerability Report =====
[1] [IO] line 23, (numTokens * PRICE_PER_TOKEN) : proven
[2] [IO] line 24, (numTokens * PRICE_PER_TOKEN) : proven
[3] [IO] line 26, (balanceOf[msg.sender] + numTokens) : unproven
[4] [IO] line 32, (balanceOf[msg.sender] - numTokens) : proven
[5] [IO] line 34, (numTokens * PRICE_PER_TOKEN) : unproven
[6] [ETH_LEAK] line 34, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 26, (@pre1 == balanceOf[msg.sender]) : unproven
[2] [NO_EFFECT] line 32, (@pre2 == balanceOf[msg.sender]) : unproven
[3] [ASSIGN_CONST] line 26, (balanceOf[msg.sender] == 0) : unproven
[4] [ASSIGN_CONST] line 32, (balanceOf[msg.sender] == 0) : unproven
[5] [DEAD] line 23, false : unproven
[6] [DEAD] line 24, false : unproven
[7] [DEAD] line 30, false : unproven
[8] [DEAD] line 34, false : unproven

============ Statistics ============
# Iter                    : 47
# Alarm / Query           : 3 / 6
- integer over/underflow  : 2 / 5
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 1
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 0

Time Elapsed (Real) : 90.2977387905
Time Elapsed (CPU)  : 90.277428
