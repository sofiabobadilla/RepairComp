[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.004711s
[INFO] # path : 18

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000698s
Generating VCs ... took 0.00168s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.036559
[
0 -> true
]
[
]
1/7 ... [IO] line 23, (numTokens * PRICE_PER_TOKEN) ... proven
2/7 ... [IO] line 24, (numTokens * PRICE_PER_TOKEN) ... proven
3/7 ... [IO] line 26, (balanceOf[msg.sender] + numTokens) ... unproven
4/7 ... [IO] line 32, (balanceOf[msg.sender] - numTokens) ... proven
5/7 ... [IO] line 34, (numTokens * PRICE_PER_TOKEN) ... proven
6/7 ... [IO] line 35, (numTokens * PRICE_PER_TOKEN) ... proven
7/7 ... [ETH_LEAK] line 35, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); ... unproven
took 0.379197s

Generating VCs ... took 0.000742s
Checking validity of VCs ... took 0.698733s

Generating VCs ... took 0.000922s
Checking validity of VCs ... took 16.580812s

Generating VCs ... took 0.00075s
Checking validity of VCs ... took 0.133094s

Generating VCs ... took 0.000771s
Checking validity of VCs ... took 0.148763s

Generating VCs ... took 0.00074s
Checking validity of VCs ... took 0.146655s

Generating VCs ... took 0.000749000000003s
Checking validity of VCs ... took 14.879897s

Generating VCs ... took 0.000710000000005s
Checking validity of VCs ... took 0.608192s

Generating VCs ... took 0.000762000000002s
Checking validity of VCs ... took 0.595751s

Iter : 10 To explore : 49 Explored : 58 Total elapsed : 34.217539
Generating VCs ... took 0.000733000000004s
Checking validity of VCs ... took 0.654667s

Generating VCs ... took 0.000641999999999s
Checking validity of VCs ... took 1.441245s

Generating VCs ... took 0.000688999999994s
Checking validity of VCs ... took 1.534015s

Generating VCs ... took 0.000671999999994s
Checking validity of VCs ... took 1.960048s

Generating VCs ... took 0.000680999999993s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 14 Total elapsed : 39.814841
[
0 -> (PRICE_PER_TOKEN__@8 == 1000000000000000000)
]
[
]
1/7 ... [IO] line 23, (numTokens * PRICE_PER_TOKEN) ... proven
2/7 ... [IO] line 24, (numTokens * PRICE_PER_TOKEN) ... proven
3/7 ... [IO] line 26, (balanceOf[msg.sender] + numTokens) ... unproven
4/7 ... [IO] line 32, (balanceOf[msg.sender] - numTokens) ... proven
5/7 ... [IO] line 34, (numTokens * PRICE_PER_TOKEN) ... proven
6/7 ... [IO] line 35, (numTokens * PRICE_PER_TOKEN) ... proven
7/7 ... [ETH_LEAK] line 35, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); ... unproven
took 0.121846s

Generating VCs ... took 0.000697000000002s
Checking validity of VCs ... took 0.013429s

Generating VCs ... took 0.000745000000002s
Checking validity of VCs ... took 0.249449s

Generating VCs ... took 0.000675999999999s
Checking validity of VCs ... took 13.530572s

Generating VCs ... took 0.000670999999997s
Checking validity of VCs ... took 0.151826s

Generating VCs ... took 0.000720999999999s
Checking validity of VCs ... took 0.150669s

Iter : 20 To explore : 20 Explored : 90 Total elapsed : 54.039361
Generating VCs ... took 0.000674000000004s
Checking validity of VCs ... took 0.158864s

Generating VCs ... took 0.000622999999997s
Checking validity of VCs ... took 11.098161s

Generating VCs ... took 0.000716999999995s
Checking validity of VCs ... took 0.869504s

Generating VCs ... took 0.000817000000012s
Checking validity of VCs ... took 0.760078s

Generating VCs ... took 0.000667000000007s
Checking validity of VCs ... took 0.488066s

Generating VCs ... took 0.000709000000001s
Checking validity of VCs ... took 1.654171s

Generating VCs ... took 0.000730000000004s
Checking validity of VCs ... took 1.848425s

Generating VCs ... took 0.000804000000002s
Checking validity of VCs ... took 2.188549s

Generating VCs ... took 0.000743999999997s
Checking validity of VCs ... took 2.434501s

Generating VCs ... took 0.000620999999995s
Checking validity of VCs ... took 2.739572s

Iter : 30 To explore : 13 Explored : 93 Total elapsed : 78.295479
Generating VCs ... took 0.000741000000005s
Checking validity of VCs ... took 2.194806s

Generating VCs ... took 0.000838000000002s
Checking validity of VCs ... took 0.151332s

Generating VCs ... took 0.000715999999997s
Checking validity of VCs ... took 0.153376s

Generating VCs ... took 0.000720000000001s
Checking validity of VCs ... took 0.176736s

Generating VCs ... took 0.000750999999994s
Checking validity of VCs ... took 0.243338s

Generating VCs ... took 0.000754999999998s
Checking validity of VCs ... took 0.714356s

Generating VCs ... took 0.000699999999995s
Checking validity of VCs ... took 0.23689s

Generating VCs ... took 0.000764000000004s
Checking validity of VCs ... took 0.250489s

Generating VCs ... took 0.000641999999999s
Checking validity of VCs ... took 0.24919s

Generating VCs ... took 0.000728999999993s
Checking validity of VCs ... took 1.551397s

Iter : 40 To explore : 6 Explored : 96 Total elapsed : 84.23027
Generating VCs ... took 0.000714000000002s
Checking validity of VCs ... took 0.353816s

Generating VCs ... took 0.000760999999997s
Checking validity of VCs ... took 2.23674s

Generating VCs ... took 0.000799000000001s
Checking validity of VCs ... took 0.35406s

Generating VCs ... took 0.000782999999998s
Checking validity of VCs ... took 0.160171s

Generating VCs ... took 0.000691000000003s
Checking validity of VCs ... took 0.254315s

Generating VCs ... took 0.000793000000002s
Checking validity of VCs ... took 0.25824s

Generating VCs ... took 0.000641999999999s
Checking validity of VCs ... took 0.35177s

Generating VCs ... took 0.000291999999988s
Checking validity of VCs ... 
1/9 ... [NO_EFFECT] line 26, (@pre1 == balanceOf[msg.sender]) ... unproven
2/9 ... [NO_EFFECT] line 32, (@pre2 == balanceOf[msg.sender]) ... unproven
3/9 ... [ASSIGN_CONST] line 26, (balanceOf[msg.sender] == 0) ... unproven
4/9 ... [ASSIGN_CONST] line 32, (balanceOf[msg.sender] == 0) ... unproven
5/9 ... [DEAD] line 23, false ... unproven
6/9 ... [DEAD] line 24, false ... unproven
7/9 ... [DEAD] line 30, false ... unproven
8/9 ... [DEAD] line 34, false ... unproven
9/9 ... [DEAD] line 35, false ... unproven
took 0.139758s


===== Vulnerability Report =====
[1] [IO] line 23, (numTokens * PRICE_PER_TOKEN) : proven
[2] [IO] line 24, (numTokens * PRICE_PER_TOKEN) : proven
[3] [IO] line 26, (balanceOf[msg.sender] + numTokens) : unproven
[4] [IO] line 32, (balanceOf[msg.sender] - numTokens) : proven
[5] [IO] line 34, (numTokens * PRICE_PER_TOKEN) : proven
[6] [IO] line 35, (numTokens * PRICE_PER_TOKEN) : proven
[7] [ETH_LEAK] line 35, msg.sender.transfer((numTokens * PRICE_PER_TOKEN)); : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 26, (@pre1 == balanceOf[msg.sender]) : unproven
[2] [NO_EFFECT] line 32, (@pre2 == balanceOf[msg.sender]) : unproven
[3] [ASSIGN_CONST] line 26, (balanceOf[msg.sender] == 0) : unproven
[4] [ASSIGN_CONST] line 32, (balanceOf[msg.sender] == 0) : unproven
[5] [DEAD] line 23, false : unproven
[6] [DEAD] line 24, false : unproven
[7] [DEAD] line 30, false : unproven
[8] [DEAD] line 34, false : unproven
[9] [DEAD] line 35, false : unproven

============ Statistics ============
# Iter                    : 47
# Alarm / Query           : 2 / 7
- integer over/underflow  : 1 / 6
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 1
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 0

Time Elapsed (Real) : 88.3623919487
Time Elapsed (CPU)  : 88.348365
