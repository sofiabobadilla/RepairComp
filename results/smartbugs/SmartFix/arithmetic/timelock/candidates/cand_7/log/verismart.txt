[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.000144s
[INFO] # path : 12

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000345s
Generating VCs ... took 0.000736s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.031253
[
0 -> true
]
[
]
1/7 ... [IO] line 16, (balances[msg.sender] + msg.value) ... proven
2/7 ... [IO] line 17, (balances[msg.sender] + msg.value) ... proven
3/7 ... [IO] line 18, (now + 604800) ... proven
4/7 ... [IO] line 19, (now + 604800) ... proven
5/7 ... [IO] line 24, (lockTime[msg.sender] + _secondsToIncrease) ... proven
6/7 ... [IO] line 25, (lockTime[msg.sender] + _secondsToIncrease) ... proven
7/7 ... [ETH_LEAK] line 33, msg.sender.transfer(transferValue); ... unproven
took 0.072107s

Generating VCs ... took 0.00028s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 9.352611
[
0 -> @Invest_sum >= Î£_u balances__@5
]
[
]
1/7 ... [IO] line 16, (balances[msg.sender] + msg.value) ... proven
2/7 ... [IO] line 17, (balances[msg.sender] + msg.value) ... proven
3/7 ... [IO] line 18, (now + 604800) ... proven
4/7 ... [IO] line 19, (now + 604800) ... proven
5/7 ... [IO] line 24, (lockTime[msg.sender] + _secondsToIncrease) ... proven
6/7 ... [IO] line 25, (lockTime[msg.sender] + _secondsToIncrease) ... proven
7/7 ... [ETH_LEAK] line 33, msg.sender.transfer(transferValue); ... proven
took 9.459823s

Generating VCs ... took 0.000268999999999s
Checking validity of VCs ... 
1/13 ... [NO_EFFECT] line 17, (@pre2 == balances[msg.sender]) ... unproven
2/13 ... [NO_EFFECT] line 19, (@pre1 == lockTime[msg.sender]) ... unproven
3/13 ... [NO_EFFECT] line 25, (@pre3 == lockTime[msg.sender]) ... unproven
4/13 ... [NO_EFFECT] line 31, (@pre4 == transferValue) ... unproven
5/13 ... [ASSIGN_CONST] line 17, (balances[msg.sender] == 0) ... unproven
6/13 ... [ASSIGN_CONST] line 19, (lockTime[msg.sender] == 0) ... unproven
7/13 ... [ASSIGN_CONST] line 25, (lockTime[msg.sender] == 0) ... unproven
8/13 ... [DEAD] line 16, false ... unproven
9/13 ... [DEAD] line 18, false ... unproven
10/13 ... [DEAD] line 24, false ... unproven
11/13 ... [DEAD] line 29, false ... unproven
12/13 ... [DEAD] line 30, false ... unproven
13/13 ... [DEAD] line 33, false ... unproven
took 2.293772s


===== Vulnerability Report =====
[1] [IO] line 16, (balances[msg.sender] + msg.value) : proven
[2] [IO] line 17, (balances[msg.sender] + msg.value) : proven
[3] [IO] line 18, (now + 604800) : proven
[4] [IO] line 19, (now + 604800) : proven
[5] [IO] line 24, (lockTime[msg.sender] + _secondsToIncrease) : proven
[6] [IO] line 25, (lockTime[msg.sender] + _secondsToIncrease) : proven
[7] [ETH_LEAK] line 33, msg.sender.transfer(transferValue); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 17, (@pre2 == balances[msg.sender]) : unproven
[2] [NO_EFFECT] line 19, (@pre1 == lockTime[msg.sender]) : unproven
[3] [NO_EFFECT] line 25, (@pre3 == lockTime[msg.sender]) : unproven
[4] [NO_EFFECT] line 31, (@pre4 == transferValue) : unproven
[5] [ASSIGN_CONST] line 17, (balances[msg.sender] == 0) : unproven
[6] [ASSIGN_CONST] line 19, (lockTime[msg.sender] == 0) : unproven
[7] [ASSIGN_CONST] line 25, (lockTime[msg.sender] == 0) : unproven
[8] [DEAD] line 16, false : unproven
[9] [DEAD] line 18, false : unproven
[10] [DEAD] line 24, false : unproven
[11] [DEAD] line 29, false : unproven
[12] [DEAD] line 30, false : unproven
[13] [DEAD] line 33, false : unproven

============ Statistics ============
# Iter                    : 2
# Alarm / Query           : 0 / 7
- integer over/underflow  : 0 / 6
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 0

Time Elapsed (Real) : 11.8831830025
Time Elapsed (CPU)  : 11.856769
