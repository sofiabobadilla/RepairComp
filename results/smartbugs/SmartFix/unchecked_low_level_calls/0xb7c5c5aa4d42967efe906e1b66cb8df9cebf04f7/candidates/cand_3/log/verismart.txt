[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 6
[INFO] reachable : 3
[INFO] Generating Paths ... took 0.000151s
[INFO] # path : 10

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.00042s
Generating VCs ... took 0.001557s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.040108
[
-1 -> true
0 -> true
]
[
]
1/5 ... [IO] line 31, (balances[msg.sender] + msg.value) ... unproven
2/5 ... [ETH_LEAK] line 36, msg.sender.call.value(balances[msg.sender])(); ... unproven
3/5 ... [RE_EL] line 36, msg.sender.call.value(balances[msg.sender])(); ... unproven
4/5 ... [RE] line 30, (keepMyEther, @fallback, []) ... unproven
5/5 ... [RE] line 34, (keepMyEther, withdraw, []) ... unproven
took 0.283286s

Generating VCs ... took 0.000609s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.356771
[
-1 -> (_locked__@3 == true)
0 -> true
]
[
]
1/5 ... [IO] line 31, (balances[msg.sender] + msg.value) ... unproven
2/5 ... [ETH_LEAK] line 36, msg.sender.call.value(balances[msg.sender])(); ... unproven
3/5 ... [RE_EL] line 36, msg.sender.call.value(balances[msg.sender])(); ... unproven
4/5 ... [RE] line 30, (keepMyEther, @fallback, []) ... proven
5/5 ... [RE] line 34, (keepMyEther, withdraw, []) ... proven
took 0.38283s

Generating VCs ... took 0.00051s
Checking validity of VCs ... took 3.493928s

Generating VCs ... took 0.000571s
Checking validity of VCs ... took 0.202799s

Generating VCs ... took 0.000610000000001s
Checking validity of VCs ... took 0.181522s

Generating VCs ... took 0.000843000000001s
Checking validity of VCs ... took 1.22567s

Generating VCs ... took 0.000575s
Checking validity of VCs ... took 0.849084s

Generating VCs ... took 0.000524s
Checking validity of VCs ... took 1.126016s

Generating VCs ... took 0.000609s
Checking validity of VCs ... took 2.717289s

Iter : 10 To explore : 4 Explored : 17 Total elapsed : 10.509689
Generating VCs ... took 0.001209s
Checking validity of VCs ... took 0.084995s

Generating VCs ... took 0.000503999999999s
Checking validity of VCs ... took 2.790814s

Generating VCs ... took 0.000585000000001s
Checking validity of VCs ... took 0.331729s

Generating VCs ... took 0.000916999999999s
Checking validity of VCs ... took 1.067431s

Generating VCs ... took 0.000543999999998s
Checking validity of VCs ... took 0.550457s

Generating VCs ... took 0.000602000000001s
Checking validity of VCs ... took 1.544241s

Generating VCs ... took 0.000574s
Checking validity of VCs ... took 2.30559s

Generating VCs ... took 0.000288999999999s
Checking validity of VCs ... 
1/2 ... [NO_EFFECT] line 31, (@pre1 == balances[msg.sender]) ... unproven
2/2 ... [ASSIGN_CONST] line 31, (balances[msg.sender] == 0) ... unproven
took 0.064704s


===== Vulnerability Report =====
[1] [IO] line 31, (balances[msg.sender] + msg.value) : unproven
[2] [ETH_LEAK] line 36, msg.sender.call.value(balances[msg.sender])(); : unproven
[3] [RE_EL] line 36, msg.sender.call.value(balances[msg.sender])(); : unproven
[4] [RE] line 30, (keepMyEther, @fallback, []) : proven
[5] [RE] line 34, (keepMyEther, withdraw, []) : proven

===== Regression Report =====
[1] [NO_EFFECT] line 31, (@pre1 == balances[msg.sender]) : unproven
[2] [ASSIGN_CONST] line 31, (balances[msg.sender] == 0) : unproven

============ Statistics ============
# Iter                    : 17
# Alarm / Query           : 3 / 5
- integer over/underflow  : 1 / 1
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 1
- reentrancy-leaking      : 1 / 1
- reentrancy              : 0 / 2
- tx.origin               : 0 / 0

Time Elapsed (Real) : 19.2781050205
Time Elapsed (CPU)  : 19.257667
