[INFO] compiled with solc ver. 0.4.25
[INFO] all funcs : 9
[INFO] reachable : 7

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[STEP] Run analyzer
[STEP] Collect fix targets
    (IO, (KingOfTheEtherThrone/claimThrone/[string]), 126, (valuePaid * wizardCommissionFractionNum)),
    (IO, (KingOfTheEtherThrone/claimThrone/[string]), 128, (valuePaid - wizardCommission)),
    (IO, (KingOfTheEtherThrone/claimThrone/[string]), 148, (currentClaimPrice * claimPriceAdjustNum)),
    (IO, (KingOfTheEtherThrone/claimThrone/[string]), 152, (100000000000000 * (rawNewClaimPrice / 100000000000000))),
    (IO, (KingOfTheEtherThrone/claimThrone/[string]), 154, (1000000000000000 * (rawNewClaimPrice / 1000000000000000))),
    (IO, (KingOfTheEtherThrone/claimThrone/[string]), 156, (10000000000000000 * (rawNewClaimPrice / 10000000000000000))),
    (IO, (KingOfTheEtherThrone/claimThrone/[string]), 158, (100000000000000000 * (rawNewClaimPrice / 100000000000000000))),
    (IO, (KingOfTheEtherThrone/claimThrone/[string]), 160, (1000000000000000000 * (rawNewClaimPrice / 1000000000000000000))),
    (IO, (KingOfTheEtherThrone/claimThrone/[string]), 162, (10000000000000000000 * (rawNewClaimPrice / 10000000000000000000))),
    (ETH_LEAK, (KingOfTheEtherThrone/claimThrone/[string]), 110, msg.sender.send(valuePaid);),
    (ETH_LEAK, (KingOfTheEtherThrone/claimThrone/[string]), 118, msg.sender.send(excessPaid);),
    (ETH_LEAK, (KingOfTheEtherThrone/claimThrone/[string]), 132, currentMonarch.etherAddress.send(compensation);),
    (ETH_LEAK, (KingOfTheEtherThrone/sweepCommission/[uint256]), 174, wizardAddress.send(amount);)

[INFO] # of basic patch components : 10
[INFO] extracted components
[
InsertLine (126, assume(((valuePaid == 0) || (((valuePaid * wizardCommissionFractionNum) / valuePaid) == wizardCommissionFractionNum)));),
InsertLine (128, assume((valuePaid >= wizardCommission));),
InsertLine (148, assume(((currentClaimPrice == 0) || (((currentClaimPrice * claimPriceAdjustNum) / currentClaimPrice) == claimPriceAdjustNum)));),
InsertLine (152, assume(((100000000000000 == 0) || (((100000000000000 * (rawNewClaimPrice / 100000000000000)) / 100000000000000) == (rawNewClaimPrice / 100000000000000))));),
InsertLine (154, assume(((1000000000000000 == 0) || (((1000000000000000 * (rawNewClaimPrice / 1000000000000000)) / 1000000000000000) == (rawNewClaimPrice / 1000000000000000))));),
InsertLine (156, assume(((10000000000000000 == 0) || (((10000000000000000 * (rawNewClaimPrice / 10000000000000000)) / 10000000000000000) == (rawNewClaimPrice / 10000000000000000))));),
InsertLine (158, assume(((100000000000000000 == 0) || (((100000000000000000 * (rawNewClaimPrice / 100000000000000000)) / 100000000000000000) == (rawNewClaimPrice / 100000000000000000))));),
InsertLine (160, assume(((1000000000000000000 == 0) || (((1000000000000000000 * (rawNewClaimPrice / 1000000000000000000)) / 1000000000000000000) == (rawNewClaimPrice / 1000000000000000000))));),
InsertLine (162, assume(((10000000000000000000 == 0) || (((10000000000000000000 * (rawNewClaimPrice / 10000000000000000000)) / 10000000000000000000) == (rawNewClaimPrice / 10000000000000000000))));),
Replace (45, (msg.sender == wizardAddress), (msg.sender != wizardAddress))
]
- New best candidate, iter 2, 1636.3432219s : results/unchecked_low_level_calls/king_of_the_ether_throne/candidates/cand_1/patch.sol
[STEP] Enter Repair Loop

========== Statistics ==========
# Iter                    : 10
# Alarm (orginal)         : 13
# Alarm (patch)           : 12
# Alarm wo leak (patch)   : 8
# Edit (min,max)          : 1, 1
# Patch                   : 1
- First solution          : n/a
- First solution (iter)   : n/a
- First solution (time)   : n/a
# Uncompiled candidate    : 0
# Verifier error          : 0

========== Patch info ==========
- 1, Size: 1., Edit: 1, Iter: 2, Time: 1636.3432219, results/unchecked_low_level_calls/king_of_the_ether_throne/candidates/cand_1/patch.sol

Time Elapsed (Real) : 5578.40635085
Time Elapsed (CPU)  : 6.979291
