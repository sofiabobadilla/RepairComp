[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 29
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000658s
[INFO] # path : 54

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.002336s
Generating VCs ... took 0.017844s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.089808
[
-1 -> true
0 -> true
]
[
]
1/20 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 154, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/20 ... [IO] line 203, (totalDonated + amount) ... proven
4/20 ... [IO] line 204, (totalDonated + amount) ... proven
5/20 ... [IO] line 216, (totalDonated + amount) ... proven
6/20 ... [IO] line 217, (totalDonated + amount) ... proven
7/20 ... [ETH_LEAK] line 191, winner.transfer(ethToTransfer); ... unproven
8/20 ... [ETH_LEAK] line 202, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/20 ... [ETH_LEAK] line 215, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/20 ... [RE_EL] line 191, winner.transfer(ethToTransfer); ... unproven
11/20 ... [RE_EL] line 202, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/20 ... [RE_EL] line 215, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
13/20 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... unproven
14/20 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
15/20 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
16/20 ... [RE] line 120, (PoCGame, wager, []) ... unproven
17/20 ... [RE] line 141, (PoCGame, play, []) ... unproven
18/20 ... [RE] line 175, (PoCGame, donate, []) ... unproven
19/20 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 2.995279s

Generating VCs ... took 0.018332s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 3.153672
[
-1 -> (Read(@TU, owner__@89) == true)
0 -> (Read(@TU, owner__@89) == true)
]
[
]
1/20 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 154, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/20 ... [IO] line 203, (totalDonated + amount) ... proven
4/20 ... [IO] line 204, (totalDonated + amount) ... proven
5/20 ... [IO] line 216, (totalDonated + amount) ... proven
6/20 ... [IO] line 217, (totalDonated + amount) ... proven
7/20 ... [ETH_LEAK] line 191, winner.transfer(ethToTransfer); ... unproven
8/20 ... [ETH_LEAK] line 202, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/20 ... [ETH_LEAK] line 215, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/20 ... [RE_EL] line 191, winner.transfer(ethToTransfer); ... unproven
11/20 ... [RE_EL] line 202, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/20 ... [RE_EL] line 215, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
13/20 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
14/20 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
15/20 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
16/20 ... [RE] line 120, (PoCGame, wager, []) ... unproven
17/20 ... [RE] line 141, (PoCGame, play, []) ... unproven
18/20 ... [RE] line 175, (PoCGame, donate, []) ... unproven
19/20 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 2.28013s

Generating VCs ... took 0.018215s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 5.983885
[
-1 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
0 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
]
[
]
1/20 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 154, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/20 ... [IO] line 203, (totalDonated + amount) ... proven
4/20 ... [IO] line 204, (totalDonated + amount) ... proven
5/20 ... [IO] line 216, (totalDonated + amount) ... proven
6/20 ... [IO] line 217, (totalDonated + amount) ... proven
7/20 ... [ETH_LEAK] line 191, winner.transfer(ethToTransfer); ... unproven
8/20 ... [ETH_LEAK] line 202, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/20 ... [ETH_LEAK] line 215, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/20 ... [RE_EL] line 191, winner.transfer(ethToTransfer); ... unproven
11/20 ... [RE_EL] line 202, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/20 ... [RE_EL] line 215, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
13/20 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
14/20 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
15/20 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
16/20 ... [RE] line 120, (PoCGame, wager, []) ... unproven
17/20 ... [RE] line 141, (PoCGame, play, []) ... unproven
18/20 ... [RE] line 175, (PoCGame, donate, []) ... unproven
19/20 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 2.968334s

Generating VCs ... took 0.017649s
Checking validity of VCs ... took 0.473635s

Generating VCs ... took 0.018843s
Checking validity of VCs ... took 9.373903s

Generating VCs ... took 0.017219s
Checking validity of VCs ... took 13.717977s

Generating VCs ... took 0.017429s
Checking validity of VCs ... took 0.659872s

Generating VCs ... took 0.017448s
Checking validity of VCs ... took 15.583675s

Generating VCs ... took 0.017995s
Checking validity of VCs ... took 10.321313s

Iter : 10 To explore : 795 Explored : 1054 Total elapsed : 58.904359
Generating VCs ... took 0.019468s
Checking validity of VCs ... took 0.664822s

Generating VCs ... took 0.017929s
Checking validity of VCs ... took 0.481505s

Generating VCs ... took 0.017626s
Checking validity of VCs ... took 0.651215s

Generating VCs ... took 0.017583s
Checking validity of VCs ... took 0.498214s

Generating VCs ... took 0.018172s
Checking validity of VCs ... took 1.080386s

Generating VCs ... took 0.01725s
Checking validity of VCs ... took 0.688317s

Generating VCs ... took 0.017708s
Checking validity of VCs ... took 0.593181s

Generating VCs ... took 0.018012s
Checking validity of VCs ... took 1.692908s

Generating VCs ... took 0.017495s
Checking validity of VCs ... took 0.976207s

Generating VCs ... took 0.019448s
Checking validity of VCs ... took 2.851868s

Iter : 20 To explore : 1717 Explored : 1986 Total elapsed : 69.485572
Generating VCs ... took 0.01828s
Checking validity of VCs ... took 3.871205s

Generating VCs ... took 0.019139s
Checking validity of VCs ... took 0.698813s

Generating VCs ... took 0.018549s
Checking validity of VCs ... took 0.606887s

Generating VCs ... took 0.017344s
Checking validity of VCs ... took 1.252261s

Generating VCs ... took 0.018804s
Checking validity of VCs ... took 0.62748s

Generating VCs ... took 0.018302s
Checking validity of VCs ... took 0.652457s

Generating VCs ... took 0.017451s
Checking validity of VCs ... took 1.543579s

Generating VCs ... took 0.018438s
Checking validity of VCs ... took 2.48907s

Generating VCs ... took 0.017523s
Checking validity of VCs ... took 2.672265s

Generating VCs ... took 0.017503s
Checking validity of VCs ... took 2.785836s

Iter : 30 To explore : 2766 Explored : 3045 Total elapsed : 87.184494
Generating VCs ... took 0.017624s
Checking validity of VCs ... took 2.12487s

Generating VCs ... took 0.017855s
Checking validity of VCs ... took 3.198833s

Generating VCs ... took 0.017802s
Checking validity of VCs ... took 3.77695s

Generating VCs ... took 0.018624s
Checking validity of VCs ... took 3.631869s

Generating VCs ... took 0.019834s
Checking validity of VCs ... took 6.077336s

Generating VCs ... took 0.01938s
Checking validity of VCs ... took 0.768277s

Generating VCs ... took 0.018434s
Checking validity of VCs ... took 0.717727s

Generating VCs ... took 0.017557s
Checking validity of VCs ... took 0.675902s

Generating VCs ... took 0.017762s
Checking validity of VCs ... took 1.431351s

Generating VCs ... took 0.018003s
Checking validity of VCs ... took 0.597997s

Iter : 40 To explore : 3693 Explored : 3982 Total elapsed : 110.707847
Generating VCs ... took 0.017878s
Checking validity of VCs ... took 0.631114s

Generating VCs ... took 0.017428s
Checking validity of VCs ... took 0.621228s

Generating VCs ... took 0.017566s
Checking validity of VCs ... took 5.055603s

Generating VCs ... took 0.017394s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 43 Total elapsed : 117.671916
[
-1 -> (((randomSeed__@87 == 0) /\ (Read(@TU, owner__@89) == true)) /\ (Read(@TU, whale__@81) == true))
0 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
]
[
]
1/20 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 154, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/20 ... [IO] line 203, (totalDonated + amount) ... proven
4/20 ... [IO] line 204, (totalDonated + amount) ... proven
5/20 ... [IO] line 216, (totalDonated + amount) ... proven
6/20 ... [IO] line 217, (totalDonated + amount) ... proven
7/20 ... [ETH_LEAK] line 191, winner.transfer(ethToTransfer); ... unproven
8/20 ... [ETH_LEAK] line 202, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/20 ... [ETH_LEAK] line 215, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/20 ... [RE_EL] line 191, winner.transfer(ethToTransfer); ... unproven
11/20 ... [RE_EL] line 202, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/20 ... [RE_EL] line 215, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
13/20 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
14/20 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
15/20 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
16/20 ... [RE] line 120, (PoCGame, wager, []) ... unproven
17/20 ... [RE] line 141, (PoCGame, play, []) ... unproven
18/20 ... [RE] line 175, (PoCGame, donate, []) ... unproven
19/20 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 2.399911s

Generating VCs ... took 0.017562s
Checking validity of VCs ... took 0.491302s

Generating VCs ... took 0.017549s
Checking validity of VCs ... took 14.597904s

Generating VCs ... took 0.017908s
Checking validity of VCs ... took 0.619606s

Generating VCs ... took 0.017577s
Checking validity of VCs ... took 9.243885s

Generating VCs ... took 0.017706s
Checking validity of VCs ... took 9.476349s

Generating VCs ... took 0.00467699999999s
Checking validity of VCs ... 
1/26 ... [NO_EFFECT] line 97, (@pre1 == betLimit) ... unproven
2/26 ... [NO_EFFECT] line 109, (@pre2 == difficulty) ... unproven
3/26 ... [NO_EFFECT] line 133, (@pre4 == timestamps[msg.sender]) ... unproven
4/26 ... [NO_EFFECT] line 134, (@pre3 == wagers[msg.sender]) ... unproven
5/26 ... [NO_EFFECT] line 147, (@pre6 == blockNumber) ... unproven
6/26 ... [NO_EFFECT] line 154, (@pre5 == winningNumber) ... unproven
7/26 ... [NO_EFFECT] line 189, (@pre7 == ethToTransfer) ... unproven
8/26 ... [NO_EFFECT] line 204, (@pre8 == totalDonated) ... unproven
9/26 ... [NO_EFFECT] line 217, (@pre9 == totalDonated) ... unproven
10/26 ... [ASSIGN_CONST] line 154, (winningNumber == 0) ... unproven
11/26 ... [ASSIGN_CONST] line 204, (totalDonated == 0) ... unproven
12/26 ... [ASSIGN_CONST] line 217, (totalDonated == 0) ... unproven
13/26 ... [DEAD] line 18, false ... unproven
14/26 ... [DEAD] line 30, false ... unproven
15/26 ... [DEAD] line 36, false ... unproven
16/26 ... [DEAD] line 127, false ... unproven
17/26 ... [DEAD] line 130, false ... unproven
18/26 ... [DEAD] line 148, false ... unproven
19/26 ... [DEAD] line 153, false ... unproven
20/26 ... [DEAD] line 156, false ... unproven
21/26 ... [DEAD] line 158, false ... unproven
22/26 ... [DEAD] line 163, false ... unproven
23/26 ... [DEAD] line 180, false ... unproven
24/26 ... [DEAD] line 191, false ... unproven
25/26 ... [DEAD] line 203, false ... unproven
26/26 ... [DEAD] line 216, false ... unproven
took 1.99805s


===== Vulnerability Report =====
[1] [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 154, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[3] [IO] line 203, (totalDonated + amount) : proven
[4] [IO] line 204, (totalDonated + amount) : proven
[5] [IO] line 216, (totalDonated + amount) : proven
[6] [IO] line 217, (totalDonated + amount) : proven
[7] [ETH_LEAK] line 191, winner.transfer(ethToTransfer); : unproven
[8] [ETH_LEAK] line 202, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[9] [ETH_LEAK] line 215, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[10] [RE_EL] line 191, winner.transfer(ethToTransfer); : unproven
[11] [RE_EL] line 202, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[12] [RE_EL] line 215, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[13] [RE] line 83, (PoCGame, OpenToThePublic, []) : proven
[14] [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[15] [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) : proven
[16] [RE] line 120, (PoCGame, wager, []) : unproven
[17] [RE] line 141, (PoCGame, play, []) : unproven
[18] [RE] line 175, (PoCGame, donate, []) : unproven
[19] [TX_ORG] line 18, assume((msg.sender == owner)); : proven
[20] [TX_ORG] line 30, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 97, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 109, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 133, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 134, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 147, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 154, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 189, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 204, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 217, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 154, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 204, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 217, (totalDonated == 0) : unproven
[13] [DEAD] line 18, false : unproven
[14] [DEAD] line 30, false : unproven
[15] [DEAD] line 36, false : unproven
[16] [DEAD] line 127, false : unproven
[17] [DEAD] line 130, false : unproven
[18] [DEAD] line 148, false : unproven
[19] [DEAD] line 153, false : unproven
[20] [DEAD] line 156, false : unproven
[21] [DEAD] line 158, false : unproven
[22] [DEAD] line 163, false : unproven
[23] [DEAD] line 180, false : unproven
[24] [DEAD] line 191, false : unproven
[25] [DEAD] line 203, false : unproven
[26] [DEAD] line 216, false : unproven

============ Statistics ============
# Iter                    : 48
# Alarm / Query           : 7 / 20
- integer over/underflow  : 2 / 6
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 3 / 6
- tx.origin               : 0 / 2

Time Elapsed (Real) : 157.013710976
Time Elapsed (CPU)  : 157.040758
