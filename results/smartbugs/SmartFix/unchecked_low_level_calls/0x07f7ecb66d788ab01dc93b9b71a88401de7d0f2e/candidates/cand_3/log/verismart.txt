[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 29
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000624s
[INFO] # path : 49

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.002278s
Generating VCs ... took 0.012212s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.068703
[
-1 -> true
0 -> true
]
[
]
1/18 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 202, (totalDonated + amount) ... unproven
3/18 ... [IO] line 214, (totalDonated + amount) ... proven
4/18 ... [IO] line 215, (totalDonated + amount) ... proven
5/18 ... [ETH_LEAK] line 190, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/18 ... [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/18 ... [RE_EL] line 190, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/18 ... [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... unproven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 141, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 174, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 2.280314s

Generating VCs ... took 0.012246s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 2.40769
[
-1 -> (Read(@TU, owner__@89) == true)
0 -> (Read(@TU, owner__@89) == true)
]
[
]
1/18 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 202, (totalDonated + amount) ... unproven
3/18 ... [IO] line 214, (totalDonated + amount) ... proven
4/18 ... [IO] line 215, (totalDonated + amount) ... proven
5/18 ... [ETH_LEAK] line 190, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/18 ... [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/18 ... [RE_EL] line 190, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/18 ... [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 141, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 174, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 1.846526s

Generating VCs ... took 0.012008s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 4.790365
[
-1 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
0 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
]
[
]
1/18 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 202, (totalDonated + amount) ... unproven
3/18 ... [IO] line 214, (totalDonated + amount) ... proven
4/18 ... [IO] line 215, (totalDonated + amount) ... proven
5/18 ... [ETH_LEAK] line 190, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/18 ... [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/18 ... [RE_EL] line 190, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/18 ... [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 141, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 174, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 2.276949s

Generating VCs ... took 0.012127s
Checking validity of VCs ... took 0.477297s

Generating VCs ... took 0.013212s
Checking validity of VCs ... took 8.404062s

Generating VCs ... took 0.012242s
Checking validity of VCs ... took 11.595928s

Generating VCs ... took 0.012272s
Checking validity of VCs ... took 0.644964s

Generating VCs ... took 0.012826s
Checking validity of VCs ... took 12.119506s

Generating VCs ... took 0.012307s
Checking validity of VCs ... took 6.884802s

Iter : 10 To explore : 795 Explored : 1054 Total elapsed : 46.991027
Generating VCs ... took 0.012602s
Checking validity of VCs ... took 0.606077s

Generating VCs ... took 0.012265s
Checking validity of VCs ... took 0.482636s

Generating VCs ... took 0.013079s
Checking validity of VCs ... took 0.651464s

Generating VCs ... took 0.012098s
Checking validity of VCs ... took 0.492363s

Generating VCs ... took 0.012395s
Checking validity of VCs ... took 0.98949s

Generating VCs ... took 0.012384s
Checking validity of VCs ... took 0.689978s

Generating VCs ... took 0.0123s
Checking validity of VCs ... took 0.699114s

Generating VCs ... took 0.012827s
Checking validity of VCs ... took 1.404394s

Generating VCs ... took 0.012996s
Checking validity of VCs ... took 1.065871s

Generating VCs ... took 0.012204s
Checking validity of VCs ... took 3.437352s

Iter : 20 To explore : 1717 Explored : 1986 Total elapsed : 57.858903
Generating VCs ... took 0.01335s
Checking validity of VCs ... took 3.382822s

Generating VCs ... took 0.013088s
Checking validity of VCs ... took 0.622181s

Generating VCs ... took 0.012716s
Checking validity of VCs ... took 0.669739s

Generating VCs ... took 0.012346s
Checking validity of VCs ... took 1.192538s

Generating VCs ... took 0.014064s
Checking validity of VCs ... took 0.629288s

Generating VCs ... took 0.012447s
Checking validity of VCs ... took 0.611662s

Generating VCs ... took 0.012843s
Checking validity of VCs ... took 1.365971s

Generating VCs ... took 0.014168s
Checking validity of VCs ... took 2.161694s

Generating VCs ... took 0.01391s
Checking validity of VCs ... took 2.108466s

Generating VCs ... took 0.012539s
Checking validity of VCs ... took 1.863864s

Iter : 30 To explore : 2766 Explored : 3045 Total elapsed : 72.909325
Generating VCs ... took 0.015146s
Checking validity of VCs ... took 2.187345s

Generating VCs ... took 0.013957s
Checking validity of VCs ... took 3.196462s

Generating VCs ... took 0.012464s
Checking validity of VCs ... took 3.176785s

Generating VCs ... took 0.012668s
Checking validity of VCs ... took 2.912538s

Generating VCs ... took 0.012652s
Checking validity of VCs ... took 4.544681s

Generating VCs ... took 0.012748s
Checking validity of VCs ... took 0.580143s

Generating VCs ... took 0.014686s
Checking validity of VCs ... took 0.648827s

Generating VCs ... took 0.012399s
Checking validity of VCs ... took 0.674729s

Generating VCs ... took 0.012424s
Checking validity of VCs ... took 1.040284s

Generating VCs ... took 0.012851s
Checking validity of VCs ... took 0.638921s

Iter : 40 To explore : 3693 Explored : 3982 Total elapsed : 92.986249
Generating VCs ... took 0.012377s
Checking validity of VCs ... took 0.602433s

Generating VCs ... took 0.013348s
Checking validity of VCs ... took 0.573993s

Generating VCs ... took 0.013448s
Checking validity of VCs ... took 3.782077s

Generating VCs ... took 0.012393s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 43 Total elapsed : 98.569531
[
-1 -> (((randomSeed__@87 == 0) /\ (Read(@TU, owner__@89) == true)) /\ (Read(@TU, whale__@81) == true))
0 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
]
[
]
1/18 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 202, (totalDonated + amount) ... unproven
3/18 ... [IO] line 214, (totalDonated + amount) ... proven
4/18 ... [IO] line 215, (totalDonated + amount) ... proven
5/18 ... [ETH_LEAK] line 190, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/18 ... [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/18 ... [RE_EL] line 190, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/18 ... [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 141, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 174, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 1.765704s

Generating VCs ... took 0.012667s
Checking validity of VCs ... took 0.48042s

Generating VCs ... took 0.012587s
Checking validity of VCs ... took 11.6893s

Generating VCs ... took 0.012895s
Checking validity of VCs ... took 0.617005s

Generating VCs ... took 0.012318s
Checking validity of VCs ... took 7.238445s

Generating VCs ... took 0.013313s
Checking validity of VCs ... took 8.666532s

Generating VCs ... took 0.013128s
Checking validity of VCs ... took 12.804842s

Iter : 50 To explore : 3565 Explored : 7708 Total elapsed : 142.380515
Generating VCs ... took 0.013361s
Checking validity of VCs ... took 0.496863s

Generating VCs ... took 0.014016s
Checking validity of VCs ... took 0.648591s

Generating VCs ... took 0.012635s
Checking validity of VCs ... took 0.635374s

Generating VCs ... took 0.012745s
Checking validity of VCs ... took 0.497884s

Generating VCs ... took 0.012441s
Checking validity of VCs ... took 1.165511s

Generating VCs ... took 0.012273s
Checking validity of VCs ... took 0.754287s

Generating VCs ... took 0.012732s
Checking validity of VCs ... took 0.597786s

Generating VCs ... took 0.012488s
Checking validity of VCs ... took 0.70696s

Generating VCs ... took 0.012438s
Checking validity of VCs ... took 0.695095s

Generating VCs ... took 0.012901s
Checking validity of VCs ... took 4.231365s

Generating VCs ... took 0.00378700000002s
Checking validity of VCs ... 
1/24 ... [NO_EFFECT] line 97, (@pre1 == betLimit) ... unproven
2/24 ... [NO_EFFECT] line 109, (@pre2 == difficulty) ... unproven
3/24 ... [NO_EFFECT] line 133, (@pre4 == timestamps[msg.sender]) ... unproven
4/24 ... [NO_EFFECT] line 134, (@pre3 == wagers[msg.sender]) ... unproven
5/24 ... [NO_EFFECT] line 147, (@pre6 == blockNumber) ... unproven
6/24 ... [NO_EFFECT] line 153, (@pre5 == winningNumber) ... unproven
7/24 ... [NO_EFFECT] line 188, (@pre7 == ethToTransfer) ... unproven
8/24 ... [NO_EFFECT] line 202, (@pre8 == totalDonated) ... unproven
9/24 ... [NO_EFFECT] line 215, (@pre9 == totalDonated) ... unproven
10/24 ... [ASSIGN_CONST] line 153, (winningNumber == 0) ... unproven
11/24 ... [ASSIGN_CONST] line 202, (totalDonated == 0) ... unproven
12/24 ... [ASSIGN_CONST] line 215, (totalDonated == 0) ... unproven
13/24 ... [DEAD] line 18, false ... unproven
14/24 ... [DEAD] line 30, false ... unproven
15/24 ... [DEAD] line 36, false ... unproven
16/24 ... [DEAD] line 127, false ... unproven
17/24 ... [DEAD] line 130, false ... unproven
18/24 ... [DEAD] line 148, false ... unproven
19/24 ... [DEAD] line 155, false ... unproven
20/24 ... [DEAD] line 157, false ... unproven
21/24 ... [DEAD] line 162, false ... unproven
22/24 ... [DEAD] line 179, false ... unproven
23/24 ... [DEAD] line 190, false ... unproven
24/24 ... [DEAD] line 214, false ... unproven
took 1.440943s


===== Vulnerability Report =====
[1] [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 202, (totalDonated + amount) : unproven
[3] [IO] line 214, (totalDonated + amount) : proven
[4] [IO] line 215, (totalDonated + amount) : proven
[5] [ETH_LEAK] line 190, winner.transfer(ethToTransfer); : unproven
[6] [ETH_LEAK] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[7] [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [RE_EL] line 190, winner.transfer(ethToTransfer); : unproven
[9] [RE_EL] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[10] [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE] line 83, (PoCGame, OpenToThePublic, []) : proven
[12] [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[13] [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) : proven
[14] [RE] line 120, (PoCGame, wager, []) : unproven
[15] [RE] line 141, (PoCGame, play, []) : unproven
[16] [RE] line 174, (PoCGame, donate, []) : unproven
[17] [TX_ORG] line 18, assume((msg.sender == owner)); : proven
[18] [TX_ORG] line 30, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 97, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 109, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 133, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 134, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 147, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 153, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 188, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 202, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 215, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 153, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 202, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 215, (totalDonated == 0) : unproven
[13] [DEAD] line 18, false : unproven
[14] [DEAD] line 30, false : unproven
[15] [DEAD] line 36, false : unproven
[16] [DEAD] line 127, false : unproven
[17] [DEAD] line 130, false : unproven
[18] [DEAD] line 148, false : unproven
[19] [DEAD] line 155, false : unproven
[20] [DEAD] line 157, false : unproven
[21] [DEAD] line 162, false : unproven
[22] [DEAD] line 179, false : unproven
[23] [DEAD] line 190, false : unproven
[24] [DEAD] line 214, false : unproven

============ Statistics ============
# Iter                    : 59
# Alarm / Query           : 7 / 18
- integer over/underflow  : 2 / 4
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 3 / 6
- tx.origin               : 0 / 2

Time Elapsed (Real) : 154.537643194
Time Elapsed (CPU)  : 154.618799
