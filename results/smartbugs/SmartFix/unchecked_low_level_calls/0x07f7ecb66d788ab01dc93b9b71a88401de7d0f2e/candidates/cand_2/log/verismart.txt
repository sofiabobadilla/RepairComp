[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 29
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000675s
[INFO] # path : 49

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001929s
Generating VCs ... took 0.010506s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.07872
[
-1 -> true
0 -> true
]
[
]
1/18 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 202, (totalDonated + amount) ... proven
3/18 ... [IO] line 203, (totalDonated + amount) ... proven
4/18 ... [IO] line 215, (totalDonated + amount) ... unproven
5/18 ... [ETH_LEAK] line 190, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/18 ... [ETH_LEAK] line 214, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/18 ... [RE_EL] line 190, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/18 ... [RE_EL] line 214, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... unproven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 141, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 174, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 1.920986s

Generating VCs ... took 0.010818s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 2.051773
[
-1 -> (Read(@TU, owner__@89) == true)
0 -> (Read(@TU, owner__@89) == true)
]
[
]
1/18 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 202, (totalDonated + amount) ... proven
3/18 ... [IO] line 203, (totalDonated + amount) ... proven
4/18 ... [IO] line 215, (totalDonated + amount) ... unproven
5/18 ... [ETH_LEAK] line 190, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/18 ... [ETH_LEAK] line 214, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/18 ... [RE_EL] line 190, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/18 ... [RE_EL] line 214, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 141, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 174, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 1.919792s

Generating VCs ... took 0.010244s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 4.495093
[
-1 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
0 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
]
[
]
1/18 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 202, (totalDonated + amount) ... proven
3/18 ... [IO] line 203, (totalDonated + amount) ... proven
4/18 ... [IO] line 215, (totalDonated + amount) ... unproven
5/18 ... [ETH_LEAK] line 190, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/18 ... [ETH_LEAK] line 214, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/18 ... [RE_EL] line 190, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/18 ... [RE_EL] line 214, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 141, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 174, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 2.237487s

Generating VCs ... took 0.010302s
Checking validity of VCs ... took 0.470743s

Generating VCs ... took 0.01018s
Checking validity of VCs ... took 7.128989s

Generating VCs ... took 0.010235s
Checking validity of VCs ... took 11.26547s

Generating VCs ... took 0.01024s
Checking validity of VCs ... took 0.595774s

Generating VCs ... took 0.01044s
Checking validity of VCs ... took 11.237127s

Generating VCs ... took 0.012722s
Checking validity of VCs ... took 6.02232s

Iter : 10 To explore : 795 Explored : 1054 Total elapsed : 43.231133
Generating VCs ... took 0.012536s
Checking validity of VCs ... took 0.613327s

Generating VCs ... took 0.010692s
Checking validity of VCs ... took 0.486191s

Generating VCs ... took 0.010393s
Checking validity of VCs ... took 0.629397s

Generating VCs ... took 0.010554s
Checking validity of VCs ... took 0.500851s

Generating VCs ... took 0.01083s
Checking validity of VCs ... took 1.07884s

Generating VCs ... took 0.011274s
Checking validity of VCs ... took 0.594315s

Generating VCs ... took 0.010985s
Checking validity of VCs ... took 0.601086s

Generating VCs ... took 0.010519s
Checking validity of VCs ... took 1.081408s

Generating VCs ... took 0.010601s
Checking validity of VCs ... took 0.911444s

Generating VCs ... took 0.010422s
Checking validity of VCs ... took 2.186265s

Iter : 20 To explore : 1717 Explored : 1986 Total elapsed : 52.250627
Generating VCs ... took 0.010547s
Checking validity of VCs ... took 2.485862s

Generating VCs ... took 0.011253s
Checking validity of VCs ... took 0.71304s

Generating VCs ... took 0.010802s
Checking validity of VCs ... took 0.709086s

Generating VCs ... took 0.010544s
Checking validity of VCs ... took 0.948256s

Generating VCs ... took 0.011655s
Checking validity of VCs ... took 0.686339s

Generating VCs ... took 0.010552s
Checking validity of VCs ... took 0.690544s

Generating VCs ... took 0.01248s
Checking validity of VCs ... took 0.985935s

Generating VCs ... took 0.010966s
Checking validity of VCs ... took 1.385915s

Generating VCs ... took 0.010522s
Checking validity of VCs ... took 1.333979s

Generating VCs ... took 0.012383s
Checking validity of VCs ... took 1.457434s

Iter : 30 To explore : 2766 Explored : 3045 Total elapsed : 64.073129
Generating VCs ... took 0.01062s
Checking validity of VCs ... took 1.506818s

Generating VCs ... took 0.010458s
Checking validity of VCs ... took 2.068438s

Generating VCs ... took 0.010478s
Checking validity of VCs ... took 2.023293s

Generating VCs ... took 0.010525s
Checking validity of VCs ... took 2.218892s

Generating VCs ... took 0.010693s
Checking validity of VCs ... took 1.796958s

Generating VCs ... took 0.011331s
Checking validity of VCs ... took 0.70295s

Generating VCs ... took 0.010374s
Checking validity of VCs ... took 0.602638s

Generating VCs ... took 0.01045s
Checking validity of VCs ... took 0.604019s

Generating VCs ... took 0.010698s
Checking validity of VCs ... took 0.844697s

Generating VCs ... took 0.013042s
Checking validity of VCs ... took 0.557579s

Iter : 40 To explore : 3693 Explored : 3982 Total elapsed : 77.452076
Generating VCs ... took 0.010445s
Checking validity of VCs ... took 0.582239s

Generating VCs ... took 0.011087s
Checking validity of VCs ... took 0.616222s

Generating VCs ... took 0.010947s
Checking validity of VCs ... took 2.900944s

Generating VCs ... took 0.011278s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 43 Total elapsed : 82.161253
[
-1 -> (((randomSeed__@87 == 0) /\ (Read(@TU, owner__@89) == true)) /\ (Read(@TU, whale__@81) == true))
0 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
]
[
]
1/18 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 202, (totalDonated + amount) ... proven
3/18 ... [IO] line 203, (totalDonated + amount) ... proven
4/18 ... [IO] line 215, (totalDonated + amount) ... unproven
5/18 ... [ETH_LEAK] line 190, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/18 ... [ETH_LEAK] line 214, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/18 ... [RE_EL] line 190, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/18 ... [RE_EL] line 214, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 141, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 174, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 1.844638s

Generating VCs ... took 0.010692s
Checking validity of VCs ... took 0.47271s

Generating VCs ... took 0.011741s
Checking validity of VCs ... took 9.722024s

Generating VCs ... took 0.010512s
Checking validity of VCs ... took 0.582124s

Generating VCs ... took 0.010616s
Checking validity of VCs ... took 6.548703s

Generating VCs ... took 0.011954s
Checking validity of VCs ... took 4.823269s

Generating VCs ... took 0.011772s
Checking validity of VCs ... took 12.167343s

Iter : 50 To explore : 3565 Explored : 7708 Total elapsed : 118.798585
Generating VCs ... took 0.011213s
Checking validity of VCs ... took 0.502839s

Generating VCs ... took 0.011834s
Checking validity of VCs ... took 0.650122s

Generating VCs ... took 0.010743s
Checking validity of VCs ... took 0.637619s

Generating VCs ... took 0.010607s
Checking validity of VCs ... took 0.501281s

Generating VCs ... took 0.010585s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 54 Total elapsed : 121.710293
[
-1 -> (((randomSeed__@87 == 0) /\ (Read(@TU, owner__@89) == true)) /\ (Read(@TU, whale__@81) == true))
0 -> (((randomSeed__@87 == 0) /\ (Read(@TU, owner__@89) == true)) /\ (Read(@TU, whale__@81) == true))
]
[
]
1/18 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 202, (totalDonated + amount) ... proven
3/18 ... [IO] line 203, (totalDonated + amount) ... proven
4/18 ... [IO] line 215, (totalDonated + amount) ... unproven
5/18 ... [ETH_LEAK] line 190, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/18 ... [ETH_LEAK] line 214, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/18 ... [RE_EL] line 190, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/18 ... [RE_EL] line 214, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 141, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 174, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 1.636666s

Generating VCs ... took 0.010422s
Checking validity of VCs ... took 0.486228s

Generating VCs ... took 0.011821s
Checking validity of VCs ... took 7.436214s

Generating VCs ... took 0.011055s
Checking validity of VCs ... took 0.721606s

Generating VCs ... took 0.01173s
Checking validity of VCs ... took 10.743307s

Generating VCs ... took 0.010603s
Checking validity of VCs ... took 5.436752s

Iter : 60 To explore : 3350 Explored : 11025 Total elapsed : 148.578774
Generating VCs ... took 0.010842s
Checking validity of VCs ... took 10.304158s

Generating VCs ... took 0.00353899999999s
Checking validity of VCs ... 
1/24 ... [NO_EFFECT] line 97, (@pre1 == betLimit) ... unproven
2/24 ... [NO_EFFECT] line 109, (@pre2 == difficulty) ... unproven
3/24 ... [NO_EFFECT] line 133, (@pre4 == timestamps[msg.sender]) ... unproven
4/24 ... [NO_EFFECT] line 134, (@pre3 == wagers[msg.sender]) ... unproven
5/24 ... [NO_EFFECT] line 147, (@pre6 == blockNumber) ... unproven
6/24 ... [NO_EFFECT] line 153, (@pre5 == winningNumber) ... unproven
7/24 ... [NO_EFFECT] line 188, (@pre7 == ethToTransfer) ... unproven
8/24 ... [NO_EFFECT] line 203, (@pre8 == totalDonated) ... unproven
9/24 ... [NO_EFFECT] line 215, (@pre9 == totalDonated) ... unproven
10/24 ... [ASSIGN_CONST] line 153, (winningNumber == 0) ... unproven
11/24 ... [ASSIGN_CONST] line 203, (totalDonated == 0) ... unproven
12/24 ... [ASSIGN_CONST] line 215, (totalDonated == 0) ... unproven
13/24 ... [DEAD] line 18, false ... unproven
14/24 ... [DEAD] line 30, false ... unproven
15/24 ... [DEAD] line 36, false ... unproven
16/24 ... [DEAD] line 127, false ... unproven
17/24 ... [DEAD] line 130, false ... unproven
18/24 ... [DEAD] line 148, false ... unproven
19/24 ... [DEAD] line 155, false ... unproven
20/24 ... [DEAD] line 157, false ... unproven
21/24 ... [DEAD] line 162, false ... unproven
22/24 ... [DEAD] line 179, false ... unproven
23/24 ... [DEAD] line 190, false ... unproven
24/24 ... [DEAD] line 202, false ... unproven
took 1.433661s


===== Vulnerability Report =====
[1] [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 202, (totalDonated + amount) : proven
[3] [IO] line 203, (totalDonated + amount) : proven
[4] [IO] line 215, (totalDonated + amount) : unproven
[5] [ETH_LEAK] line 190, winner.transfer(ethToTransfer); : unproven
[6] [ETH_LEAK] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[7] [ETH_LEAK] line 214, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [RE_EL] line 190, winner.transfer(ethToTransfer); : unproven
[9] [RE_EL] line 201, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[10] [RE_EL] line 214, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE] line 83, (PoCGame, OpenToThePublic, []) : proven
[12] [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[13] [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) : proven
[14] [RE] line 120, (PoCGame, wager, []) : unproven
[15] [RE] line 141, (PoCGame, play, []) : unproven
[16] [RE] line 174, (PoCGame, donate, []) : unproven
[17] [TX_ORG] line 18, assume((msg.sender == owner)); : proven
[18] [TX_ORG] line 30, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 97, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 109, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 133, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 134, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 147, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 153, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 188, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 203, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 215, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 153, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 203, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 215, (totalDonated == 0) : unproven
[13] [DEAD] line 18, false : unproven
[14] [DEAD] line 30, false : unproven
[15] [DEAD] line 36, false : unproven
[16] [DEAD] line 127, false : unproven
[17] [DEAD] line 130, false : unproven
[18] [DEAD] line 148, false : unproven
[19] [DEAD] line 155, false : unproven
[20] [DEAD] line 157, false : unproven
[21] [DEAD] line 162, false : unproven
[22] [DEAD] line 179, false : unproven
[23] [DEAD] line 190, false : unproven
[24] [DEAD] line 202, false : unproven

============ Statistics ============
# Iter                    : 60
# Alarm / Query           : 7 / 18
- integer over/underflow  : 2 / 4
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 3 / 6
- tx.origin               : 0 / 2

Time Elapsed (Real) : 160.288888931
Time Elapsed (CPU)  : 160.369123
