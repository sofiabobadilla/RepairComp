[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 32
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000844s
[INFO] # path : 55

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.002305s
Generating VCs ... took 0.017043s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.089875
[
-1 -> true
0 -> true
]
[
]
1/21 ... [IO] line 164, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 165, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 214, (totalDonated + amount) ... proven
4/21 ... [IO] line 215, (totalDonated + amount) ... proven
5/21 ... [IO] line 227, (totalDonated + amount) ... unproven
6/21 ... [ETH_LEAK] line 202, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/21 ... [ETH_LEAK] line 226, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/21 ... [RE_EL] line 202, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/21 ... [RE_EL] line 226, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... unproven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 152, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 186, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 297, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... unproven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.308663s

Generating VCs ... took 0.017391s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 3.464149
[
-1 -> (Read(@TU, owner__@112) == true)
0 -> (Read(@TU, owner__@112) == true)
]
[
]
1/21 ... [IO] line 164, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 165, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 214, (totalDonated + amount) ... proven
4/21 ... [IO] line 215, (totalDonated + amount) ... proven
5/21 ... [IO] line 227, (totalDonated + amount) ... unproven
6/21 ... [ETH_LEAK] line 202, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/21 ... [ETH_LEAK] line 226, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/21 ... [RE_EL] line 202, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/21 ... [RE_EL] line 226, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 152, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 186, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 297, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.585798s

Generating VCs ... took 0.018702s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 6.593516
[
-1 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/21 ... [IO] line 164, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 165, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 214, (totalDonated + amount) ... proven
4/21 ... [IO] line 215, (totalDonated + amount) ... proven
5/21 ... [IO] line 227, (totalDonated + amount) ... unproven
6/21 ... [ETH_LEAK] line 202, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/21 ... [ETH_LEAK] line 226, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/21 ... [RE_EL] line 202, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/21 ... [RE_EL] line 226, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 152, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 186, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 297, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.060513s

Generating VCs ... took 0.017272s
Checking validity of VCs ... took 0.483553s

Generating VCs ... took 0.01883s
Checking validity of VCs ... took 0.492933s

Generating VCs ... took 0.017051s
Checking validity of VCs ... took 0.486214s

Generating VCs ... took 0.017738s
Checking validity of VCs ... took 0.678041s

Generating VCs ... took 0.017664s
Checking validity of VCs ... took 8.081655s

Generating VCs ... took 0.01638s
Checking validity of VCs ... took 12.127707s

Iter : 10 To explore : 700 Explored : 963 Total elapsed : 31.791999
Generating VCs ... took 0.017182s
Checking validity of VCs ... took 1.762018s

Generating VCs ... took 0.017386s
Checking validity of VCs ... took 6.123942s

Generating VCs ... took 0.019667s
Checking validity of VCs ... took 3.88512s

Generating VCs ... took 0.01694s
Checking validity of VCs ... took 12.407822s

Generating VCs ... took 0.017836s
Checking validity of VCs ... took 8.977923s

Generating VCs ... took 0.017639s
Checking validity of VCs ... took 1.560174s

Generating VCs ... took 0.017144s
Checking validity of VCs ... took 5.932936s

Generating VCs ... took 0.018054s
Checking validity of VCs ... took 4.155595s

Generating VCs ... took 0.016899s
Checking validity of VCs ... took 0.569464s

Generating VCs ... took 0.016458s
Checking validity of VCs ... took 0.643043s

Iter : 20 To explore : 1751 Explored : 2024 Total elapsed : 78.251321
Generating VCs ... took 0.016795s
Checking validity of VCs ... took 0.50226s

Generating VCs ... took 0.01683s
Checking validity of VCs ... took 0.670059s

Generating VCs ... took 0.017839s
Checking validity of VCs ... took 0.507826s

Generating VCs ... took 0.016789s
Checking validity of VCs ... took 0.604009s

Generating VCs ... took 0.017103s
Checking validity of VCs ... took 0.500931s

Generating VCs ... took 0.017083s
Checking validity of VCs ... took 0.712157s

Generating VCs ... took 0.018684s
Checking validity of VCs ... took 1.243884s

Generating VCs ... took 0.016943s
Checking validity of VCs ... took 0.720641s

Generating VCs ... took 0.016762s
Checking validity of VCs ... took 0.625804s

Generating VCs ... took 0.016861s
Checking validity of VCs ... took 1.178332s

Iter : 30 To explore : 2645 Explored : 2928 Total elapsed : 85.891681
Generating VCs ... took 0.017236s
Checking validity of VCs ... took 0.779943s

Generating VCs ... took 0.017045s
Checking validity of VCs ... took 0.848773s

Generating VCs ... took 0.018015s
Checking validity of VCs ... took 0.908245s

Generating VCs ... took 0.016785s
Checking validity of VCs ... took 1.210301s

Generating VCs ... took 0.019792s
Checking validity of VCs ... took 1.193855s

Generating VCs ... took 0.01684s
Checking validity of VCs ... took 0.960179s

Generating VCs ... took 0.017374s
Checking validity of VCs ... took 1.788178s

Generating VCs ... took 0.016821s
Checking validity of VCs ... took 2.076641s

Generating VCs ... took 0.018472s
Checking validity of VCs ... took 2.036057s

Generating VCs ... took 0.019153s
Checking validity of VCs ... took 2.834075s

Iter : 40 To explore : 3708 Explored : 4001 Total elapsed : 101.04945
Generating VCs ... took 0.017066s
Checking validity of VCs ... took 0.700843s

Generating VCs ... took 0.016812s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 41 Total elapsed : 102.316265
[
-1 -> (((randomSeed__@110 == 0) /\ (Read(@TU, owner__@112) == true)) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/21 ... [IO] line 164, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 165, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 214, (totalDonated + amount) ... proven
4/21 ... [IO] line 215, (totalDonated + amount) ... proven
5/21 ... [IO] line 227, (totalDonated + amount) ... unproven
6/21 ... [ETH_LEAK] line 202, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/21 ... [ETH_LEAK] line 226, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/21 ... [RE_EL] line 202, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/21 ... [RE_EL] line 226, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 152, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 186, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 297, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.881857s

Generating VCs ... took 0.018713s
Checking validity of VCs ... took 0.499909s

Generating VCs ... took 0.018581s
Checking validity of VCs ... took 0.494056s

Generating VCs ... took 0.016654s
Checking validity of VCs ... took 0.495579s

Generating VCs ... took 0.016855s
Checking validity of VCs ... took 10.778904s

Generating VCs ... took 0.017806s
Checking validity of VCs ... took 1.837358s

Generating VCs ... took 0.018931s
Checking validity of VCs ... took 0.621757s

Generating VCs ... took 0.016662s
Checking validity of VCs ... took 8.402842s

Generating VCs ... took 0.018703s
Checking validity of VCs ... took 11.925227s

Iter : 50 To explore : 3575 Explored : 7593 Total elapsed : 140.84006
Generating VCs ... took 0.016904s
Checking validity of VCs ... took 1.89601s

Generating VCs ... took 0.017748s
Checking validity of VCs ... took 6.597919s

Generating VCs ... took 0.0176s
Checking validity of VCs ... took 8.416511s

Generating VCs ... took 0.004605s
Checking validity of VCs ... 
1/25 ... [NO_EFFECT] line 108, (@pre1 == betLimit) ... unproven
2/25 ... [NO_EFFECT] line 120, (@pre2 == difficulty) ... unproven
3/25 ... [NO_EFFECT] line 144, (@pre4 == timestamps[msg.sender]) ... unproven
4/25 ... [NO_EFFECT] line 145, (@pre3 == wagers[msg.sender]) ... unproven
5/25 ... [NO_EFFECT] line 158, (@pre6 == blockNumber) ... unproven
6/25 ... [NO_EFFECT] line 165, (@pre5 == winningNumber) ... unproven
7/25 ... [NO_EFFECT] line 200, (@pre7 == ethToTransfer) ... unproven
8/25 ... [NO_EFFECT] line 215, (@pre8 == totalDonated) ... unproven
9/25 ... [NO_EFFECT] line 227, (@pre9 == totalDonated) ... unproven
10/25 ... [ASSIGN_CONST] line 165, (winningNumber == 0) ... unproven
11/25 ... [ASSIGN_CONST] line 215, (totalDonated == 0) ... unproven
12/25 ... [ASSIGN_CONST] line 227, (totalDonated == 0) ... unproven
13/25 ... [DEAD] line 29, false ... unproven
14/25 ... [DEAD] line 41, false ... unproven
15/25 ... [DEAD] line 47, false ... unproven
16/25 ... [DEAD] line 138, false ... unproven
17/25 ... [DEAD] line 141, false ... unproven
18/25 ... [DEAD] line 159, false ... unproven
19/25 ... [DEAD] line 164, false ... unproven
20/25 ... [DEAD] line 167, false ... unproven
21/25 ... [DEAD] line 169, false ... unproven
22/25 ... [DEAD] line 174, false ... unproven
23/25 ... [DEAD] line 191, false ... unproven
24/25 ... [DEAD] line 202, false ... unproven
25/25 ... [DEAD] line 214, false ... unproven
took 1.622638s


===== Vulnerability Report =====
[1] [IO] line 164, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 165, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[3] [IO] line 214, (totalDonated + amount) : proven
[4] [IO] line 215, (totalDonated + amount) : proven
[5] [IO] line 227, (totalDonated + amount) : unproven
[6] [ETH_LEAK] line 202, winner.transfer(ethToTransfer); : unproven
[7] [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [ETH_LEAK] line 226, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[9] [RE_EL] line 202, winner.transfer(ethToTransfer); : unproven
[10] [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE_EL] line 226, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[12] [RE] line 94, (PoCGame, OpenToThePublic, []) : proven
[13] [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[14] [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) : proven
[15] [RE] line 126, (PoCGame, @fallback, []) : unproven
[16] [RE] line 131, (PoCGame, wager, []) : unproven
[17] [RE] line 152, (PoCGame, play, []) : unproven
[18] [RE] line 186, (PoCGame, donate, []) : unproven
[19] [RE] line 297, (PoCGame, transferAnyERC20Token, [address, address, uint256]) : proven
[20] [TX_ORG] line 29, assume((msg.sender == owner)); : proven
[21] [TX_ORG] line 41, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 108, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 120, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 144, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 145, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 158, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 165, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 200, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 215, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 227, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 165, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 215, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 227, (totalDonated == 0) : unproven
[13] [DEAD] line 29, false : unproven
[14] [DEAD] line 41, false : unproven
[15] [DEAD] line 47, false : unproven
[16] [DEAD] line 138, false : unproven
[17] [DEAD] line 141, false : unproven
[18] [DEAD] line 159, false : unproven
[19] [DEAD] line 164, false : unproven
[20] [DEAD] line 167, false : unproven
[21] [DEAD] line 169, false : unproven
[22] [DEAD] line 174, false : unproven
[23] [DEAD] line 191, false : unproven
[24] [DEAD] line 202, false : unproven
[25] [DEAD] line 214, false : unproven

============ Statistics ============
# Iter                    : 52
# Alarm / Query           : 9 / 21
- integer over/underflow  : 3 / 5
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 4 / 8
- tx.origin               : 0 / 2

Time Elapsed (Real) : 159.488040924
Time Elapsed (CPU)  : 159.541455
