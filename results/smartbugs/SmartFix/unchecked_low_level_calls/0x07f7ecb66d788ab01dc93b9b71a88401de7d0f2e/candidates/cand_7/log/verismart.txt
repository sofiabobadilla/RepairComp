[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 29
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000458s
[INFO] # path : 46

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001863s
Generating VCs ... took 0.012884s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.082338
[
-1 -> true
0 -> true
]
[
]
1/18 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 154, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/18 ... [IO] line 202, (totalDonated + amount) ... unproven
4/18 ... [IO] line 215, (totalDonated + amount) ... unproven
5/18 ... [ETH_LEAK] line 191, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 203, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/18 ... [ETH_LEAK] line 216, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/18 ... [RE_EL] line 191, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 203, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/18 ... [RE_EL] line 216, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... unproven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 141, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 175, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 3.597911s

Generating VCs ... took 0.012889s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 3.734196
[
-1 -> (Read(@TU, owner__@89) == true)
0 -> (Read(@TU, owner__@89) == true)
]
[
]
1/18 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 154, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/18 ... [IO] line 202, (totalDonated + amount) ... unproven
4/18 ... [IO] line 215, (totalDonated + amount) ... unproven
5/18 ... [ETH_LEAK] line 191, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 203, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/18 ... [ETH_LEAK] line 216, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/18 ... [RE_EL] line 191, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 203, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/18 ... [RE_EL] line 216, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 141, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 175, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 3.331041s

Generating VCs ... took 0.014187s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 7.598642
[
-1 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
0 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
]
[
]
1/18 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 154, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/18 ... [IO] line 202, (totalDonated + amount) ... unproven
4/18 ... [IO] line 215, (totalDonated + amount) ... unproven
5/18 ... [ETH_LEAK] line 191, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 203, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/18 ... [ETH_LEAK] line 216, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/18 ... [RE_EL] line 191, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 203, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/18 ... [RE_EL] line 216, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 141, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 175, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 3.329496s

Generating VCs ... took 0.012991s
Checking validity of VCs ... took 0.482926s

Generating VCs ... took 0.012657s
Checking validity of VCs ... took 8.63909s

Generating VCs ... took 0.013915s
Checking validity of VCs ... took 12.91548s

Generating VCs ... took 0.013145s
Checking validity of VCs ... took 0.681312s

Generating VCs ... took 0.012759s
Checking validity of VCs ... took 10.869415s

Generating VCs ... took 0.013008s
Checking validity of VCs ... took 9.67859s

Iter : 10 To explore : 795 Explored : 1054 Total elapsed : 53.987631
Generating VCs ... took 0.013095s
Checking validity of VCs ... took 0.642427s

Generating VCs ... took 0.012833s
Checking validity of VCs ... took 0.495598s

Generating VCs ... took 0.012916s
Checking validity of VCs ... took 0.611977s

Generating VCs ... took 0.013096s
Checking validity of VCs ... took 0.50335s

Generating VCs ... took 0.013432s
Checking validity of VCs ... took 1.139738s

Generating VCs ... took 0.01392s
Checking validity of VCs ... took 0.668366s

Generating VCs ... took 0.012993s
Checking validity of VCs ... took 0.672257s

Generating VCs ... took 0.01388s
Checking validity of VCs ... took 1.08587s

Generating VCs ... took 0.013412s
Checking validity of VCs ... took 1.414803s

Generating VCs ... took 0.013007s
Checking validity of VCs ... took 2.469768s

Iter : 20 To explore : 1717 Explored : 1986 Total elapsed : 64.052501
Generating VCs ... took 0.013567s
Checking validity of VCs ... took 2.648127s

Generating VCs ... took 0.013376s
Checking validity of VCs ... took 0.671544s

Generating VCs ... took 0.012993s
Checking validity of VCs ... took 0.810421s

Generating VCs ... took 0.014874s
Checking validity of VCs ... took 1.231031s

Generating VCs ... took 0.014758s
Checking validity of VCs ... took 0.672095s

Generating VCs ... took 0.013109s
Checking validity of VCs ... took 0.624122s

Generating VCs ... took 0.014418s
Checking validity of VCs ... took 1.342088s

Generating VCs ... took 0.013391s
Checking validity of VCs ... took 1.999017s

Generating VCs ... took 0.014602s
Checking validity of VCs ... took 1.810355s

Generating VCs ... took 0.012927s
Checking validity of VCs ... took 2.126374s

Iter : 30 To explore : 2766 Explored : 3045 Total elapsed : 78.441407
Generating VCs ... took 0.01307s
Checking validity of VCs ... took 2.365415s

Generating VCs ... took 0.012947s
Checking validity of VCs ... took 2.846941s

Generating VCs ... took 0.013866s
Checking validity of VCs ... took 3.468885s

Generating VCs ... took 0.013215s
Checking validity of VCs ... took 3.185737s

Generating VCs ... took 0.013321s
Checking validity of VCs ... took 2.720972s

Generating VCs ... took 0.01341s
Checking validity of VCs ... took 1.035652s

Generating VCs ... took 0.01294s
Checking validity of VCs ... took 0.726887s

Generating VCs ... took 0.012907s
Checking validity of VCs ... took 0.608092s

Generating VCs ... took 0.013301s
Checking validity of VCs ... took 1.263433s

Generating VCs ... took 0.012937s
Checking validity of VCs ... took 0.677147s

Iter : 40 To explore : 3693 Explored : 3982 Total elapsed : 97.813479
Generating VCs ... took 0.013008s
Checking validity of VCs ... took 0.707571s

Generating VCs ... took 0.015385s
Checking validity of VCs ... took 0.747136s

Generating VCs ... took 0.01573s
Checking validity of VCs ... took 3.106578s

Generating VCs ... took 0.015366s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 43 Total elapsed : 103.019437
[
-1 -> (((randomSeed__@87 == 0) /\ (Read(@TU, owner__@89) == true)) /\ (Read(@TU, whale__@81) == true))
0 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
]
[
]
1/18 ... [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 154, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/18 ... [IO] line 202, (totalDonated + amount) ... unproven
4/18 ... [IO] line 215, (totalDonated + amount) ... unproven
5/18 ... [ETH_LEAK] line 191, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 203, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/18 ... [ETH_LEAK] line 216, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/18 ... [RE_EL] line 191, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 203, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/18 ... [RE_EL] line 216, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 141, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 175, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 2.833003s

Generating VCs ... took 0.013347s
Checking validity of VCs ... took 0.492825s

Generating VCs ... took 0.013434s
Checking validity of VCs ... took 11.155305s

Generating VCs ... took 0.013157s
Checking validity of VCs ... took 0.710021s

Generating VCs ... took 0.013575s
Checking validity of VCs ... took 7.319246s

Generating VCs ... took 0.013208s
Checking validity of VCs ... took 8.467649s

Generating VCs ... took 0.01313s
Checking validity of VCs ... took 13.210913s

Iter : 50 To explore : 3565 Explored : 7708 Total elapsed : 147.718392
Generating VCs ... took 0.01316s
Checking validity of VCs ... took 0.50479s

Generating VCs ... took 0.012979s
Checking validity of VCs ... took 0.615607s

Generating VCs ... took 0.013246s
Checking validity of VCs ... took 0.628053s

Generating VCs ... took 0.013731s
Checking validity of VCs ... took 0.500628s

Generating VCs ... took 0.00330600000001s
Checking validity of VCs ... 
1/24 ... [NO_EFFECT] line 97, (@pre1 == betLimit) ... unproven
2/24 ... [NO_EFFECT] line 109, (@pre2 == difficulty) ... unproven
3/24 ... [NO_EFFECT] line 133, (@pre4 == timestamps[msg.sender]) ... unproven
4/24 ... [NO_EFFECT] line 134, (@pre3 == wagers[msg.sender]) ... unproven
5/24 ... [NO_EFFECT] line 147, (@pre6 == blockNumber) ... unproven
6/24 ... [NO_EFFECT] line 154, (@pre5 == winningNumber) ... unproven
7/24 ... [NO_EFFECT] line 189, (@pre7 == ethToTransfer) ... unproven
8/24 ... [NO_EFFECT] line 202, (@pre8 == totalDonated) ... unproven
9/24 ... [NO_EFFECT] line 215, (@pre9 == totalDonated) ... unproven
10/24 ... [ASSIGN_CONST] line 154, (winningNumber == 0) ... unproven
11/24 ... [ASSIGN_CONST] line 202, (totalDonated == 0) ... unproven
12/24 ... [ASSIGN_CONST] line 215, (totalDonated == 0) ... unproven
13/24 ... [DEAD] line 18, false ... unproven
14/24 ... [DEAD] line 30, false ... unproven
15/24 ... [DEAD] line 36, false ... unproven
16/24 ... [DEAD] line 127, false ... unproven
17/24 ... [DEAD] line 130, false ... unproven
18/24 ... [DEAD] line 148, false ... unproven
19/24 ... [DEAD] line 153, false ... unproven
20/24 ... [DEAD] line 156, false ... unproven
21/24 ... [DEAD] line 158, false ... unproven
22/24 ... [DEAD] line 163, false ... unproven
23/24 ... [DEAD] line 180, false ... unproven
24/24 ... [DEAD] line 191, false ... unproven
took 1.094646s


===== Vulnerability Report =====
[1] [IO] line 153, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 154, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[3] [IO] line 202, (totalDonated + amount) : unproven
[4] [IO] line 215, (totalDonated + amount) : unproven
[5] [ETH_LEAK] line 191, winner.transfer(ethToTransfer); : unproven
[6] [ETH_LEAK] line 203, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[7] [ETH_LEAK] line 216, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [RE_EL] line 191, winner.transfer(ethToTransfer); : unproven
[9] [RE_EL] line 203, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[10] [RE_EL] line 216, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE] line 83, (PoCGame, OpenToThePublic, []) : proven
[12] [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[13] [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) : proven
[14] [RE] line 120, (PoCGame, wager, []) : unproven
[15] [RE] line 141, (PoCGame, play, []) : unproven
[16] [RE] line 175, (PoCGame, donate, []) : unproven
[17] [TX_ORG] line 18, assume((msg.sender == owner)); : proven
[18] [TX_ORG] line 30, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 97, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 109, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 133, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 134, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 147, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 154, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 189, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 202, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 215, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 154, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 202, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 215, (totalDonated == 0) : unproven
[13] [DEAD] line 18, false : unproven
[14] [DEAD] line 30, false : unproven
[15] [DEAD] line 36, false : unproven
[16] [DEAD] line 127, false : unproven
[17] [DEAD] line 130, false : unproven
[18] [DEAD] line 148, false : unproven
[19] [DEAD] line 153, false : unproven
[20] [DEAD] line 156, false : unproven
[21] [DEAD] line 158, false : unproven
[22] [DEAD] line 163, false : unproven
[23] [DEAD] line 180, false : unproven
[24] [DEAD] line 191, false : unproven

============ Statistics ============
# Iter                    : 53
# Alarm / Query           : 9 / 18
- integer over/underflow  : 4 / 4
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 3 / 6
- tx.origin               : 0 / 2

Time Elapsed (Real) : 151.138661861
Time Elapsed (CPU)  : 151.184941
