[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 32
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000727s
[INFO] # path : 55

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.002287s
Generating VCs ... took 0.020449s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.098373
[
-1 -> true
0 -> true
]
[
]
1/21 ... [IO] line 164, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 165, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 214, (totalDonated + amount) ... unproven
4/21 ... [IO] line 226, (totalDonated + amount) ... proven
5/21 ... [IO] line 227, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 202, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/21 ... [ETH_LEAK] line 225, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/21 ... [RE_EL] line 202, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/21 ... [RE_EL] line 225, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... unproven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 152, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 186, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 297, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... unproven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.20798s

Generating VCs ... took 0.021645s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 3.379484
[
-1 -> (Read(@TU, owner__@112) == true)
0 -> (Read(@TU, owner__@112) == true)
]
[
]
1/21 ... [IO] line 164, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 165, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 214, (totalDonated + amount) ... unproven
4/21 ... [IO] line 226, (totalDonated + amount) ... proven
5/21 ... [IO] line 227, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 202, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/21 ... [ETH_LEAK] line 225, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/21 ... [RE_EL] line 202, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/21 ... [RE_EL] line 225, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 152, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 186, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 297, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.610849s

Generating VCs ... took 0.023554s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 6.548571
[
-1 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/21 ... [IO] line 164, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 165, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 214, (totalDonated + amount) ... unproven
4/21 ... [IO] line 226, (totalDonated + amount) ... proven
5/21 ... [IO] line 227, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 202, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/21 ... [ETH_LEAK] line 225, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/21 ... [RE_EL] line 202, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/21 ... [RE_EL] line 225, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 152, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 186, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 297, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.039924s

Generating VCs ... took 0.020979s
Checking validity of VCs ... took 0.483037s

Generating VCs ... took 0.021081s
Checking validity of VCs ... took 0.495664s

Generating VCs ... took 0.022554s
Checking validity of VCs ... took 0.491111s

Generating VCs ... took 0.020145s
Checking validity of VCs ... took 0.659422s

Generating VCs ... took 0.021756s
Checking validity of VCs ... took 7.707832s

Generating VCs ... took 0.021109s
Checking validity of VCs ... took 15.073524s

Iter : 10 To explore : 700 Explored : 963 Total elapsed : 34.311779
Generating VCs ... took 0.022588s
Checking validity of VCs ... took 1.666794s

Generating VCs ... took 0.02071s
Checking validity of VCs ... took 6.625567s

Generating VCs ... took 0.024012s
Checking validity of VCs ... took 5.180908s

Generating VCs ... took 0.020857s
Checking validity of VCs ... took 14.395811s

Generating VCs ... took 0.02093s
Checking validity of VCs ... took 8.833379s

Generating VCs ... took 0.023113s
Checking validity of VCs ... took 1.989035s

Generating VCs ... took 0.020345s
Checking validity of VCs ... took 6.869102s

Generating VCs ... took 0.021545s
Checking validity of VCs ... took 4.839831s

Generating VCs ... took 0.020036s
Checking validity of VCs ... took 0.531376s

Generating VCs ... took 0.020169s
Checking validity of VCs ... took 0.649654s

Iter : 20 To explore : 1751 Explored : 2024 Total elapsed : 86.372369
Generating VCs ... took 0.021651s
Checking validity of VCs ... took 0.498213s

Generating VCs ... took 0.020242s
Checking validity of VCs ... took 0.669411s

Generating VCs ... took 0.020395s
Checking validity of VCs ... took 0.506459s

Generating VCs ... took 0.021874s
Checking validity of VCs ... took 0.555882s

Generating VCs ... took 0.02021s
Checking validity of VCs ... took 0.503547s

Generating VCs ... took 0.021455s
Checking validity of VCs ... took 0.702869s

Generating VCs ... took 0.021911s
Checking validity of VCs ... took 1.589551s

Generating VCs ... took 0.021669s
Checking validity of VCs ... took 0.679517s

Generating VCs ... took 0.02008s
Checking validity of VCs ... took 0.69826s

Generating VCs ... took 0.020266s
Checking validity of VCs ... took 1.406127s

Iter : 30 To explore : 2645 Explored : 2928 Total elapsed : 94.598726
Generating VCs ... took 0.02171s
Checking validity of VCs ... took 0.624809s

Generating VCs ... took 0.020092s
Checking validity of VCs ... took 0.751412s

Generating VCs ... took 0.020181s
Checking validity of VCs ... took 1.144012s

Generating VCs ... took 0.020844s
Checking validity of VCs ... took 1.338305s

Generating VCs ... took 0.020288s
Checking validity of VCs ... took 1.297533s

Generating VCs ... took 0.02069s
Checking validity of VCs ... took 1.148372s

Generating VCs ... took 0.021659s
Checking validity of VCs ... took 2.43446s

Generating VCs ... took 0.020266s
Checking validity of VCs ... took 2.366114s

Generating VCs ... took 0.020573s
Checking validity of VCs ... took 2.239623s

Generating VCs ... took 0.020138s
Checking validity of VCs ... took 4.788331s

Iter : 40 To explore : 3708 Explored : 4001 Total elapsed : 113.281041
Generating VCs ... took 0.020847s
Checking validity of VCs ... took 0.746588s

Generating VCs ... took 0.020107s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 41 Total elapsed : 114.588146
[
-1 -> (((randomSeed__@110 == 0) /\ (Read(@TU, owner__@112) == true)) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/21 ... [IO] line 164, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 165, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 214, (totalDonated + amount) ... unproven
4/21 ... [IO] line 226, (totalDonated + amount) ... proven
5/21 ... [IO] line 227, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 202, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/21 ... [ETH_LEAK] line 225, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/21 ... [RE_EL] line 202, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/21 ... [RE_EL] line 225, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 152, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 186, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 297, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.660595s

Generating VCs ... took 0.020608s
Checking validity of VCs ... took 0.521221s

Generating VCs ... took 0.020609s
Checking validity of VCs ... took 0.510055s

Generating VCs ... took 0.020428s
Checking validity of VCs ... took 0.501286s

Generating VCs ... took 0.020375s
Checking validity of VCs ... took 12.394532s

Generating VCs ... took 0.019965s
Checking validity of VCs ... took 2.238039s

Generating VCs ... took 0.0208s
Checking validity of VCs ... took 0.640355s

Generating VCs ... took 0.020632s
Checking validity of VCs ... took 9.55998s

Generating VCs ... took 0.021104s
Checking validity of VCs ... took 16.616723s

Generating VCs ... took 0.00461899999999s
Checking validity of VCs ... 
1/25 ... [NO_EFFECT] line 108, (@pre1 == betLimit) ... unproven
2/25 ... [NO_EFFECT] line 120, (@pre2 == difficulty) ... unproven
3/25 ... [NO_EFFECT] line 144, (@pre4 == timestamps[msg.sender]) ... unproven
4/25 ... [NO_EFFECT] line 145, (@pre3 == wagers[msg.sender]) ... unproven
5/25 ... [NO_EFFECT] line 158, (@pre6 == blockNumber) ... unproven
6/25 ... [NO_EFFECT] line 165, (@pre5 == winningNumber) ... unproven
7/25 ... [NO_EFFECT] line 200, (@pre7 == ethToTransfer) ... unproven
8/25 ... [NO_EFFECT] line 214, (@pre8 == totalDonated) ... unproven
9/25 ... [NO_EFFECT] line 227, (@pre9 == totalDonated) ... unproven
10/25 ... [ASSIGN_CONST] line 165, (winningNumber == 0) ... unproven
11/25 ... [ASSIGN_CONST] line 214, (totalDonated == 0) ... unproven
12/25 ... [ASSIGN_CONST] line 227, (totalDonated == 0) ... unproven
13/25 ... [DEAD] line 29, false ... unproven
14/25 ... [DEAD] line 41, false ... unproven
15/25 ... [DEAD] line 47, false ... unproven
16/25 ... [DEAD] line 138, false ... unproven
17/25 ... [DEAD] line 141, false ... unproven
18/25 ... [DEAD] line 159, false ... unproven
19/25 ... [DEAD] line 164, false ... unproven
20/25 ... [DEAD] line 167, false ... unproven
21/25 ... [DEAD] line 169, false ... unproven
22/25 ... [DEAD] line 174, false ... unproven
23/25 ... [DEAD] line 191, false ... unproven
24/25 ... [DEAD] line 202, false ... unproven
25/25 ... [DEAD] line 226, false ... unproven
took 1.365772s


===== Vulnerability Report =====
[1] [IO] line 164, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 165, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[3] [IO] line 214, (totalDonated + amount) : unproven
[4] [IO] line 226, (totalDonated + amount) : proven
[5] [IO] line 227, (totalDonated + amount) : proven
[6] [ETH_LEAK] line 202, winner.transfer(ethToTransfer); : unproven
[7] [ETH_LEAK] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [ETH_LEAK] line 225, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[9] [RE_EL] line 202, winner.transfer(ethToTransfer); : unproven
[10] [RE_EL] line 213, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE_EL] line 225, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[12] [RE] line 94, (PoCGame, OpenToThePublic, []) : proven
[13] [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[14] [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) : proven
[15] [RE] line 126, (PoCGame, @fallback, []) : unproven
[16] [RE] line 131, (PoCGame, wager, []) : unproven
[17] [RE] line 152, (PoCGame, play, []) : unproven
[18] [RE] line 186, (PoCGame, donate, []) : unproven
[19] [RE] line 297, (PoCGame, transferAnyERC20Token, [address, address, uint256]) : proven
[20] [TX_ORG] line 29, assume((msg.sender == owner)); : proven
[21] [TX_ORG] line 41, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 108, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 120, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 144, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 145, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 158, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 165, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 200, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 214, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 227, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 165, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 214, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 227, (totalDonated == 0) : unproven
[13] [DEAD] line 29, false : unproven
[14] [DEAD] line 41, false : unproven
[15] [DEAD] line 47, false : unproven
[16] [DEAD] line 138, false : unproven
[17] [DEAD] line 141, false : unproven
[18] [DEAD] line 159, false : unproven
[19] [DEAD] line 164, false : unproven
[20] [DEAD] line 167, false : unproven
[21] [DEAD] line 169, false : unproven
[22] [DEAD] line 174, false : unproven
[23] [DEAD] line 191, false : unproven
[24] [DEAD] line 202, false : unproven
[25] [DEAD] line 226, false : unproven

============ Statistics ============
# Iter                    : 49
# Alarm / Query           : 9 / 21
- integer over/underflow  : 3 / 5
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 4 / 8
- tx.origin               : 0 / 2

Time Elapsed (Real) : 162.199858189
Time Elapsed (CPU)  : 162.251966
