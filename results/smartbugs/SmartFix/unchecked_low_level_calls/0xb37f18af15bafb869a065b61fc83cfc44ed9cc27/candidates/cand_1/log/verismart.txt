[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 8
[INFO] reachable : 7
[INFO] Generating Paths ... took 0.00023s
[INFO] # path : 23

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000877s
Generating VCs ... took 0.002699s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.034352
[
-1 -> true
0 -> true
]
[
]
1/7 ... [IO] line 20, (depositsCount + 1) ... proven
2/7 ... [IO] line 21, (depositsCount + 1) ... proven
3/7 ... [ETH_LEAK] line 29, msg.sender.transfer(_value); ... unproven
4/7 ... [ETH_LEAK] line 34, _target.call.value(_value)(); ... unproven
5/7 ... [RE_EL] line 29, msg.sender.transfer(_value); ... unproven
6/7 ... [RE_EL] line 34, _target.call.value(_value)(); ... unproven
7/7 ... [TX_ORG] line 15, assume((msg.sender == owner)); ... proven
took 0.21364s

Generating VCs ... took 0.001029s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.249262
[
-1 -> (Read(@TU, owner__@5) == true)
0 -> (Read(@TU, owner__@5) == true)
]
[
]
1/7 ... [IO] line 20, (depositsCount + 1) ... proven
2/7 ... [IO] line 21, (depositsCount + 1) ... proven
3/7 ... [ETH_LEAK] line 29, msg.sender.transfer(_value); ... proven
4/7 ... [ETH_LEAK] line 34, _target.call.value(_value)(); ... proven
5/7 ... [RE_EL] line 29, msg.sender.transfer(_value); ... proven
6/7 ... [RE_EL] line 34, _target.call.value(_value)(); ... proven
7/7 ... [TX_ORG] line 15, assume((msg.sender == owner)); ... proven
took 0.217202s

Generating VCs ... took 0.000575s
Checking validity of VCs ... 
1/6 ... [NO_EFFECT] line 21, (@pre1 == depositsCount) ... unproven
2/6 ... [ASSIGN_CONST] line 21, (depositsCount == 0) ... unproven
3/6 ... [DEAD] line 15, false ... unproven
4/6 ... [DEAD] line 20, false ... unproven
5/6 ... [DEAD] line 25, false ... unproven
6/6 ... [DEAD] line 29, false ... unproven
took 0.269852s


===== Vulnerability Report =====
[1] [IO] line 20, (depositsCount + 1) : proven
[2] [IO] line 21, (depositsCount + 1) : proven
[3] [ETH_LEAK] line 29, msg.sender.transfer(_value); : proven
[4] [ETH_LEAK] line 34, _target.call.value(_value)(); : proven
[5] [RE_EL] line 29, msg.sender.transfer(_value); : proven
[6] [RE_EL] line 34, _target.call.value(_value)(); : proven
[7] [TX_ORG] line 15, assume((msg.sender == owner)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 21, (@pre1 == depositsCount) : unproven
[2] [ASSIGN_CONST] line 21, (depositsCount == 0) : unproven
[3] [DEAD] line 15, false : unproven
[4] [DEAD] line 20, false : unproven
[5] [DEAD] line 25, false : unproven
[6] [DEAD] line 29, false : unproven

============ Statistics ============
# Iter                    : 2
# Alarm / Query           : 0 / 7
- integer over/underflow  : 0 / 2
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 2
- reentrancy-leaking      : 0 / 2
- reentrancy              : 0 / 0
- tx.origin               : 0 / 1

Time Elapsed (Real) : 0.755503892899
Time Elapsed (CPU)  : 0.735196
