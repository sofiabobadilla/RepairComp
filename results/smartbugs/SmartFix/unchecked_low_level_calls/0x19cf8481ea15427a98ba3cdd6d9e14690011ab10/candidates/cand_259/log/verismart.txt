[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 94
[INFO] reachable : 51
[INFO] Generating Paths ... took 0.000917s
[INFO] # path : 127

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.005026s
Generating VCs ... took 0.03342s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.152414
[
-1 -> true
0 -> true
]
[
]
1/75 ... [IO] line 50, (a - b) ... proven
2/75 ... [IO] line 54, (a + b) ... proven
3/75 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/75 ... [IO] line 262, (totalSupply - _value) ... unproven
5/75 ... [IO] line 278, (balances[_from] - _value) ... proven
6/75 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/75 ... [IO] line 280, (totalSupply - _value) ... unproven
8/75 ... [IO] line 289, (balances[_to] + _value) ... 
Warning : conditional safety checking

Warning : conditional safety checking
proven
9/75 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/75 ... [IO] line 292, (balances[_to] + _value) ... proven
11/75 ... [IO] line 300, (balances[_to] + _value) ... 
Warning : conditional safety checking

Warning : conditional safety checking
proven
12/75 ... [IO] line 302, (balances[_to] + _value) ... proven
13/75 ... [IO] line 303, (balances[_from] - _value) ... proven
14/75 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/75 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/75 ... [IO] line 377, (numTransfers + 1) ... unproven
17/75 ... [IO] line 396, (supplylimit - totalSupply) ... unproven
18/75 ... [IO] line 407, (msg.value * CreationRate) ... unproven
19/75 ... [IO] line 408, (totalSupply + numTokens) ... unproven
20/75 ... [IO] line 411, (balances[holder] + numTokens) ... unproven
21/75 ... [IO] line 412, (balancesRAW[holder] + numTokensRAW) ... unproven
22/75 ... [IO] line 418, (numTokens * percentOfTotal) ... unproven
23/75 ... [IO] line 420, (totalSupply + additionalTokens) ... unproven
24/75 ... [IO] line 422, (balances[migrationMaster] + additionalTokens) ... unproven
25/75 ... [IO] line 429, (tokenCreationRate + bonusCreationRate) ... unproven
26/75 ... [IO] line 441, (this.balance - SubX) ... unproven
27/75 ... [IO] line 460, (8 * oneweek) ... proven
28/75 ... [IO] line 460, (fundingEndBlock + (8 * oneweek)) ... proven
29/75 ... [IO] line 478, (balances[msg.sender] - _value) ... proven
30/75 ... [IO] line 479, (totalSupply - _value) ... unproven
31/75 ... [IO] line 480, (totalMigrated + _value) ... unproven
32/75 ... [IO] line 494, (totalSupply - DAOPLTokenValue) ... unproven
33/75 ... [ETH_LEAK] line 435, owner.send(this.balance) ... unproven
34/75 ... [ETH_LEAK] line 441, owner.send((this.balance - SubX)); ... unproven
35/75 ... [ETH_LEAK] line 467, owner.send(this.balance); ... unproven
36/75 ... [ETH_LEAK] line 497, msg.sender.transfer(ETHValue); ... unproven
37/75 ... [RE_EL] line 435, owner.send(this.balance) ... unproven
38/75 ... [RE_EL] line 441, owner.send((this.balance - SubX)); ... unproven
39/75 ... [RE_EL] line 467, owner.send(this.balance); ... unproven
40/75 ... [RE_EL] line 497, msg.sender.transfer(ETHValue); ... unproven
41/75 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... unproven
42/75 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... unproven
43/75 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
44/75 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
45/75 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
46/75 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
47/75 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
48/75 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
49/75 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
50/75 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... unproven
51/75 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... proven
52/75 ... [RE] line 368, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... unproven
53/75 ... [RE] line 389, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
54/75 ... [RE] line 426, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... unproven
55/75 ... [RE] line 433, (daoPOLSKAtokens, FundsTransfer, []) ... unproven
56/75 ... [RE] line 438, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... unproven
57/75 ... [RE] line 443, (daoPOLSKAtokens, turnrefund, []) ... unproven
58/75 ... [RE] line 448, (daoPOLSKAtokens, fundingState, []) ... unproven
59/75 ... [RE] line 452, (daoPOLSKAtokens, turnmigrate, []) ... unproven
60/75 ... [RE] line 459, (daoPOLSKAtokens, finalize, []) ... unproven
61/75 ... [RE] line 469, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
62/75 ... [RE] line 485, (daoPOLSKAtokens, refundTRA, []) ... unproven
63/75 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
64/75 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
65/75 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
66/75 ... [TX_ORG] line 351, assume((migrationAgent == msg.sender)); ... proven
67/75 ... [TX_ORG] line 352, assume((Chain2 == msg.sender)); ... proven
68/75 ... [TX_ORG] line 353, assume((msg.sender != owner)); ... proven
69/75 ... [TX_ORG] line 369, assume((msg.sender != owner)); ... proven
70/75 ... [TX_ORG] line 427, assume((msg.sender == owner)); ... proven
71/75 ... [TX_ORG] line 439, assume((msg.sender != owner)); ... proven
72/75 ... [TX_ORG] line 444, assume((msg.sender != owner)); ... proven
73/75 ... [TX_ORG] line 449, assume((msg.sender != owner)); ... proven
74/75 ... [TX_ORG] line 453, assume((msg.sender != migrationMaster)); ... proven
75/75 ... [TX_ORG] line 465, assume((msg.sender == owner)); ... proven
took 6.901245s

Generating VCs ... took 0.033884s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 9.400745
[
-1 -> (Read(@TU, Chain1__@515) == true)
0 -> (Read(@TU, Chain1__@515) == true)
]
[
]
1/75 ... [IO] line 50, (a - b) ... proven
2/75 ... [IO] line 54, (a + b) ... proven
3/75 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/75 ... [IO] line 262, (totalSupply - _value) ... unproven
5/75 ... [IO] line 278, (balances[_from] - _value) ... proven
6/75 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/75 ... [IO] line 280, (totalSupply - _value) ... unproven
8/75 ... [IO] line 289, (balances[_to] + _value) ... proven
9/75 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/75 ... [IO] line 292, (balances[_to] + _value) ... proven
11/75 ... [IO] line 300, (balances[_to] + _value) ... proven
12/75 ... [IO] line 302, (balances[_to] + _value) ... proven
13/75 ... [IO] line 303, (balances[_from] - _value) ... proven
14/75 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/75 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/75 ... [IO] line 377, (numTransfers + 1) ... unproven
17/75 ... [IO] line 396, (supplylimit - totalSupply) ... unproven
18/75 ... [IO] line 407, (msg.value * CreationRate) ... unproven
19/75 ... [IO] line 408, (totalSupply + numTokens) ... unproven
20/75 ... [IO] line 411, (balances[holder] + numTokens) ... unproven
21/75 ... [IO] line 412, (balancesRAW[holder] + numTokensRAW) ... unproven
22/75 ... [IO] line 418, (numTokens * percentOfTotal) ... unproven
23/75 ... [IO] line 420, (totalSupply + additionalTokens) ... unproven
24/75 ... [IO] line 422, (balances[migrationMaster] + additionalTokens) ... unproven
25/75 ... [IO] line 429, (tokenCreationRate + bonusCreationRate) ... unproven
26/75 ... [IO] line 441, (this.balance - SubX) ... unproven
27/75 ... [IO] line 460, (8 * oneweek) ... proven
28/75 ... [IO] line 460, (fundingEndBlock + (8 * oneweek)) ... proven
29/75 ... [IO] line 478, (balances[msg.sender] - _value) ... proven
30/75 ... [IO] line 479, (totalSupply - _value) ... unproven
31/75 ... [IO] line 480, (totalMigrated + _value) ... unproven
32/75 ... [IO] line 494, (totalSupply - DAOPLTokenValue) ... unproven
33/75 ... [ETH_LEAK] line 435, owner.send(this.balance) ... unproven
34/75 ... [ETH_LEAK] line 441, owner.send((this.balance - SubX)); ... unproven
35/75 ... [ETH_LEAK] line 467, owner.send(this.balance); ... unproven
36/75 ... [ETH_LEAK] line 497, msg.sender.transfer(ETHValue); ... unproven
37/75 ... [RE_EL] line 435, owner.send(this.balance) ... unproven
38/75 ... [RE_EL] line 441, owner.send((this.balance - SubX)); ... unproven
39/75 ... [RE_EL] line 467, owner.send(this.balance); ... unproven
40/75 ... [RE_EL] line 497, msg.sender.transfer(ETHValue); ... unproven
41/75 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... unproven
42/75 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... unproven
43/75 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
44/75 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
45/75 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
46/75 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
47/75 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
48/75 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
49/75 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
50/75 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... unproven
51/75 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... proven
52/75 ... [RE] line 368, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... unproven
53/75 ... [RE] line 389, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
54/75 ... [RE] line 426, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... unproven
55/75 ... [RE] line 433, (daoPOLSKAtokens, FundsTransfer, []) ... unproven
56/75 ... [RE] line 438, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... unproven
57/75 ... [RE] line 443, (daoPOLSKAtokens, turnrefund, []) ... unproven
58/75 ... [RE] line 448, (daoPOLSKAtokens, fundingState, []) ... unproven
59/75 ... [RE] line 452, (daoPOLSKAtokens, turnmigrate, []) ... unproven
60/75 ... [RE] line 459, (daoPOLSKAtokens, finalize, []) ... unproven
61/75 ... [RE] line 469, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
62/75 ... [RE] line 485, (daoPOLSKAtokens, refundTRA, []) ... unproven
63/75 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
64/75 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
65/75 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
66/75 ... [TX_ORG] line 351, assume((migrationAgent == msg.sender)); ... proven
67/75 ... [TX_ORG] line 352, assume((Chain2 == msg.sender)); ... proven
68/75 ... [TX_ORG] line 353, assume((msg.sender != owner)); ... proven
69/75 ... [TX_ORG] line 369, assume((msg.sender != owner)); ... proven
70/75 ... [TX_ORG] line 427, assume((msg.sender == owner)); ... proven
71/75 ... [TX_ORG] line 439, assume((msg.sender != owner)); ... proven
72/75 ... [TX_ORG] line 444, assume((msg.sender != owner)); ... proven
73/75 ... [TX_ORG] line 449, assume((msg.sender != owner)); ... proven
74/75 ... [TX_ORG] line 453, assume((msg.sender != migrationMaster)); ... proven
75/75 ... [TX_ORG] line 465, assume((msg.sender == owner)); ... proven
took 4.83059s

Generating VCs ... took 0.034429s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 18.009345
[
-1 -> ((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, owner__@501) == true))
0 -> ((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, owner__@501) == true))
]
[
]
1/75 ... [IO] line 50, (a - b) ... proven
2/75 ... [IO] line 54, (a + b) ... proven
3/75 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/75 ... [IO] line 262, (totalSupply - _value) ... unproven
5/75 ... [IO] line 278, (balances[_from] - _value) ... proven
6/75 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/75 ... [IO] line 280, (totalSupply - _value) ... unproven
8/75 ... [IO] line 289, (balances[_to] + _value) ... proven
9/75 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/75 ... [IO] line 292, (balances[_to] + _value) ... proven
11/75 ... [IO] line 300, (balances[_to] + _value) ... proven
12/75 ... [IO] line 302, (balances[_to] + _value) ... proven
13/75 ... [IO] line 303, (balances[_from] - _value) ... proven
14/75 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/75 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/75 ... [IO] line 377, (numTransfers + 1) ... unproven
17/75 ... [IO] line 396, (supplylimit - totalSupply) ... unproven
18/75 ... [IO] line 407, (msg.value * CreationRate) ... unproven
19/75 ... [IO] line 408, (totalSupply + numTokens) ... unproven
20/75 ... [IO] line 411, (balances[holder] + numTokens) ... unproven
21/75 ... [IO] line 412, (balancesRAW[holder] + numTokensRAW) ... unproven
22/75 ... [IO] line 418, (numTokens * percentOfTotal) ... unproven
23/75 ... [IO] line 420, (totalSupply + additionalTokens) ... unproven
24/75 ... [IO] line 422, (balances[migrationMaster] + additionalTokens) ... unproven
25/75 ... [IO] line 429, (tokenCreationRate + bonusCreationRate) ... unproven
26/75 ... [IO] line 441, (this.balance - SubX) ... unproven
27/75 ... [IO] line 460, (8 * oneweek) ... proven
28/75 ... [IO] line 460, (fundingEndBlock + (8 * oneweek)) ... proven
29/75 ... [IO] line 478, (balances[msg.sender] - _value) ... proven
30/75 ... [IO] line 479, (totalSupply - _value) ... unproven
31/75 ... [IO] line 480, (totalMigrated + _value) ... unproven
32/75 ... [IO] line 494, (totalSupply - DAOPLTokenValue) ... unproven
33/75 ... [ETH_LEAK] line 435, owner.send(this.balance) ... proven
34/75 ... [ETH_LEAK] line 441, owner.send((this.balance - SubX)); ... proven
35/75 ... [ETH_LEAK] line 467, owner.send(this.balance); ... proven
36/75 ... [ETH_LEAK] line 497, msg.sender.transfer(ETHValue); ... unproven
37/75 ... [RE_EL] line 435, owner.send(this.balance) ... proven
38/75 ... [RE_EL] line 441, owner.send((this.balance - SubX)); ... proven
39/75 ... [RE_EL] line 467, owner.send(this.balance); ... proven
40/75 ... [RE_EL] line 497, msg.sender.transfer(ETHValue); ... unproven
41/75 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... proven
42/75 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... proven
43/75 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
44/75 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
45/75 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
46/75 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
47/75 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
48/75 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
49/75 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
50/75 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... proven
51/75 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... proven
52/75 ... [RE] line 368, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... proven
53/75 ... [RE] line 389, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
54/75 ... [RE] line 426, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... proven
55/75 ... [RE] line 433, (daoPOLSKAtokens, FundsTransfer, []) ... proven
56/75 ... [RE] line 438, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... proven
57/75 ... [RE] line 443, (daoPOLSKAtokens, turnrefund, []) ... proven
58/75 ... [RE] line 448, (daoPOLSKAtokens, fundingState, []) ... proven
59/75 ... [RE] line 452, (daoPOLSKAtokens, turnmigrate, []) ... unproven
60/75 ... [RE] line 459, (daoPOLSKAtokens, finalize, []) ... unproven
61/75 ... [RE] line 469, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
62/75 ... [RE] line 485, (daoPOLSKAtokens, refundTRA, []) ... unproven
63/75 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
64/75 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
65/75 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
66/75 ... [TX_ORG] line 351, assume((migrationAgent == msg.sender)); ... proven
67/75 ... [TX_ORG] line 352, assume((Chain2 == msg.sender)); ... proven
68/75 ... [TX_ORG] line 353, assume((msg.sender != owner)); ... proven
69/75 ... [TX_ORG] line 369, assume((msg.sender != owner)); ... proven
70/75 ... [TX_ORG] line 427, assume((msg.sender == owner)); ... proven
71/75 ... [TX_ORG] line 439, assume((msg.sender != owner)); ... proven
72/75 ... [TX_ORG] line 444, assume((msg.sender != owner)); ... proven
73/75 ... [TX_ORG] line 449, assume((msg.sender != owner)); ... proven
74/75 ... [TX_ORG] line 453, assume((msg.sender != migrationMaster)); ... proven
75/75 ... [TX_ORG] line 465, assume((msg.sender == owner)); ... proven
took 5.91119s

Generating VCs ... took 0.034259s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 4 Total elapsed : 26.191466
[
-1 -> (((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain2__@518) == true)) /\ (Read(@TU, owner__@501) == true))
0 -> (((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain2__@518) == true)) /\ (Read(@TU, owner__@501) == true))
]
[
]
1/75 ... [IO] line 50, (a - b) ... proven
2/75 ... [IO] line 54, (a + b) ... proven
3/75 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/75 ... [IO] line 262, (totalSupply - _value) ... unproven
5/75 ... [IO] line 278, (balances[_from] - _value) ... proven
6/75 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/75 ... [IO] line 280, (totalSupply - _value) ... unproven
8/75 ... [IO] line 289, (balances[_to] + _value) ... proven
9/75 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/75 ... [IO] line 292, (balances[_to] + _value) ... proven
11/75 ... [IO] line 300, (balances[_to] + _value) ... proven
12/75 ... [IO] line 302, (balances[_to] + _value) ... proven
13/75 ... [IO] line 303, (balances[_from] - _value) ... proven
14/75 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/75 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/75 ... [IO] line 377, (numTransfers + 1) ... unproven
17/75 ... [IO] line 396, (supplylimit - totalSupply) ... unproven
18/75 ... [IO] line 407, (msg.value * CreationRate) ... unproven
19/75 ... [IO] line 408, (totalSupply + numTokens) ... unproven
20/75 ... [IO] line 411, (balances[holder] + numTokens) ... unproven
21/75 ... [IO] line 412, (balancesRAW[holder] + numTokensRAW) ... unproven
22/75 ... [IO] line 418, (numTokens * percentOfTotal) ... unproven
23/75 ... [IO] line 420, (totalSupply + additionalTokens) ... unproven
24/75 ... [IO] line 422, (balances[migrationMaster] + additionalTokens) ... unproven
25/75 ... [IO] line 429, (tokenCreationRate + bonusCreationRate) ... unproven
26/75 ... [IO] line 441, (this.balance - SubX) ... unproven
27/75 ... [IO] line 460, (8 * oneweek) ... proven
28/75 ... [IO] line 460, (fundingEndBlock + (8 * oneweek)) ... proven
29/75 ... [IO] line 478, (balances[msg.sender] - _value) ... proven
30/75 ... [IO] line 479, (totalSupply - _value) ... unproven
31/75 ... [IO] line 480, (totalMigrated + _value) ... unproven
32/75 ... [IO] line 494, (totalSupply - DAOPLTokenValue) ... unproven
33/75 ... [ETH_LEAK] line 435, owner.send(this.balance) ... proven
34/75 ... [ETH_LEAK] line 441, owner.send((this.balance - SubX)); ... proven
35/75 ... [ETH_LEAK] line 467, owner.send(this.balance); ... proven
36/75 ... [ETH_LEAK] line 497, msg.sender.transfer(ETHValue); ... unproven
37/75 ... [RE_EL] line 435, owner.send(this.balance) ... proven
38/75 ... [RE_EL] line 441, owner.send((this.balance - SubX)); ... proven
39/75 ... [RE_EL] line 467, owner.send(this.balance); ... proven
40/75 ... [RE_EL] line 497, msg.sender.transfer(ETHValue); ... unproven
41/75 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... proven
42/75 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... proven
43/75 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
44/75 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
45/75 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
46/75 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
47/75 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
48/75 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
49/75 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
50/75 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... proven
51/75 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... proven
52/75 ... [RE] line 368, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... proven
53/75 ... [RE] line 389, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
54/75 ... [RE] line 426, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... proven
55/75 ... [RE] line 433, (daoPOLSKAtokens, FundsTransfer, []) ... proven
56/75 ... [RE] line 438, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... proven
57/75 ... [RE] line 443, (daoPOLSKAtokens, turnrefund, []) ... proven
58/75 ... [RE] line 448, (daoPOLSKAtokens, fundingState, []) ... proven
59/75 ... [RE] line 452, (daoPOLSKAtokens, turnmigrate, []) ... unproven
60/75 ... [RE] line 459, (daoPOLSKAtokens, finalize, []) ... unproven
61/75 ... [RE] line 469, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
62/75 ... [RE] line 485, (daoPOLSKAtokens, refundTRA, []) ... unproven
63/75 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
64/75 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
65/75 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
66/75 ... [TX_ORG] line 351, assume((migrationAgent == msg.sender)); ... proven
67/75 ... [TX_ORG] line 352, assume((Chain2 == msg.sender)); ... proven
68/75 ... [TX_ORG] line 353, assume((msg.sender != owner)); ... proven
69/75 ... [TX_ORG] line 369, assume((msg.sender != owner)); ... proven
70/75 ... [TX_ORG] line 427, assume((msg.sender == owner)); ... proven
71/75 ... [TX_ORG] line 439, assume((msg.sender != owner)); ... proven
72/75 ... [TX_ORG] line 444, assume((msg.sender != owner)); ... proven
73/75 ... [TX_ORG] line 449, assume((msg.sender != owner)); ... proven
74/75 ... [TX_ORG] line 453, assume((msg.sender != migrationMaster)); ... proven
75/75 ... [TX_ORG] line 465, assume((msg.sender == owner)); ... proven
took 5.078396s

Generating VCs ... took 0.034035s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 5 Total elapsed : 33.929808
[
-1 -> ((((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain2__@518) == true)) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true))
0 -> ((((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain2__@518) == true)) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true))
]
[
]
1/75 ... [IO] line 50, (a - b) ... proven
2/75 ... [IO] line 54, (a + b) ... proven
3/75 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/75 ... [IO] line 262, (totalSupply - _value) ... unproven
5/75 ... [IO] line 278, (balances[_from] - _value) ... proven
6/75 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/75 ... [IO] line 280, (totalSupply - _value) ... unproven
8/75 ... [IO] line 289, (balances[_to] + _value) ... proven
9/75 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/75 ... [IO] line 292, (balances[_to] + _value) ... proven
11/75 ... [IO] line 300, (balances[_to] + _value) ... proven
12/75 ... [IO] line 302, (balances[_to] + _value) ... proven
13/75 ... [IO] line 303, (balances[_from] - _value) ... proven
14/75 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/75 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/75 ... [IO] line 377, (numTransfers + 1) ... unproven
17/75 ... [IO] line 396, (supplylimit - totalSupply) ... unproven
18/75 ... [IO] line 407, (msg.value * CreationRate) ... unproven
19/75 ... [IO] line 408, (totalSupply + numTokens) ... unproven
20/75 ... [IO] line 411, (balances[holder] + numTokens) ... unproven
21/75 ... [IO] line 412, (balancesRAW[holder] + numTokensRAW) ... unproven
22/75 ... [IO] line 418, (numTokens * percentOfTotal) ... unproven
23/75 ... [IO] line 420, (totalSupply + additionalTokens) ... unproven
24/75 ... [IO] line 422, (balances[migrationMaster] + additionalTokens) ... unproven
25/75 ... [IO] line 429, (tokenCreationRate + bonusCreationRate) ... unproven
26/75 ... [IO] line 441, (this.balance - SubX) ... unproven
27/75 ... [IO] line 460, (8 * oneweek) ... proven
28/75 ... [IO] line 460, (fundingEndBlock + (8 * oneweek)) ... proven
29/75 ... [IO] line 478, (balances[msg.sender] - _value) ... proven
30/75 ... [IO] line 479, (totalSupply - _value) ... unproven
31/75 ... [IO] line 480, (totalMigrated + _value) ... unproven
32/75 ... [IO] line 494, (totalSupply - DAOPLTokenValue) ... unproven
33/75 ... [ETH_LEAK] line 435, owner.send(this.balance) ... proven
34/75 ... [ETH_LEAK] line 441, owner.send((this.balance - SubX)); ... proven
35/75 ... [ETH_LEAK] line 467, owner.send(this.balance); ... proven
36/75 ... [ETH_LEAK] line 497, msg.sender.transfer(ETHValue); ... unproven
37/75 ... [RE_EL] line 435, owner.send(this.balance) ... proven
38/75 ... [RE_EL] line 441, owner.send((this.balance - SubX)); ... proven
39/75 ... [RE_EL] line 467, owner.send(this.balance); ... proven
40/75 ... [RE_EL] line 497, msg.sender.transfer(ETHValue); ... unproven
41/75 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... proven
42/75 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... proven
43/75 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
44/75 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
45/75 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
46/75 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
47/75 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
48/75 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
49/75 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
50/75 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... proven
51/75 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... proven
52/75 ... [RE] line 368, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... proven
53/75 ... [RE] line 389, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
54/75 ... [RE] line 426, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... proven
55/75 ... [RE] line 433, (daoPOLSKAtokens, FundsTransfer, []) ... proven
56/75 ... [RE] line 438, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... proven
57/75 ... [RE] line 443, (daoPOLSKAtokens, turnrefund, []) ... proven
58/75 ... [RE] line 448, (daoPOLSKAtokens, fundingState, []) ... proven
59/75 ... [RE] line 452, (daoPOLSKAtokens, turnmigrate, []) ... proven
60/75 ... [RE] line 459, (daoPOLSKAtokens, finalize, []) ... unproven
61/75 ... [RE] line 469, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
62/75 ... [RE] line 485, (daoPOLSKAtokens, refundTRA, []) ... unproven
63/75 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
64/75 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
65/75 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
66/75 ... [TX_ORG] line 351, assume((migrationAgent == msg.sender)); ... proven
67/75 ... [TX_ORG] line 352, assume((Chain2 == msg.sender)); ... proven
68/75 ... [TX_ORG] line 353, assume((msg.sender != owner)); ... proven
69/75 ... [TX_ORG] line 369, assume((msg.sender != owner)); ... proven
70/75 ... [TX_ORG] line 427, assume((msg.sender == owner)); ... proven
71/75 ... [TX_ORG] line 439, assume((msg.sender != owner)); ... proven
72/75 ... [TX_ORG] line 444, assume((msg.sender != owner)); ... proven
73/75 ... [TX_ORG] line 449, assume((msg.sender != owner)); ... proven
74/75 ... [TX_ORG] line 453, assume((msg.sender != migrationMaster)); ... proven
75/75 ... [TX_ORG] line 465, assume((msg.sender == owner)); ... proven
took 5.098299s

Generating VCs ... took 0.034155s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 6 Total elapsed : 41.983955
[
-1 -> (((((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain2__@518) == true)) /\ (Read(@TU, Chain3__@521) == true)) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true))
0 -> (((((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain2__@518) == true)) /\ (Read(@TU, Chain3__@521) == true)) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true))
]
[
]
1/75 ... [IO] line 50, (a - b) ... proven
2/75 ... [IO] line 54, (a + b) ... proven
3/75 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/75 ... [IO] line 262, (totalSupply - _value) ... unproven
5/75 ... [IO] line 278, (balances[_from] - _value) ... proven
6/75 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/75 ... [IO] line 280, (totalSupply - _value) ... unproven
8/75 ... [IO] line 289, (balances[_to] + _value) ... proven
9/75 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/75 ... [IO] line 292, (balances[_to] + _value) ... proven
11/75 ... [IO] line 300, (balances[_to] + _value) ... proven
12/75 ... [IO] line 302, (balances[_to] + _value) ... proven
13/75 ... [IO] line 303, (balances[_from] - _value) ... proven
14/75 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/75 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/75 ... [IO] line 377, (numTransfers + 1) ... unproven
17/75 ... [IO] line 396, (supplylimit - totalSupply) ... unproven
18/75 ... [IO] line 407, (msg.value * CreationRate) ... unproven
19/75 ... [IO] line 408, (totalSupply + numTokens) ... unproven
20/75 ... [IO] line 411, (balances[holder] + numTokens) ... unproven
21/75 ... [IO] line 412, (balancesRAW[holder] + numTokensRAW) ... unproven
22/75 ... [IO] line 418, (numTokens * percentOfTotal) ... unproven
23/75 ... [IO] line 420, (totalSupply + additionalTokens) ... unproven
24/75 ... [IO] line 422, (balances[migrationMaster] + additionalTokens) ... unproven
25/75 ... [IO] line 429, (tokenCreationRate + bonusCreationRate) ... unproven
26/75 ... [IO] line 441, (this.balance - SubX) ... unproven
27/75 ... [IO] line 460, (8 * oneweek) ... proven
28/75 ... [IO] line 460, (fundingEndBlock + (8 * oneweek)) ... proven
29/75 ... [IO] line 478, (balances[msg.sender] - _value) ... proven
30/75 ... [IO] line 479, (totalSupply - _value) ... unproven
31/75 ... [IO] line 480, (totalMigrated + _value) ... unproven
32/75 ... [IO] line 494, (totalSupply - DAOPLTokenValue) ... unproven
33/75 ... [ETH_LEAK] line 435, owner.send(this.balance) ... proven
34/75 ... [ETH_LEAK] line 441, owner.send((this.balance - SubX)); ... proven
35/75 ... [ETH_LEAK] line 467, owner.send(this.balance); ... proven
36/75 ... [ETH_LEAK] line 497, msg.sender.transfer(ETHValue); ... unproven
37/75 ... [RE_EL] line 435, owner.send(this.balance) ... proven
38/75 ... [RE_EL] line 441, owner.send((this.balance - SubX)); ... proven
39/75 ... [RE_EL] line 467, owner.send(this.balance); ... proven
40/75 ... [RE_EL] line 497, msg.sender.transfer(ETHValue); ... unproven
41/75 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... proven
42/75 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... proven
43/75 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
44/75 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
45/75 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
46/75 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
47/75 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
48/75 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
49/75 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
50/75 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... proven
51/75 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... proven
52/75 ... [RE] line 368, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... proven
53/75 ... [RE] line 389, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
54/75 ... [RE] line 426, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... proven
55/75 ... [RE] line 433, (daoPOLSKAtokens, FundsTransfer, []) ... proven
56/75 ... [RE] line 438, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... proven
57/75 ... [RE] line 443, (daoPOLSKAtokens, turnrefund, []) ... proven
58/75 ... [RE] line 448, (daoPOLSKAtokens, fundingState, []) ... proven
59/75 ... [RE] line 452, (daoPOLSKAtokens, turnmigrate, []) ... proven
60/75 ... [RE] line 459, (daoPOLSKAtokens, finalize, []) ... unproven
61/75 ... [RE] line 469, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
62/75 ... [RE] line 485, (daoPOLSKAtokens, refundTRA, []) ... unproven
63/75 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
64/75 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
65/75 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
66/75 ... [TX_ORG] line 351, assume((migrationAgent == msg.sender)); ... proven
67/75 ... [TX_ORG] line 352, assume((Chain2 == msg.sender)); ... proven
68/75 ... [TX_ORG] line 353, assume((msg.sender != owner)); ... proven
69/75 ... [TX_ORG] line 369, assume((msg.sender != owner)); ... proven
70/75 ... [TX_ORG] line 427, assume((msg.sender == owner)); ... proven
71/75 ... [TX_ORG] line 439, assume((msg.sender != owner)); ... proven
72/75 ... [TX_ORG] line 444, assume((msg.sender != owner)); ... proven
73/75 ... [TX_ORG] line 449, assume((msg.sender != owner)); ... proven
74/75 ... [TX_ORG] line 453, assume((msg.sender != migrationMaster)); ... proven
75/75 ... [TX_ORG] line 465, assume((msg.sender == owner)); ... proven
took 6.357227s

Generating VCs ... took 0.034326s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 7 Total elapsed : 51.797143
[
-1 -> ((((((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain2__@518) == true)) /\ (Read(@TU, Chain3__@521) == true)) /\ (Read(@TU, Chain4__@524) == true)) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true))
0 -> ((((((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain2__@518) == true)) /\ (Read(@TU, Chain3__@521) == true)) /\ (Read(@TU, Chain4__@524) == true)) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true))
]
[
]
1/75 ... [IO] line 50, (a - b) ... proven
2/75 ... [IO] line 54, (a + b) ... proven
3/75 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/75 ... [IO] line 262, (totalSupply - _value) ... unproven
5/75 ... [IO] line 278, (balances[_from] - _value) ... proven
6/75 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/75 ... [IO] line 280, (totalSupply - _value) ... unproven
8/75 ... [IO] line 289, (balances[_to] + _value) ... proven
9/75 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/75 ... [IO] line 292, (balances[_to] + _value) ... proven
11/75 ... [IO] line 300, (balances[_to] + _value) ... proven
12/75 ... [IO] line 302, (balances[_to] + _value) ... proven
13/75 ... [IO] line 303, (balances[_from] - _value) ... proven
14/75 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/75 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/75 ... [IO] line 377, (numTransfers + 1) ... unproven
17/75 ... [IO] line 396, (supplylimit - totalSupply) ... unproven
18/75 ... [IO] line 407, (msg.value * CreationRate) ... unproven
19/75 ... [IO] line 408, (totalSupply + numTokens) ... unproven
20/75 ... [IO] line 411, (balances[holder] + numTokens) ... unproven
21/75 ... [IO] line 412, (balancesRAW[holder] + numTokensRAW) ... unproven
22/75 ... [IO] line 418, (numTokens * percentOfTotal) ... unproven
23/75 ... [IO] line 420, (totalSupply + additionalTokens) ... unproven
24/75 ... [IO] line 422, (balances[migrationMaster] + additionalTokens) ... unproven
25/75 ... [IO] line 429, (tokenCreationRate + bonusCreationRate) ... unproven
26/75 ... [IO] line 441, (this.balance - SubX) ... unproven
27/75 ... [IO] line 460, (8 * oneweek) ... proven
28/75 ... [IO] line 460, (fundingEndBlock + (8 * oneweek)) ... proven
29/75 ... [IO] line 478, (balances[msg.sender] - _value) ... proven
30/75 ... [IO] line 479, (totalSupply - _value) ... unproven
31/75 ... [IO] line 480, (totalMigrated + _value) ... unproven
32/75 ... [IO] line 494, (totalSupply - DAOPLTokenValue) ... unproven
33/75 ... [ETH_LEAK] line 435, owner.send(this.balance) ... proven
34/75 ... [ETH_LEAK] line 441, owner.send((this.balance - SubX)); ... proven
35/75 ... [ETH_LEAK] line 467, owner.send(this.balance); ... proven
36/75 ... [ETH_LEAK] line 497, msg.sender.transfer(ETHValue); ... unproven
37/75 ... [RE_EL] line 435, owner.send(this.balance) ... proven
38/75 ... [RE_EL] line 441, owner.send((this.balance - SubX)); ... proven
39/75 ... [RE_EL] line 467, owner.send(this.balance); ... proven
40/75 ... [RE_EL] line 497, msg.sender.transfer(ETHValue); ... unproven
41/75 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... proven
42/75 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... proven
43/75 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
44/75 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
45/75 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
46/75 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
47/75 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
48/75 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
49/75 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
50/75 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... proven
51/75 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... proven
52/75 ... [RE] line 368, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... proven
53/75 ... [RE] line 389, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
54/75 ... [RE] line 426, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... proven
55/75 ... [RE] line 433, (daoPOLSKAtokens, FundsTransfer, []) ... proven
56/75 ... [RE] line 438, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... proven
57/75 ... [RE] line 443, (daoPOLSKAtokens, turnrefund, []) ... proven
58/75 ... [RE] line 448, (daoPOLSKAtokens, fundingState, []) ... proven
59/75 ... [RE] line 452, (daoPOLSKAtokens, turnmigrate, []) ... proven
60/75 ... [RE] line 459, (daoPOLSKAtokens, finalize, []) ... unproven
61/75 ... [RE] line 469, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
62/75 ... [RE] line 485, (daoPOLSKAtokens, refundTRA, []) ... unproven
63/75 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
64/75 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
65/75 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
66/75 ... [TX_ORG] line 351, assume((migrationAgent == msg.sender)); ... proven
67/75 ... [TX_ORG] line 352, assume((Chain2 == msg.sender)); ... proven
68/75 ... [TX_ORG] line 353, assume((msg.sender != owner)); ... proven
69/75 ... [TX_ORG] line 369, assume((msg.sender != owner)); ... proven
70/75 ... [TX_ORG] line 427, assume((msg.sender == owner)); ... proven
71/75 ... [TX_ORG] line 439, assume((msg.sender != owner)); ... proven
72/75 ... [TX_ORG] line 444, assume((msg.sender != owner)); ... proven
73/75 ... [TX_ORG] line 449, assume((msg.sender != owner)); ... proven
74/75 ... [TX_ORG] line 453, assume((msg.sender != migrationMaster)); ... proven
75/75 ... [TX_ORG] line 465, assume((msg.sender == owner)); ... proven
took 5.825352s

Generating VCs ... took 0.035533s
Checking validity of VCs ... took 1.446647s

Generating VCs ... took 0.03394s
Checking validity of VCs ... took 1.456845s

Iter : 10 To explore : 3001 Explored : 10002 Total elapsed : 64.878792
Generating VCs ... took 0.033703s
Checking validity of VCs ... took 1.449365s

Generating VCs ... took 0.036591s
Checking validity of VCs ... took 1.436102s

Generating VCs ... took 0.034662s
Checking validity of VCs ... took 1.459829s

Generating VCs ... took 0.036583s
Checking validity of VCs ... took 1.458743s

Generating VCs ... took 0.034147s
Checking validity of VCs ... took 1.465622s

Generating VCs ... took 0.039422s
Checking validity of VCs ... took 1.48807s

Generating VCs ... took 0.036238s
Checking validity of VCs ... took 1.40738s

Generating VCs ... took 0.039046s
Checking validity of VCs ... took 1.393582s

Generating VCs ... took 0.035169s
Checking validity of VCs ... took 1.421437s

Generating VCs ... took 0.036634s
Checking validity of VCs ... took 1.422045s

Iter : 20 To explore : 11972 Explored : 18983 Total elapsed : 88.872061
Generating VCs ... took 0.039139s
Checking validity of VCs ... took 1.439354s

Generating VCs ... took 0.035605s
Checking validity of VCs ... took 1.467165s

Generating VCs ... took 0.040948s
Checking validity of VCs ... took 1.426418s

Generating VCs ... took 0.034128s
Checking validity of VCs ... took 1.426949s

Generating VCs ... took 0.034464s
Checking validity of VCs ... took 1.470882s

Generating VCs ... took 0.034632s
Checking validity of VCs ... took 1.419104s

Generating VCs ... took 0.033884s
Checking validity of VCs ... took 1.441022s

Generating VCs ... took 0.034822s
Checking validity of VCs ... took 1.454706s

Generating VCs ... took 0.035146s
Checking validity of VCs ... took 1.426045s

Generating VCs ... took 0.034539s
Checking validity of VCs ... took 1.46021s

Iter : 30 To explore : 21117 Explored : 28138 Total elapsed : 115.844594
Generating VCs ... took 0.034561s
Checking validity of VCs ... took 1.463494s

Generating VCs ... took 0.038465s
Checking validity of VCs ... took 1.450666s

Generating VCs ... took 0.038379s
Checking validity of VCs ... took 1.42597s

Generating VCs ... took 0.034481s
Checking validity of VCs ... took 1.47135s

Generating VCs ... took 0.03878s
Checking validity of VCs ... took 1.456591s

Generating VCs ... took 0.034028s
Checking validity of VCs ... took 1.469613s

Generating VCs ... took 0.034432s
Checking validity of VCs ... took 1.456237s

Generating VCs ... took 0.034078s
Checking validity of VCs ... took 1.47503s

Generating VCs ... took 0.035628s
Checking validity of VCs ... took 1.503136s

Generating VCs ... took 0.034534s
Checking validity of VCs ... took 1.440151s

Iter : 40 To explore : 30259 Explored : 37290 Total elapsed : 143.878365
Generating VCs ... took 0.033793s
Checking validity of VCs ... took 1.565992s

Generating VCs ... took 0.035754s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 41 Total elapsed : 169.902491
[
-1 -> (((((((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain2__@518) == true)) /\ (Read(@TU, Chain3__@521) == true)) /\ (Read(@TU, Chain4__@524) == true)) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true)) /\ @Invest_sum >= Σ_u balancesRAW__@565)
0 -> (((((((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain2__@518) == true)) /\ (Read(@TU, Chain3__@521) == true)) /\ (Read(@TU, Chain4__@524) == true)) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true)) /\ @Invest_sum >= Σ_u balancesRAW__@565)
]
[
]
1/75 ... [IO] line 50, (a - b) ... proven
2/75 ... [IO] line 54, (a + b) ... proven
3/75 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/75 ... [IO] line 262, (totalSupply - _value) ... unproven
5/75 ... [IO] line 278, (balances[_from] - _value) ... proven
6/75 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/75 ... [IO] line 280, (totalSupply - _value) ... unproven
8/75 ... [IO] line 289, (balances[_to] + _value) ... proven
9/75 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/75 ... [IO] line 292, (balances[_to] + _value) ... proven
11/75 ... [IO] line 300, (balances[_to] + _value) ... proven
12/75 ... [IO] line 302, (balances[_to] + _value) ... proven
13/75 ... [IO] line 303, (balances[_from] - _value) ... proven
14/75 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/75 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/75 ... [IO] line 377, (numTransfers + 1) ... unproven
17/75 ... [IO] line 396, (supplylimit - totalSupply) ... unproven
18/75 ... [IO] line 407, (msg.value * CreationRate) ... unproven
19/75 ... [IO] line 408, (totalSupply + numTokens) ... unproven
20/75 ... [IO] line 411, (balances[holder] + numTokens) ... unproven
21/75 ... [IO] line 412, (balancesRAW[holder] + numTokensRAW) ... unproven
22/75 ... [IO] line 418, (numTokens * percentOfTotal) ... unproven
23/75 ... [IO] line 420, (totalSupply + additionalTokens) ... unproven
24/75 ... [IO] line 422, (balances[migrationMaster] + additionalTokens) ... unproven
25/75 ... [IO] line 429, (tokenCreationRate + bonusCreationRate) ... unproven
26/75 ... [IO] line 441, (this.balance - SubX) ... unproven
27/75 ... [IO] line 460, (8 * oneweek) ... proven
28/75 ... [IO] line 460, (fundingEndBlock + (8 * oneweek)) ... proven
29/75 ... [IO] line 478, (balances[msg.sender] - _value) ... proven
30/75 ... [IO] line 479, (totalSupply - _value) ... unproven
31/75 ... [IO] line 480, (totalMigrated + _value) ... unproven
32/75 ... [IO] line 494, (totalSupply - DAOPLTokenValue) ... unproven
33/75 ... [ETH_LEAK] line 435, owner.send(this.balance) ... proven
34/75 ... [ETH_LEAK] line 441, owner.send((this.balance - SubX)); ... proven
35/75 ... [ETH_LEAK] line 467, owner.send(this.balance); ... proven
36/75 ... [ETH_LEAK] line 497, msg.sender.transfer(ETHValue); ... proven
37/75 ... [RE_EL] line 435, owner.send(this.balance) ... proven
38/75 ... [RE_EL] line 441, owner.send((this.balance - SubX)); ... proven
39/75 ... [RE_EL] line 467, owner.send(this.balance); ... proven
40/75 ... [RE_EL] line 497, msg.sender.transfer(ETHValue); ... proven
41/75 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... proven
42/75 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... proven
43/75 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
44/75 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
45/75 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
46/75 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
47/75 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
48/75 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
49/75 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
50/75 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... proven
51/75 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... proven
52/75 ... [RE] line 368, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... proven
53/75 ... [RE] line 389, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
54/75 ... [RE] line 426, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... proven
55/75 ... [RE] line 433, (daoPOLSKAtokens, FundsTransfer, []) ... proven
56/75 ... [RE] line 438, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... proven
57/75 ... [RE] line 443, (daoPOLSKAtokens, turnrefund, []) ... proven
58/75 ... [RE] line 448, (daoPOLSKAtokens, fundingState, []) ... proven
59/75 ... [RE] line 452, (daoPOLSKAtokens, turnmigrate, []) ... proven
60/75 ... [RE] line 459, (daoPOLSKAtokens, finalize, []) ... unproven
61/75 ... [RE] line 469, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
62/75 ... [RE] line 485, (daoPOLSKAtokens, refundTRA, []) ... unproven
63/75 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
64/75 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
65/75 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
66/75 ... [TX_ORG] line 351, assume((migrationAgent == msg.sender)); ... proven
67/75 ... [TX_ORG] line 352, assume((Chain2 == msg.sender)); ... proven
68/75 ... [TX_ORG] line 353, assume((msg.sender != owner)); ... proven
69/75 ... [TX_ORG] line 369, assume((msg.sender != owner)); ... proven
70/75 ... [TX_ORG] line 427, assume((msg.sender == owner)); ... proven
71/75 ... [TX_ORG] line 439, assume((msg.sender != owner)); ... proven
72/75 ... [TX_ORG] line 444, assume((msg.sender != owner)); ... proven
73/75 ... [TX_ORG] line 449, assume((msg.sender != owner)); ... proven
74/75 ... [TX_ORG] line 453, assume((msg.sender != migrationMaster)); ... proven
75/75 ... [TX_ORG] line 465, assume((msg.sender == owner)); ... proven
took 30.407541s

Generating VCs ... took 0.008827s
Checking validity of VCs ... 
1/110 ... [NO_EFFECT] line 54, (@pre18 == c) ... unproven
2/110 ... [NO_EFFECT] line 218, (@pre27 == supplylimit) ... unproven
3/110 ... [NO_EFFECT] line 230, (@pre28 == otherchainstotalsupply) ... unproven
4/110 ... [NO_EFFECT] line 261, (@pre30 == balances[msg.sender]) ... unproven
5/110 ... [NO_EFFECT] line 262, (@pre29 == totalSupply) ... unproven
6/110 ... [NO_EFFECT] line 278, (@pre33 == balances[_from]) ... unproven
7/110 ... [NO_EFFECT] line 279, (@pre32 == allowed[_from][msg.sender]) ... unproven
8/110 ... [NO_EFFECT] line 280, (@pre31 == totalSupply) ... unproven
9/110 ... [NO_EFFECT] line 291, (@pre35 == balances[msg.sender]) ... unproven
10/110 ... [NO_EFFECT] line 292, (@pre34 == balances[_to]) ... unproven
11/110 ... [NO_EFFECT] line 302, (@pre38 == balances[_to]) ... unproven
12/110 ... [NO_EFFECT] line 303, (@pre37 == balances[_from]) ... unproven
13/110 ... [NO_EFFECT] line 304, (@pre36 == allowed[_from][msg.sender]) ... unproven
14/110 ... [NO_EFFECT] line 311, (@pre39 == balance) ... unproven
15/110 ... [NO_EFFECT] line 315, (@pre40 == allowed[msg.sender][_spender]) ... unproven
16/110 ... [NO_EFFECT] line 321, (@pre41 == remaining) ... unproven
17/110 ... [NO_EFFECT] line 329, (@pre42 == balances[msg.sender]) ... unproven
18/110 ... [NO_EFFECT] line 356, (@pre46 == Chain1) ... unproven
19/110 ... [NO_EFFECT] line 357, (@pre45 == Chain2) ... unproven
20/110 ... [NO_EFFECT] line 358, (@pre44 == Chain3) ... unproven
21/110 ... [NO_EFFECT] line 359, (@pre43 == Chain4) ... unproven
22/110 ... [NO_EFFECT] line 374, (@pre49 == t.amount) ... unproven
23/110 ... [NO_EFFECT] line 375, (@pre48 == t.recipient) ... unproven
24/110 ... [NO_EFFECT] line 377, (@pre47 == numTransfers) ... unproven
25/110 ... [NO_EFFECT] line 405, (@pre57 == numTokensRAW) ... unproven
26/110 ... [NO_EFFECT] line 407, (@pre56 == numTokens) ... unproven
27/110 ... [NO_EFFECT] line 408, (@pre55 == totalSupply) ... unproven
28/110 ... [NO_EFFECT] line 411, (@pre54 == balances[holder]) ... unproven
29/110 ... [NO_EFFECT] line 412, (@pre53 == balancesRAW[holder]) ... unproven
30/110 ... [NO_EFFECT] line 418, (@pre52 == additionalTokens) ... unproven
31/110 ... [NO_EFFECT] line 420, (@pre51 == totalSupply) ... unproven
32/110 ... [NO_EFFECT] line 422, (@pre50 == balances[migrationMaster]) ... unproven
33/110 ... [NO_EFFECT] line 428, (@pre59 == bonusCreationRate) ... unproven
34/110 ... [NO_EFFECT] line 429, (@pre58 == CreationRate) ... unproven
35/110 ... [NO_EFFECT] line 478, (@pre62 == balances[msg.sender]) ... unproven
36/110 ... [NO_EFFECT] line 479, (@pre61 == totalSupply) ... unproven
37/110 ... [NO_EFFECT] line 480, (@pre60 == totalMigrated) ... unproven
38/110 ... [NO_EFFECT] line 490, (@pre65 == DAOPLTokenValue) ... unproven
39/110 ... [NO_EFFECT] line 491, (@pre64 == ETHValue) ... unproven
40/110 ... [NO_EFFECT] line 494, (@pre63 == totalSupply) ... unproven
41/110 ... [ASSIGN_CONST] line 54, (c == 0) ... unproven
42/110 ... [ASSIGN_CONST] line 261, (balances[msg.sender] == 0) ... unproven
43/110 ... [ASSIGN_CONST] line 262, (totalSupply == 0) ... unproven
44/110 ... [ASSIGN_CONST] line 278, (balances[_from] == 0) ... unproven
45/110 ... [ASSIGN_CONST] line 279, (allowed[_from][msg.sender] == 0) ... unproven
46/110 ... [ASSIGN_CONST] line 280, (totalSupply == 0) ... unproven
47/110 ... [ASSIGN_CONST] line 291, ((!(_to != msg.sender)) || (balances[msg.sender] == 0)) ... unproven
48/110 ... [ASSIGN_CONST] line 292, ((!(_to != msg.sender)) || (balances[_to] == 0)) ... unproven
49/110 ... [ASSIGN_CONST] line 302, ((!(_from != _to)) || (balances[_to] == 0)) ... unproven
50/110 ... [ASSIGN_CONST] line 303, ((!(_from != _to)) || (balances[_from] == 0)) ... unproven
51/110 ... [ASSIGN_CONST] line 304, ((!(_from != _to)) || (allowed[_from][msg.sender] == 0)) ... unproven
52/110 ... [ASSIGN_CONST] line 329, (balances[msg.sender] == 0) ... unproven
53/110 ... [ASSIGN_CONST] line 377, (numTransfers == 0) ... unproven
54/110 ... [ASSIGN_CONST] line 408, ((!(holder != migrationMaster)) || (totalSupply == 0)) ... unproven
55/110 ... [ASSIGN_CONST] line 411, ((!(holder != migrationMaster)) || (balances[holder] == 0)) ... unproven
56/110 ... [ASSIGN_CONST] line 412, ((!(holder != migrationMaster)) || (balancesRAW[holder] == 0)) ... unproven
57/110 ... [ASSIGN_CONST] line 420, ((!(holder != migrationMaster)) || (totalSupply == 0)) ... unproven
58/110 ... [ASSIGN_CONST] line 422, ((!(holder != migrationMaster)) || (balances[migrationMaster] == 0)) ... unproven
59/110 ... [ASSIGN_CONST] line 429, (CreationRate == 0) ... unproven
60/110 ... [ASSIGN_CONST] line 478, (balances[msg.sender] == 0) ... unproven
61/110 ... [ASSIGN_CONST] line 479, (totalSupply == 0) ... unproven
62/110 ... [ASSIGN_CONST] line 480, (totalMigrated == 0) ... unproven
63/110 ... [ASSIGN_CONST] line 494, (totalSupply == 0) ... unproven
64/110 ... [DEAD] line 49, false ... unproven
65/110 ... [DEAD] line 55, false ... unproven
66/110 ... [DEAD] line 108, false ... unproven
67/110 ... [DEAD] line 109, false ... unproven
68/110 ... [DEAD] line 110, false ... unproven
69/110 ... [DEAD] line 210, false ... unproven
70/110 ... [DEAD] line 213, false ... unproven
71/110 ... [DEAD] line 222, false ... unproven
72/110 ... [DEAD] line 225, false ... unproven
73/110 ... [DEAD] line 246, false ... unproven
74/110 ... [DEAD] line 260, false ... unproven
75/110 ... [DEAD] line 263, false ... unproven
76/110 ... [DEAD] line 276, false ... unproven
77/110 ... [DEAD] line 277, false ... unproven
78/110 ... [DEAD] line 281, false ... unproven
79/110 ... [DEAD] line 293, false ... unproven
80/110 ... [DEAD] line 305, false ... unproven
81/110 ... [DEAD] line 316, false ... unproven
82/110 ... [DEAD] line 328, false ... unproven
83/110 ... [DEAD] line 340, false ... unproven
84/110 ... [DEAD] line 346, false ... unproven
85/110 ... [DEAD] line 351, false ... unproven
86/110 ... [DEAD] line 352, false ... unproven
87/110 ... [DEAD] line 353, false ... unproven
88/110 ... [DEAD] line 356, false ... unproven
89/110 ... [DEAD] line 357, false ... unproven
90/110 ... [DEAD] line 358, false ... unproven
91/110 ... [DEAD] line 359, false ... unproven
92/110 ... [DEAD] line 369, false ... unproven
93/110 ... [DEAD] line 394, false ... unproven
94/110 ... [DEAD] line 396, false ... unproven
95/110 ... [DEAD] line 414, false ... unproven
96/110 ... [DEAD] line 423, false ... unproven
97/110 ... [DEAD] line 427, false ... unproven
98/110 ... [DEAD] line 434, false ... unproven
99/110 ... [DEAD] line 439, false ... unproven
100/110 ... [DEAD] line 444, false ... unproven
101/110 ... [DEAD] line 449, false ... unproven
102/110 ... [DEAD] line 453, false ... unproven
103/110 ... [DEAD] line 460, false ... unproven
104/110 ... [DEAD] line 465, false ... unproven
105/110 ... [DEAD] line 475, false ... unproven
106/110 ... [DEAD] line 476, false ... unproven
107/110 ... [DEAD] line 482, false ... unproven
108/110 ... [DEAD] line 492, false ... unproven
109/110 ... [DEAD] line 496, false ... unproven
110/110 ... [DEAD] line 497, false ... unproven
took 7.096884s


===== Vulnerability Report =====
[1] [IO] line 50, (a - b) : proven
[2] [IO] line 54, (a + b) : proven
[3] [IO] line 261, (balances[msg.sender] - _value) : proven
[4] [IO] line 262, (totalSupply - _value) : unproven
[5] [IO] line 278, (balances[_from] - _value) : proven
[6] [IO] line 279, (allowed[_from][msg.sender] - _value) : proven
[7] [IO] line 280, (totalSupply - _value) : unproven
[8] [IO] line 289, (balances[_to] + _value) : proven
[9] [IO] line 291, (balances[msg.sender] - _value) : proven
[10] [IO] line 292, (balances[_to] + _value) : proven
[11] [IO] line 300, (balances[_to] + _value) : proven
[12] [IO] line 302, (balances[_to] + _value) : proven
[13] [IO] line 303, (balances[_from] - _value) : proven
[14] [IO] line 304, (allowed[_from][msg.sender] - _value) : proven
[15] [IO] line 329, (balances[msg.sender] + msg.value) : unproven
[16] [IO] line 377, (numTransfers + 1) : unproven
[17] [IO] line 396, (supplylimit - totalSupply) : unproven
[18] [IO] line 407, (msg.value * CreationRate) : unproven
[19] [IO] line 408, (totalSupply + numTokens) : unproven
[20] [IO] line 411, (balances[holder] + numTokens) : unproven
[21] [IO] line 412, (balancesRAW[holder] + numTokensRAW) : unproven
[22] [IO] line 418, (numTokens * percentOfTotal) : unproven
[23] [IO] line 420, (totalSupply + additionalTokens) : unproven
[24] [IO] line 422, (balances[migrationMaster] + additionalTokens) : unproven
[25] [IO] line 429, (tokenCreationRate + bonusCreationRate) : unproven
[26] [IO] line 441, (this.balance - SubX) : unproven
[27] [IO] line 460, (8 * oneweek) : proven
[28] [IO] line 460, (fundingEndBlock + (8 * oneweek)) : proven
[29] [IO] line 478, (balances[msg.sender] - _value) : proven
[30] [IO] line 479, (totalSupply - _value) : unproven
[31] [IO] line 480, (totalMigrated + _value) : unproven
[32] [IO] line 494, (totalSupply - DAOPLTokenValue) : unproven
[33] [ETH_LEAK] line 435, owner.send(this.balance) : proven
[34] [ETH_LEAK] line 441, owner.send((this.balance - SubX)); : proven
[35] [ETH_LEAK] line 467, owner.send(this.balance); : proven
[36] [ETH_LEAK] line 497, msg.sender.transfer(ETHValue); : proven
[37] [RE_EL] line 435, owner.send(this.balance) : proven
[38] [RE_EL] line 441, owner.send((this.balance - SubX)); : proven
[39] [RE_EL] line 467, owner.send(this.balance); : proven
[40] [RE_EL] line 497, msg.sender.transfer(ETHValue); : proven
[41] [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) : proven
[42] [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) : proven
[43] [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) : unproven
[44] [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) : unproven
[45] [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) : unproven
[46] [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) : unproven
[47] [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) : unproven
[48] [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) : unproven
[49] [RE] line 326, (daoPOLSKAtokens, @fallback, []) : unproven
[50] [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) : proven
[51] [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) : proven
[52] [RE] line 368, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) : proven
[53] [RE] line 389, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) : unproven
[54] [RE] line 426, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) : proven
[55] [RE] line 433, (daoPOLSKAtokens, FundsTransfer, []) : proven
[56] [RE] line 438, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) : proven
[57] [RE] line 443, (daoPOLSKAtokens, turnrefund, []) : proven
[58] [RE] line 448, (daoPOLSKAtokens, fundingState, []) : proven
[59] [RE] line 452, (daoPOLSKAtokens, turnmigrate, []) : proven
[60] [RE] line 459, (daoPOLSKAtokens, finalize, []) : unproven
[61] [RE] line 469, (daoPOLSKAtokens, migrate, [uint256]) : unproven
[62] [RE] line 485, (daoPOLSKAtokens, refundTRA, []) : unproven
[63] [TX_ORG] line 210, assume((msg.sender != owner)); : proven
[64] [TX_ORG] line 222, assume((msg.sender != owner)); : proven
[65] [TX_ORG] line 340, assume((msg.sender != owner)); : proven
[66] [TX_ORG] line 351, assume((migrationAgent == msg.sender)); : proven
[67] [TX_ORG] line 352, assume((Chain2 == msg.sender)); : proven
[68] [TX_ORG] line 353, assume((msg.sender != owner)); : proven
[69] [TX_ORG] line 369, assume((msg.sender != owner)); : proven
[70] [TX_ORG] line 427, assume((msg.sender == owner)); : proven
[71] [TX_ORG] line 439, assume((msg.sender != owner)); : proven
[72] [TX_ORG] line 444, assume((msg.sender != owner)); : proven
[73] [TX_ORG] line 449, assume((msg.sender != owner)); : proven
[74] [TX_ORG] line 453, assume((msg.sender != migrationMaster)); : proven
[75] [TX_ORG] line 465, assume((msg.sender == owner)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 54, (@pre18 == c) : unproven
[2] [NO_EFFECT] line 218, (@pre27 == supplylimit) : unproven
[3] [NO_EFFECT] line 230, (@pre28 == otherchainstotalsupply) : unproven
[4] [NO_EFFECT] line 261, (@pre30 == balances[msg.sender]) : unproven
[5] [NO_EFFECT] line 262, (@pre29 == totalSupply) : unproven
[6] [NO_EFFECT] line 278, (@pre33 == balances[_from]) : unproven
[7] [NO_EFFECT] line 279, (@pre32 == allowed[_from][msg.sender]) : unproven
[8] [NO_EFFECT] line 280, (@pre31 == totalSupply) : unproven
[9] [NO_EFFECT] line 291, (@pre35 == balances[msg.sender]) : unproven
[10] [NO_EFFECT] line 292, (@pre34 == balances[_to]) : unproven
[11] [NO_EFFECT] line 302, (@pre38 == balances[_to]) : unproven
[12] [NO_EFFECT] line 303, (@pre37 == balances[_from]) : unproven
[13] [NO_EFFECT] line 304, (@pre36 == allowed[_from][msg.sender]) : unproven
[14] [NO_EFFECT] line 311, (@pre39 == balance) : unproven
[15] [NO_EFFECT] line 315, (@pre40 == allowed[msg.sender][_spender]) : unproven
[16] [NO_EFFECT] line 321, (@pre41 == remaining) : unproven
[17] [NO_EFFECT] line 329, (@pre42 == balances[msg.sender]) : unproven
[18] [NO_EFFECT] line 356, (@pre46 == Chain1) : unproven
[19] [NO_EFFECT] line 357, (@pre45 == Chain2) : unproven
[20] [NO_EFFECT] line 358, (@pre44 == Chain3) : unproven
[21] [NO_EFFECT] line 359, (@pre43 == Chain4) : unproven
[22] [NO_EFFECT] line 374, (@pre49 == t.amount) : unproven
[23] [NO_EFFECT] line 375, (@pre48 == t.recipient) : unproven
[24] [NO_EFFECT] line 377, (@pre47 == numTransfers) : unproven
[25] [NO_EFFECT] line 405, (@pre57 == numTokensRAW) : unproven
[26] [NO_EFFECT] line 407, (@pre56 == numTokens) : unproven
[27] [NO_EFFECT] line 408, (@pre55 == totalSupply) : unproven
[28] [NO_EFFECT] line 411, (@pre54 == balances[holder]) : unproven
[29] [NO_EFFECT] line 412, (@pre53 == balancesRAW[holder]) : unproven
[30] [NO_EFFECT] line 418, (@pre52 == additionalTokens) : unproven
[31] [NO_EFFECT] line 420, (@pre51 == totalSupply) : unproven
[32] [NO_EFFECT] line 422, (@pre50 == balances[migrationMaster]) : unproven
[33] [NO_EFFECT] line 428, (@pre59 == bonusCreationRate) : unproven
[34] [NO_EFFECT] line 429, (@pre58 == CreationRate) : unproven
[35] [NO_EFFECT] line 478, (@pre62 == balances[msg.sender]) : unproven
[36] [NO_EFFECT] line 479, (@pre61 == totalSupply) : unproven
[37] [NO_EFFECT] line 480, (@pre60 == totalMigrated) : unproven
[38] [NO_EFFECT] line 490, (@pre65 == DAOPLTokenValue) : unproven
[39] [NO_EFFECT] line 491, (@pre64 == ETHValue) : unproven
[40] [NO_EFFECT] line 494, (@pre63 == totalSupply) : unproven
[41] [ASSIGN_CONST] line 54, (c == 0) : unproven
[42] [ASSIGN_CONST] line 261, (balances[msg.sender] == 0) : unproven
[43] [ASSIGN_CONST] line 262, (totalSupply == 0) : unproven
[44] [ASSIGN_CONST] line 278, (balances[_from] == 0) : unproven
[45] [ASSIGN_CONST] line 279, (allowed[_from][msg.sender] == 0) : unproven
[46] [ASSIGN_CONST] line 280, (totalSupply == 0) : unproven
[47] [ASSIGN_CONST] line 291, ((!(_to != msg.sender)) || (balances[msg.sender] == 0)) : unproven
[48] [ASSIGN_CONST] line 292, ((!(_to != msg.sender)) || (balances[_to] == 0)) : unproven
[49] [ASSIGN_CONST] line 302, ((!(_from != _to)) || (balances[_to] == 0)) : unproven
[50] [ASSIGN_CONST] line 303, ((!(_from != _to)) || (balances[_from] == 0)) : unproven
[51] [ASSIGN_CONST] line 304, ((!(_from != _to)) || (allowed[_from][msg.sender] == 0)) : unproven
[52] [ASSIGN_CONST] line 329, (balances[msg.sender] == 0) : unproven
[53] [ASSIGN_CONST] line 377, (numTransfers == 0) : unproven
[54] [ASSIGN_CONST] line 408, ((!(holder != migrationMaster)) || (totalSupply == 0)) : unproven
[55] [ASSIGN_CONST] line 411, ((!(holder != migrationMaster)) || (balances[holder] == 0)) : unproven
[56] [ASSIGN_CONST] line 412, ((!(holder != migrationMaster)) || (balancesRAW[holder] == 0)) : unproven
[57] [ASSIGN_CONST] line 420, ((!(holder != migrationMaster)) || (totalSupply == 0)) : unproven
[58] [ASSIGN_CONST] line 422, ((!(holder != migrationMaster)) || (balances[migrationMaster] == 0)) : unproven
[59] [ASSIGN_CONST] line 429, (CreationRate == 0) : unproven
[60] [ASSIGN_CONST] line 478, (balances[msg.sender] == 0) : unproven
[61] [ASSIGN_CONST] line 479, (totalSupply == 0) : unproven
[62] [ASSIGN_CONST] line 480, (totalMigrated == 0) : unproven
[63] [ASSIGN_CONST] line 494, (totalSupply == 0) : unproven
[64] [DEAD] line 49, false : unproven
[65] [DEAD] line 55, false : unproven
[66] [DEAD] line 108, false : unproven
[67] [DEAD] line 109, false : unproven
[68] [DEAD] line 110, false : unproven
[69] [DEAD] line 210, false : unproven
[70] [DEAD] line 213, false : unproven
[71] [DEAD] line 222, false : unproven
[72] [DEAD] line 225, false : unproven
[73] [DEAD] line 246, false : unproven
[74] [DEAD] line 260, false : unproven
[75] [DEAD] line 263, false : unproven
[76] [DEAD] line 276, false : unproven
[77] [DEAD] line 277, false : unproven
[78] [DEAD] line 281, false : unproven
[79] [DEAD] line 293, false : unproven
[80] [DEAD] line 305, false : unproven
[81] [DEAD] line 316, false : unproven
[82] [DEAD] line 328, false : unproven
[83] [DEAD] line 340, false : unproven
[84] [DEAD] line 346, false : unproven
[85] [DEAD] line 351, false : unproven
[86] [DEAD] line 352, false : unproven
[87] [DEAD] line 353, false : unproven
[88] [DEAD] line 356, false : unproven
[89] [DEAD] line 357, false : unproven
[90] [DEAD] line 358, false : unproven
[91] [DEAD] line 359, false : unproven
[92] [DEAD] line 369, false : unproven
[93] [DEAD] line 394, false : unproven
[94] [DEAD] line 396, false : unproven
[95] [DEAD] line 414, false : unproven
[96] [DEAD] line 423, false : unproven
[97] [DEAD] line 427, false : unproven
[98] [DEAD] line 434, false : unproven
[99] [DEAD] line 439, false : unproven
[100] [DEAD] line 444, false : unproven
[101] [DEAD] line 449, false : unproven
[102] [DEAD] line 453, false : unproven
[103] [DEAD] line 460, false : unproven
[104] [DEAD] line 465, false : unproven
[105] [DEAD] line 475, false : unproven
[106] [DEAD] line 476, false : unproven
[107] [DEAD] line 482, false : unproven
[108] [DEAD] line 492, false : unproven
[109] [DEAD] line 496, false : unproven
[110] [DEAD] line 497, false : unproven

============ Statistics ============
# Iter                    : 41
# Alarm / Query           : 28 / 75
- integer over/underflow  : 17 / 32
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 4
- reentrancy-leaking      : 0 / 4
- reentrancy              : 11 / 22
- tx.origin               : 0 / 13

Time Elapsed (Real) : 246.24697113
Time Elapsed (CPU)  : 246.334042
