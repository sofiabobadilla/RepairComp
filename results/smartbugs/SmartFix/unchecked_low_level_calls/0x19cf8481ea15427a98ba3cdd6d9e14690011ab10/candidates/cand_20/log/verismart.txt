[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 94
[INFO] reachable : 51
[INFO] Generating Paths ... took 0.000902s
[INFO] # path : 126

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.004936s
Generating VCs ... took 0.031567s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.147175
[
-1 -> true
0 -> true
]
[
]
1/74 ... [IO] line 50, (a - b) ... proven
2/74 ... [IO] line 54, (a + b) ... proven
3/74 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/74 ... [IO] line 262, (totalSupply - _value) ... unproven
5/74 ... [IO] line 278, (balances[_from] - _value) ... proven
6/74 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/74 ... [IO] line 280, (totalSupply - _value) ... unproven
8/74 ... [IO] line 289, (balances[_to] + _value) ... 
Warning : conditional safety checking

Warning : conditional safety checking
proven
9/74 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/74 ... [IO] line 292, (balances[_to] + _value) ... proven
11/74 ... [IO] line 300, (balances[_to] + _value) ... 
Warning : conditional safety checking

Warning : conditional safety checking
proven
12/74 ... [IO] line 302, (balances[_to] + _value) ... proven
13/74 ... [IO] line 303, (balances[_from] - _value) ... proven
14/74 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/74 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/74 ... [IO] line 375, (numTransfers + 1) ... unproven
17/74 ... [IO] line 394, (supplylimit - totalSupply) ... unproven
18/74 ... [IO] line 405, (msg.value * CreationRate) ... unproven
19/74 ... [IO] line 406, (totalSupply + numTokens) ... unproven
20/74 ... [IO] line 409, (balances[holder] + numTokens) ... unproven
21/74 ... [IO] line 410, (balancesRAW[holder] + numTokensRAW) ... unproven
22/74 ... [IO] line 416, (numTokens * percentOfTotal) ... unproven
23/74 ... [IO] line 418, (totalSupply + additionalTokens) ... unproven
24/74 ... [IO] line 420, (balances[migrationMaster] + additionalTokens) ... unproven
25/74 ... [IO] line 427, (tokenCreationRate + bonusCreationRate) ... proven
26/74 ... [IO] line 428, (tokenCreationRate + bonusCreationRate) ... proven
27/74 ... [IO] line 440, (this.balance - SubX) ... unproven
28/74 ... [IO] line 459, (8 * oneweek) ... proven
29/74 ... [IO] line 459, (fundingEndBlock + (8 * oneweek)) ... proven
30/74 ... [IO] line 477, (balances[msg.sender] - _value) ... proven
31/74 ... [IO] line 478, (totalSupply - _value) ... unproven
32/74 ... [IO] line 479, (totalMigrated + _value) ... unproven
33/74 ... [IO] line 493, (totalSupply - DAOPLTokenValue) ... unproven
34/74 ... [ETH_LEAK] line 434, owner.send(this.balance) ... unproven
35/74 ... [ETH_LEAK] line 440, owner.send((this.balance - SubX)); ... unproven
36/74 ... [ETH_LEAK] line 466, owner.send(this.balance); ... unproven
37/74 ... [ETH_LEAK] line 496, msg.sender.transfer(ETHValue); ... unproven
38/74 ... [RE_EL] line 434, owner.send(this.balance) ... unproven
39/74 ... [RE_EL] line 440, owner.send((this.balance - SubX)); ... unproven
40/74 ... [RE_EL] line 466, owner.send(this.balance); ... unproven
41/74 ... [RE_EL] line 496, msg.sender.transfer(ETHValue); ... unproven
42/74 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... unproven
43/74 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... unproven
44/74 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
45/74 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
46/74 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
47/74 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
48/74 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
49/74 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
50/74 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
51/74 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... unproven
52/74 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... unproven
53/74 ... [RE] line 366, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... unproven
54/74 ... [RE] line 387, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
55/74 ... [RE] line 424, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... unproven
56/74 ... [RE] line 432, (daoPOLSKAtokens, FundsTransfer, []) ... unproven
57/74 ... [RE] line 437, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... unproven
58/74 ... [RE] line 442, (daoPOLSKAtokens, turnrefund, []) ... unproven
59/74 ... [RE] line 447, (daoPOLSKAtokens, fundingState, []) ... unproven
60/74 ... [RE] line 451, (daoPOLSKAtokens, turnmigrate, []) ... unproven
61/74 ... [RE] line 458, (daoPOLSKAtokens, finalize, []) ... unproven
62/74 ... [RE] line 468, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
63/74 ... [RE] line 484, (daoPOLSKAtokens, refundTRA, []) ... unproven
64/74 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
65/74 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
66/74 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
67/74 ... [TX_ORG] line 351, assume((msg.sender != owner)); ... proven
68/74 ... [TX_ORG] line 367, assume((msg.sender != owner)); ... proven
69/74 ... [TX_ORG] line 425, assume((msg.sender == owner)); ... proven
70/74 ... [TX_ORG] line 438, assume((msg.sender != owner)); ... proven
71/74 ... [TX_ORG] line 443, assume((msg.sender != owner)); ... proven
72/74 ... [TX_ORG] line 448, assume((msg.sender != owner)); ... proven
73/74 ... [TX_ORG] line 452, assume((msg.sender != migrationMaster)); ... proven
74/74 ... [TX_ORG] line 464, assume((msg.sender == owner)); ... proven
took 6.091967s

Generating VCs ... took 0.033961s
Checking validity of VCs ... took 0.173155s

Generating VCs ... took 0.034624s
Checking validity of VCs ... took 0.171898s

Generating VCs ... took 0.033522s
Checking validity of VCs ... took 0.16821s

Generating VCs ... took 0.033631s
Checking validity of VCs ... took 0.170224s

Generating VCs ... took 0.031737s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 6 Total elapsed : 11.260311
[
-1 -> (Read(@TU, migrationMaster__@503) == true)
0 -> (Read(@TU, migrationMaster__@503) == true)
]
[
]
1/74 ... [IO] line 50, (a - b) ... proven
2/74 ... [IO] line 54, (a + b) ... proven
3/74 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/74 ... [IO] line 262, (totalSupply - _value) ... unproven
5/74 ... [IO] line 278, (balances[_from] - _value) ... proven
6/74 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/74 ... [IO] line 280, (totalSupply - _value) ... unproven
8/74 ... [IO] line 289, (balances[_to] + _value) ... proven
9/74 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/74 ... [IO] line 292, (balances[_to] + _value) ... proven
11/74 ... [IO] line 300, (balances[_to] + _value) ... proven
12/74 ... [IO] line 302, (balances[_to] + _value) ... proven
13/74 ... [IO] line 303, (balances[_from] - _value) ... proven
14/74 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/74 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/74 ... [IO] line 375, (numTransfers + 1) ... unproven
17/74 ... [IO] line 394, (supplylimit - totalSupply) ... unproven
18/74 ... [IO] line 405, (msg.value * CreationRate) ... unproven
19/74 ... [IO] line 406, (totalSupply + numTokens) ... unproven
20/74 ... [IO] line 409, (balances[holder] + numTokens) ... unproven
21/74 ... [IO] line 410, (balancesRAW[holder] + numTokensRAW) ... unproven
22/74 ... [IO] line 416, (numTokens * percentOfTotal) ... unproven
23/74 ... [IO] line 418, (totalSupply + additionalTokens) ... unproven
24/74 ... [IO] line 420, (balances[migrationMaster] + additionalTokens) ... unproven
25/74 ... [IO] line 427, (tokenCreationRate + bonusCreationRate) ... proven
26/74 ... [IO] line 428, (tokenCreationRate + bonusCreationRate) ... proven
27/74 ... [IO] line 440, (this.balance - SubX) ... unproven
28/74 ... [IO] line 459, (8 * oneweek) ... proven
29/74 ... [IO] line 459, (fundingEndBlock + (8 * oneweek)) ... proven
30/74 ... [IO] line 477, (balances[msg.sender] - _value) ... proven
31/74 ... [IO] line 478, (totalSupply - _value) ... unproven
32/74 ... [IO] line 479, (totalMigrated + _value) ... unproven
33/74 ... [IO] line 493, (totalSupply - DAOPLTokenValue) ... unproven
34/74 ... [ETH_LEAK] line 434, owner.send(this.balance) ... unproven
35/74 ... [ETH_LEAK] line 440, owner.send((this.balance - SubX)); ... unproven
36/74 ... [ETH_LEAK] line 466, owner.send(this.balance); ... unproven
37/74 ... [ETH_LEAK] line 496, msg.sender.transfer(ETHValue); ... unproven
38/74 ... [RE_EL] line 434, owner.send(this.balance) ... unproven
39/74 ... [RE_EL] line 440, owner.send((this.balance - SubX)); ... unproven
40/74 ... [RE_EL] line 466, owner.send(this.balance); ... unproven
41/74 ... [RE_EL] line 496, msg.sender.transfer(ETHValue); ... unproven
42/74 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... unproven
43/74 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... unproven
44/74 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
45/74 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
46/74 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
47/74 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
48/74 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
49/74 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
50/74 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
51/74 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... unproven
52/74 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... unproven
53/74 ... [RE] line 366, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... unproven
54/74 ... [RE] line 387, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
55/74 ... [RE] line 424, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... unproven
56/74 ... [RE] line 432, (daoPOLSKAtokens, FundsTransfer, []) ... unproven
57/74 ... [RE] line 437, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... unproven
58/74 ... [RE] line 442, (daoPOLSKAtokens, turnrefund, []) ... unproven
59/74 ... [RE] line 447, (daoPOLSKAtokens, fundingState, []) ... unproven
60/74 ... [RE] line 451, (daoPOLSKAtokens, turnmigrate, []) ... proven
61/74 ... [RE] line 458, (daoPOLSKAtokens, finalize, []) ... unproven
62/74 ... [RE] line 468, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
63/74 ... [RE] line 484, (daoPOLSKAtokens, refundTRA, []) ... unproven
64/74 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
65/74 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
66/74 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
67/74 ... [TX_ORG] line 351, assume((msg.sender != owner)); ... proven
68/74 ... [TX_ORG] line 367, assume((msg.sender != owner)); ... proven
69/74 ... [TX_ORG] line 425, assume((msg.sender == owner)); ... proven
70/74 ... [TX_ORG] line 438, assume((msg.sender != owner)); ... proven
71/74 ... [TX_ORG] line 443, assume((msg.sender != owner)); ... proven
72/74 ... [TX_ORG] line 448, assume((msg.sender != owner)); ... proven
73/74 ... [TX_ORG] line 452, assume((msg.sender != migrationMaster)); ... proven
74/74 ... [TX_ORG] line 464, assume((msg.sender == owner)); ... proven
took 5.212124s

Generating VCs ... took 0.031591s
Checking validity of VCs ... took 1.280771s

Generating VCs ... took 0.032966s
Checking validity of VCs ... took 1.289046s

Generating VCs ... took 0.032761s
Checking validity of VCs ... took 1.27826s

Iter : 10 To explore : 5927 Explored : 11846 Total elapsed : 26.451207
Generating VCs ... took 0.033083s
Checking validity of VCs ... took 1.301006s

Generating VCs ... took 0.033149s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 11 Total elapsed : 29.373038
[
-1 -> ((Read(@TU, migrationMaster__@503) == true) /\ (Read(@TU, owner__@501) == true))
0 -> ((Read(@TU, migrationMaster__@503) == true) /\ (Read(@TU, owner__@501) == true))
]
[
]
1/74 ... [IO] line 50, (a - b) ... proven
2/74 ... [IO] line 54, (a + b) ... proven
3/74 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/74 ... [IO] line 262, (totalSupply - _value) ... unproven
5/74 ... [IO] line 278, (balances[_from] - _value) ... proven
6/74 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/74 ... [IO] line 280, (totalSupply - _value) ... unproven
8/74 ... [IO] line 289, (balances[_to] + _value) ... proven
9/74 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/74 ... [IO] line 292, (balances[_to] + _value) ... proven
11/74 ... [IO] line 300, (balances[_to] + _value) ... proven
12/74 ... [IO] line 302, (balances[_to] + _value) ... proven
13/74 ... [IO] line 303, (balances[_from] - _value) ... proven
14/74 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/74 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/74 ... [IO] line 375, (numTransfers + 1) ... unproven
17/74 ... [IO] line 394, (supplylimit - totalSupply) ... unproven
18/74 ... [IO] line 405, (msg.value * CreationRate) ... unproven
19/74 ... [IO] line 406, (totalSupply + numTokens) ... unproven
20/74 ... [IO] line 409, (balances[holder] + numTokens) ... unproven
21/74 ... [IO] line 410, (balancesRAW[holder] + numTokensRAW) ... unproven
22/74 ... [IO] line 416, (numTokens * percentOfTotal) ... unproven
23/74 ... [IO] line 418, (totalSupply + additionalTokens) ... unproven
24/74 ... [IO] line 420, (balances[migrationMaster] + additionalTokens) ... unproven
25/74 ... [IO] line 427, (tokenCreationRate + bonusCreationRate) ... proven
26/74 ... [IO] line 428, (tokenCreationRate + bonusCreationRate) ... proven
27/74 ... [IO] line 440, (this.balance - SubX) ... unproven
28/74 ... [IO] line 459, (8 * oneweek) ... proven
29/74 ... [IO] line 459, (fundingEndBlock + (8 * oneweek)) ... proven
30/74 ... [IO] line 477, (balances[msg.sender] - _value) ... proven
31/74 ... [IO] line 478, (totalSupply - _value) ... unproven
32/74 ... [IO] line 479, (totalMigrated + _value) ... unproven
33/74 ... [IO] line 493, (totalSupply - DAOPLTokenValue) ... unproven
34/74 ... [ETH_LEAK] line 434, owner.send(this.balance) ... proven
35/74 ... [ETH_LEAK] line 440, owner.send((this.balance - SubX)); ... proven
36/74 ... [ETH_LEAK] line 466, owner.send(this.balance); ... proven
37/74 ... [ETH_LEAK] line 496, msg.sender.transfer(ETHValue); ... unproven
38/74 ... [RE_EL] line 434, owner.send(this.balance) ... proven
39/74 ... [RE_EL] line 440, owner.send((this.balance - SubX)); ... proven
40/74 ... [RE_EL] line 466, owner.send(this.balance); ... proven
41/74 ... [RE_EL] line 496, msg.sender.transfer(ETHValue); ... unproven
42/74 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... proven
43/74 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... proven
44/74 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
45/74 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
46/74 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
47/74 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
48/74 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
49/74 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
50/74 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
51/74 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... proven
52/74 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... proven
53/74 ... [RE] line 366, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... proven
54/74 ... [RE] line 387, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
55/74 ... [RE] line 424, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... proven
56/74 ... [RE] line 432, (daoPOLSKAtokens, FundsTransfer, []) ... proven
57/74 ... [RE] line 437, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... proven
58/74 ... [RE] line 442, (daoPOLSKAtokens, turnrefund, []) ... proven
59/74 ... [RE] line 447, (daoPOLSKAtokens, fundingState, []) ... proven
60/74 ... [RE] line 451, (daoPOLSKAtokens, turnmigrate, []) ... proven
61/74 ... [RE] line 458, (daoPOLSKAtokens, finalize, []) ... unproven
62/74 ... [RE] line 468, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
63/74 ... [RE] line 484, (daoPOLSKAtokens, refundTRA, []) ... unproven
64/74 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
65/74 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
66/74 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
67/74 ... [TX_ORG] line 351, assume((msg.sender != owner)); ... proven
68/74 ... [TX_ORG] line 367, assume((msg.sender != owner)); ... proven
69/74 ... [TX_ORG] line 425, assume((msg.sender == owner)); ... proven
70/74 ... [TX_ORG] line 438, assume((msg.sender != owner)); ... proven
71/74 ... [TX_ORG] line 443, assume((msg.sender != owner)); ... proven
72/74 ... [TX_ORG] line 448, assume((msg.sender != owner)); ... proven
73/74 ... [TX_ORG] line 452, assume((msg.sender != migrationMaster)); ... proven
74/74 ... [TX_ORG] line 464, assume((msg.sender == owner)); ... proven
took 6.133167s

Generating VCs ... took 0.03189s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 12 Total elapsed : 39.185431
[
-1 -> (((Read(@TU, Chain4__@524) == true) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true))
0 -> (((Read(@TU, Chain4__@524) == true) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true))
]
[
]
1/74 ... [IO] line 50, (a - b) ... proven
2/74 ... [IO] line 54, (a + b) ... proven
3/74 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/74 ... [IO] line 262, (totalSupply - _value) ... unproven
5/74 ... [IO] line 278, (balances[_from] - _value) ... proven
6/74 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/74 ... [IO] line 280, (totalSupply - _value) ... unproven
8/74 ... [IO] line 289, (balances[_to] + _value) ... proven
9/74 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/74 ... [IO] line 292, (balances[_to] + _value) ... proven
11/74 ... [IO] line 300, (balances[_to] + _value) ... proven
12/74 ... [IO] line 302, (balances[_to] + _value) ... proven
13/74 ... [IO] line 303, (balances[_from] - _value) ... proven
14/74 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/74 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/74 ... [IO] line 375, (numTransfers + 1) ... unproven
17/74 ... [IO] line 394, (supplylimit - totalSupply) ... unproven
18/74 ... [IO] line 405, (msg.value * CreationRate) ... unproven
19/74 ... [IO] line 406, (totalSupply + numTokens) ... unproven
20/74 ... [IO] line 409, (balances[holder] + numTokens) ... unproven
21/74 ... [IO] line 410, (balancesRAW[holder] + numTokensRAW) ... unproven
22/74 ... [IO] line 416, (numTokens * percentOfTotal) ... unproven
23/74 ... [IO] line 418, (totalSupply + additionalTokens) ... unproven
24/74 ... [IO] line 420, (balances[migrationMaster] + additionalTokens) ... unproven
25/74 ... [IO] line 427, (tokenCreationRate + bonusCreationRate) ... proven
26/74 ... [IO] line 428, (tokenCreationRate + bonusCreationRate) ... proven
27/74 ... [IO] line 440, (this.balance - SubX) ... unproven
28/74 ... [IO] line 459, (8 * oneweek) ... proven
29/74 ... [IO] line 459, (fundingEndBlock + (8 * oneweek)) ... proven
30/74 ... [IO] line 477, (balances[msg.sender] - _value) ... proven
31/74 ... [IO] line 478, (totalSupply - _value) ... unproven
32/74 ... [IO] line 479, (totalMigrated + _value) ... unproven
33/74 ... [IO] line 493, (totalSupply - DAOPLTokenValue) ... unproven
34/74 ... [ETH_LEAK] line 434, owner.send(this.balance) ... proven
35/74 ... [ETH_LEAK] line 440, owner.send((this.balance - SubX)); ... proven
36/74 ... [ETH_LEAK] line 466, owner.send(this.balance); ... proven
37/74 ... [ETH_LEAK] line 496, msg.sender.transfer(ETHValue); ... unproven
38/74 ... [RE_EL] line 434, owner.send(this.balance) ... proven
39/74 ... [RE_EL] line 440, owner.send((this.balance - SubX)); ... proven
40/74 ... [RE_EL] line 466, owner.send(this.balance); ... proven
41/74 ... [RE_EL] line 496, msg.sender.transfer(ETHValue); ... unproven
42/74 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... proven
43/74 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... proven
44/74 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
45/74 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
46/74 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
47/74 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
48/74 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
49/74 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
50/74 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
51/74 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... proven
52/74 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... proven
53/74 ... [RE] line 366, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... proven
54/74 ... [RE] line 387, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
55/74 ... [RE] line 424, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... proven
56/74 ... [RE] line 432, (daoPOLSKAtokens, FundsTransfer, []) ... proven
57/74 ... [RE] line 437, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... proven
58/74 ... [RE] line 442, (daoPOLSKAtokens, turnrefund, []) ... proven
59/74 ... [RE] line 447, (daoPOLSKAtokens, fundingState, []) ... proven
60/74 ... [RE] line 451, (daoPOLSKAtokens, turnmigrate, []) ... proven
61/74 ... [RE] line 458, (daoPOLSKAtokens, finalize, []) ... unproven
62/74 ... [RE] line 468, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
63/74 ... [RE] line 484, (daoPOLSKAtokens, refundTRA, []) ... unproven
64/74 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
65/74 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
66/74 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
67/74 ... [TX_ORG] line 351, assume((msg.sender != owner)); ... proven
68/74 ... [TX_ORG] line 367, assume((msg.sender != owner)); ... proven
69/74 ... [TX_ORG] line 425, assume((msg.sender == owner)); ... proven
70/74 ... [TX_ORG] line 438, assume((msg.sender != owner)); ... proven
71/74 ... [TX_ORG] line 443, assume((msg.sender != owner)); ... proven
72/74 ... [TX_ORG] line 448, assume((msg.sender != owner)); ... proven
73/74 ... [TX_ORG] line 452, assume((msg.sender != migrationMaster)); ... proven
74/74 ... [TX_ORG] line 464, assume((msg.sender == owner)); ... proven
took 5.606898s

Generating VCs ... took 0.032387s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 13 Total elapsed : 48.76611
[
-1 -> ((((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain4__@524) == true)) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true))
0 -> ((((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain4__@524) == true)) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true))
]
[
]
1/74 ... [IO] line 50, (a - b) ... proven
2/74 ... [IO] line 54, (a + b) ... proven
3/74 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/74 ... [IO] line 262, (totalSupply - _value) ... unproven
5/74 ... [IO] line 278, (balances[_from] - _value) ... proven
6/74 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/74 ... [IO] line 280, (totalSupply - _value) ... unproven
8/74 ... [IO] line 289, (balances[_to] + _value) ... proven
9/74 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/74 ... [IO] line 292, (balances[_to] + _value) ... proven
11/74 ... [IO] line 300, (balances[_to] + _value) ... proven
12/74 ... [IO] line 302, (balances[_to] + _value) ... proven
13/74 ... [IO] line 303, (balances[_from] - _value) ... proven
14/74 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/74 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/74 ... [IO] line 375, (numTransfers + 1) ... unproven
17/74 ... [IO] line 394, (supplylimit - totalSupply) ... unproven
18/74 ... [IO] line 405, (msg.value * CreationRate) ... unproven
19/74 ... [IO] line 406, (totalSupply + numTokens) ... unproven
20/74 ... [IO] line 409, (balances[holder] + numTokens) ... unproven
21/74 ... [IO] line 410, (balancesRAW[holder] + numTokensRAW) ... unproven
22/74 ... [IO] line 416, (numTokens * percentOfTotal) ... unproven
23/74 ... [IO] line 418, (totalSupply + additionalTokens) ... unproven
24/74 ... [IO] line 420, (balances[migrationMaster] + additionalTokens) ... unproven
25/74 ... [IO] line 427, (tokenCreationRate + bonusCreationRate) ... proven
26/74 ... [IO] line 428, (tokenCreationRate + bonusCreationRate) ... proven
27/74 ... [IO] line 440, (this.balance - SubX) ... unproven
28/74 ... [IO] line 459, (8 * oneweek) ... proven
29/74 ... [IO] line 459, (fundingEndBlock + (8 * oneweek)) ... proven
30/74 ... [IO] line 477, (balances[msg.sender] - _value) ... proven
31/74 ... [IO] line 478, (totalSupply - _value) ... unproven
32/74 ... [IO] line 479, (totalMigrated + _value) ... unproven
33/74 ... [IO] line 493, (totalSupply - DAOPLTokenValue) ... unproven
34/74 ... [ETH_LEAK] line 434, owner.send(this.balance) ... proven
35/74 ... [ETH_LEAK] line 440, owner.send((this.balance - SubX)); ... proven
36/74 ... [ETH_LEAK] line 466, owner.send(this.balance); ... proven
37/74 ... [ETH_LEAK] line 496, msg.sender.transfer(ETHValue); ... unproven
38/74 ... [RE_EL] line 434, owner.send(this.balance) ... proven
39/74 ... [RE_EL] line 440, owner.send((this.balance - SubX)); ... proven
40/74 ... [RE_EL] line 466, owner.send(this.balance); ... proven
41/74 ... [RE_EL] line 496, msg.sender.transfer(ETHValue); ... unproven
42/74 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... proven
43/74 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... proven
44/74 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
45/74 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
46/74 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
47/74 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
48/74 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
49/74 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
50/74 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
51/74 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... proven
52/74 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... proven
53/74 ... [RE] line 366, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... proven
54/74 ... [RE] line 387, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
55/74 ... [RE] line 424, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... proven
56/74 ... [RE] line 432, (daoPOLSKAtokens, FundsTransfer, []) ... proven
57/74 ... [RE] line 437, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... proven
58/74 ... [RE] line 442, (daoPOLSKAtokens, turnrefund, []) ... proven
59/74 ... [RE] line 447, (daoPOLSKAtokens, fundingState, []) ... proven
60/74 ... [RE] line 451, (daoPOLSKAtokens, turnmigrate, []) ... proven
61/74 ... [RE] line 458, (daoPOLSKAtokens, finalize, []) ... unproven
62/74 ... [RE] line 468, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
63/74 ... [RE] line 484, (daoPOLSKAtokens, refundTRA, []) ... unproven
64/74 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
65/74 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
66/74 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
67/74 ... [TX_ORG] line 351, assume((msg.sender != owner)); ... proven
68/74 ... [TX_ORG] line 367, assume((msg.sender != owner)); ... proven
69/74 ... [TX_ORG] line 425, assume((msg.sender == owner)); ... proven
70/74 ... [TX_ORG] line 438, assume((msg.sender != owner)); ... proven
71/74 ... [TX_ORG] line 443, assume((msg.sender != owner)); ... proven
72/74 ... [TX_ORG] line 448, assume((msg.sender != owner)); ... proven
73/74 ... [TX_ORG] line 452, assume((msg.sender != migrationMaster)); ... proven
74/74 ... [TX_ORG] line 464, assume((msg.sender == owner)); ... proven
took 5.048175s

Generating VCs ... took 0.032465s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 14 Total elapsed : 57.681701
[
-1 -> (((((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain2__@518) == true)) /\ (Read(@TU, Chain4__@524) == true)) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true))
0 -> (((((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain2__@518) == true)) /\ (Read(@TU, Chain4__@524) == true)) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true))
]
[
]
1/74 ... [IO] line 50, (a - b) ... proven
2/74 ... [IO] line 54, (a + b) ... proven
3/74 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/74 ... [IO] line 262, (totalSupply - _value) ... unproven
5/74 ... [IO] line 278, (balances[_from] - _value) ... proven
6/74 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/74 ... [IO] line 280, (totalSupply - _value) ... unproven
8/74 ... [IO] line 289, (balances[_to] + _value) ... proven
9/74 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/74 ... [IO] line 292, (balances[_to] + _value) ... proven
11/74 ... [IO] line 300, (balances[_to] + _value) ... proven
12/74 ... [IO] line 302, (balances[_to] + _value) ... proven
13/74 ... [IO] line 303, (balances[_from] - _value) ... proven
14/74 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/74 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/74 ... [IO] line 375, (numTransfers + 1) ... unproven
17/74 ... [IO] line 394, (supplylimit - totalSupply) ... unproven
18/74 ... [IO] line 405, (msg.value * CreationRate) ... unproven
19/74 ... [IO] line 406, (totalSupply + numTokens) ... unproven
20/74 ... [IO] line 409, (balances[holder] + numTokens) ... unproven
21/74 ... [IO] line 410, (balancesRAW[holder] + numTokensRAW) ... unproven
22/74 ... [IO] line 416, (numTokens * percentOfTotal) ... unproven
23/74 ... [IO] line 418, (totalSupply + additionalTokens) ... unproven
24/74 ... [IO] line 420, (balances[migrationMaster] + additionalTokens) ... unproven
25/74 ... [IO] line 427, (tokenCreationRate + bonusCreationRate) ... proven
26/74 ... [IO] line 428, (tokenCreationRate + bonusCreationRate) ... proven
27/74 ... [IO] line 440, (this.balance - SubX) ... unproven
28/74 ... [IO] line 459, (8 * oneweek) ... proven
29/74 ... [IO] line 459, (fundingEndBlock + (8 * oneweek)) ... proven
30/74 ... [IO] line 477, (balances[msg.sender] - _value) ... proven
31/74 ... [IO] line 478, (totalSupply - _value) ... unproven
32/74 ... [IO] line 479, (totalMigrated + _value) ... unproven
33/74 ... [IO] line 493, (totalSupply - DAOPLTokenValue) ... unproven
34/74 ... [ETH_LEAK] line 434, owner.send(this.balance) ... proven
35/74 ... [ETH_LEAK] line 440, owner.send((this.balance - SubX)); ... proven
36/74 ... [ETH_LEAK] line 466, owner.send(this.balance); ... proven
37/74 ... [ETH_LEAK] line 496, msg.sender.transfer(ETHValue); ... unproven
38/74 ... [RE_EL] line 434, owner.send(this.balance) ... proven
39/74 ... [RE_EL] line 440, owner.send((this.balance - SubX)); ... proven
40/74 ... [RE_EL] line 466, owner.send(this.balance); ... proven
41/74 ... [RE_EL] line 496, msg.sender.transfer(ETHValue); ... unproven
42/74 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... proven
43/74 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... proven
44/74 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
45/74 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
46/74 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
47/74 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
48/74 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
49/74 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
50/74 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
51/74 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... proven
52/74 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... proven
53/74 ... [RE] line 366, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... proven
54/74 ... [RE] line 387, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
55/74 ... [RE] line 424, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... proven
56/74 ... [RE] line 432, (daoPOLSKAtokens, FundsTransfer, []) ... proven
57/74 ... [RE] line 437, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... proven
58/74 ... [RE] line 442, (daoPOLSKAtokens, turnrefund, []) ... proven
59/74 ... [RE] line 447, (daoPOLSKAtokens, fundingState, []) ... proven
60/74 ... [RE] line 451, (daoPOLSKAtokens, turnmigrate, []) ... proven
61/74 ... [RE] line 458, (daoPOLSKAtokens, finalize, []) ... unproven
62/74 ... [RE] line 468, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
63/74 ... [RE] line 484, (daoPOLSKAtokens, refundTRA, []) ... unproven
64/74 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
65/74 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
66/74 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
67/74 ... [TX_ORG] line 351, assume((msg.sender != owner)); ... proven
68/74 ... [TX_ORG] line 367, assume((msg.sender != owner)); ... proven
69/74 ... [TX_ORG] line 425, assume((msg.sender == owner)); ... proven
70/74 ... [TX_ORG] line 438, assume((msg.sender != owner)); ... proven
71/74 ... [TX_ORG] line 443, assume((msg.sender != owner)); ... proven
72/74 ... [TX_ORG] line 448, assume((msg.sender != owner)); ... proven
73/74 ... [TX_ORG] line 452, assume((msg.sender != migrationMaster)); ... proven
74/74 ... [TX_ORG] line 464, assume((msg.sender == owner)); ... proven
took 5.22125s

Generating VCs ... took 0.031912s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 15 Total elapsed : 66.776053
[
-1 -> ((((((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain2__@518) == true)) /\ (Read(@TU, Chain3__@521) == true)) /\ (Read(@TU, Chain4__@524) == true)) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true))
0 -> ((((((Read(@TU, Chain1__@515) == true) /\ (Read(@TU, Chain2__@518) == true)) /\ (Read(@TU, Chain3__@521) == true)) /\ (Read(@TU, Chain4__@524) == true)) /\ (Read(@TU, migrationMaster__@503) == true)) /\ (Read(@TU, owner__@501) == true))
]
[
]
1/74 ... [IO] line 50, (a - b) ... proven
2/74 ... [IO] line 54, (a + b) ... proven
3/74 ... [IO] line 261, (balances[msg.sender] - _value) ... proven
4/74 ... [IO] line 262, (totalSupply - _value) ... unproven
5/74 ... [IO] line 278, (balances[_from] - _value) ... proven
6/74 ... [IO] line 279, (allowed[_from][msg.sender] - _value) ... proven
7/74 ... [IO] line 280, (totalSupply - _value) ... unproven
8/74 ... [IO] line 289, (balances[_to] + _value) ... proven
9/74 ... [IO] line 291, (balances[msg.sender] - _value) ... proven
10/74 ... [IO] line 292, (balances[_to] + _value) ... proven
11/74 ... [IO] line 300, (balances[_to] + _value) ... proven
12/74 ... [IO] line 302, (balances[_to] + _value) ... proven
13/74 ... [IO] line 303, (balances[_from] - _value) ... proven
14/74 ... [IO] line 304, (allowed[_from][msg.sender] - _value) ... proven
15/74 ... [IO] line 329, (balances[msg.sender] + msg.value) ... unproven
16/74 ... [IO] line 375, (numTransfers + 1) ... unproven
17/74 ... [IO] line 394, (supplylimit - totalSupply) ... unproven
18/74 ... [IO] line 405, (msg.value * CreationRate) ... unproven
19/74 ... [IO] line 406, (totalSupply + numTokens) ... unproven
20/74 ... [IO] line 409, (balances[holder] + numTokens) ... unproven
21/74 ... [IO] line 410, (balancesRAW[holder] + numTokensRAW) ... unproven
22/74 ... [IO] line 416, (numTokens * percentOfTotal) ... unproven
23/74 ... [IO] line 418, (totalSupply + additionalTokens) ... unproven
24/74 ... [IO] line 420, (balances[migrationMaster] + additionalTokens) ... unproven
25/74 ... [IO] line 427, (tokenCreationRate + bonusCreationRate) ... proven
26/74 ... [IO] line 428, (tokenCreationRate + bonusCreationRate) ... proven
27/74 ... [IO] line 440, (this.balance - SubX) ... unproven
28/74 ... [IO] line 459, (8 * oneweek) ... proven
29/74 ... [IO] line 459, (fundingEndBlock + (8 * oneweek)) ... proven
30/74 ... [IO] line 477, (balances[msg.sender] - _value) ... proven
31/74 ... [IO] line 478, (totalSupply - _value) ... unproven
32/74 ... [IO] line 479, (totalMigrated + _value) ... unproven
33/74 ... [IO] line 493, (totalSupply - DAOPLTokenValue) ... unproven
34/74 ... [ETH_LEAK] line 434, owner.send(this.balance) ... proven
35/74 ... [ETH_LEAK] line 440, owner.send((this.balance - SubX)); ... proven
36/74 ... [ETH_LEAK] line 466, owner.send(this.balance); ... proven
37/74 ... [ETH_LEAK] line 496, msg.sender.transfer(ETHValue); ... unproven
38/74 ... [RE_EL] line 434, owner.send(this.balance) ... proven
39/74 ... [RE_EL] line 440, owner.send((this.balance - SubX)); ... proven
40/74 ... [RE_EL] line 466, owner.send(this.balance); ... proven
41/74 ... [RE_EL] line 496, msg.sender.transfer(ETHValue); ... unproven
42/74 ... [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) ... proven
43/74 ... [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) ... proven
44/74 ... [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) ... unproven
45/74 ... [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) ... unproven
46/74 ... [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) ... unproven
47/74 ... [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) ... unproven
48/74 ... [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) ... unproven
49/74 ... [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) ... unproven
50/74 ... [RE] line 326, (daoPOLSKAtokens, @fallback, []) ... unproven
51/74 ... [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) ... proven
52/74 ... [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) ... proven
53/74 ... [RE] line 366, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) ... proven
54/74 ... [RE] line 387, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) ... unproven
55/74 ... [RE] line 424, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) ... proven
56/74 ... [RE] line 432, (daoPOLSKAtokens, FundsTransfer, []) ... proven
57/74 ... [RE] line 437, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) ... proven
58/74 ... [RE] line 442, (daoPOLSKAtokens, turnrefund, []) ... proven
59/74 ... [RE] line 447, (daoPOLSKAtokens, fundingState, []) ... proven
60/74 ... [RE] line 451, (daoPOLSKAtokens, turnmigrate, []) ... proven
61/74 ... [RE] line 458, (daoPOLSKAtokens, finalize, []) ... unproven
62/74 ... [RE] line 468, (daoPOLSKAtokens, migrate, [uint256]) ... unproven
63/74 ... [RE] line 484, (daoPOLSKAtokens, refundTRA, []) ... unproven
64/74 ... [TX_ORG] line 210, assume((msg.sender != owner)); ... proven
65/74 ... [TX_ORG] line 222, assume((msg.sender != owner)); ... proven
66/74 ... [TX_ORG] line 340, assume((msg.sender != owner)); ... proven
67/74 ... [TX_ORG] line 351, assume((msg.sender != owner)); ... proven
68/74 ... [TX_ORG] line 367, assume((msg.sender != owner)); ... proven
69/74 ... [TX_ORG] line 425, assume((msg.sender == owner)); ... proven
70/74 ... [TX_ORG] line 438, assume((msg.sender != owner)); ... proven
71/74 ... [TX_ORG] line 443, assume((msg.sender != owner)); ... proven
72/74 ... [TX_ORG] line 448, assume((msg.sender != owner)); ... proven
73/74 ... [TX_ORG] line 452, assume((msg.sender != migrationMaster)); ... proven
74/74 ... [TX_ORG] line 464, assume((msg.sender == owner)); ... proven
took 6.563524s

Generating VCs ... took 0.031713s
Checking validity of VCs ... took 1.404749s

Generating VCs ... took 0.033433s
Checking validity of VCs ... took 1.421038s

Generating VCs ... took 0.031305s
Checking validity of VCs ... took 1.418904s

Generating VCs ... took 0.031979s
Checking validity of VCs ... took 1.387151s

Iter : 20 To explore : 4935 Explored : 29147 Total elapsed : 85.054444
Generating VCs ... took 0.031715s
Checking validity of VCs ... took 1.431683s

Generating VCs ... took 0.031812s
Checking validity of VCs ... took 1.425333s

Generating VCs ... took 0.034468s
Checking validity of VCs ... took 1.410668s

Generating VCs ... took 0.032395s
Checking validity of VCs ... took 1.48694s

Generating VCs ... took 0.032721s
Checking validity of VCs ... took 1.451433s

Generating VCs ... took 0.031926s
Checking validity of VCs ... took 1.427364s

Generating VCs ... took 0.032476s
Checking validity of VCs ... took 1.431762s

Generating VCs ... took 0.038979s
Checking validity of VCs ... took 1.45027s

Generating VCs ... took 0.033902s
Checking validity of VCs ... took 1.462642s

Generating VCs ... took 0.03249s
Checking validity of VCs ... took 1.436692s

Iter : 30 To explore : 14012 Explored : 38234 Total elapsed : 110.237681
Generating VCs ... took 0.032631s
Checking validity of VCs ... took 1.458292s

Generating VCs ... took 0.036873s
Checking validity of VCs ... took 1.490694s

Generating VCs ... took 0.031799s
Checking validity of VCs ... took 1.51908s

Generating VCs ... took 0.03651s
Checking validity of VCs ... took 1.47096s

Generating VCs ... took 0.03345s
Checking validity of VCs ... took 1.475749s

Generating VCs ... took 0.036228s
Checking validity of VCs ... took 1.462933s

Generating VCs ... took 0.036411s
Checking validity of VCs ... took 1.463634s

Generating VCs ... took 0.037234s
Checking validity of VCs ... took 1.498412s

Generating VCs ... took 0.032704s
Checking validity of VCs ... took 1.440883s

Generating VCs ... took 0.038119s
Checking validity of VCs ... took 1.449606s

Iter : 40 To explore : 23154 Explored : 47386 Total elapsed : 137.532467
Generating VCs ... took 0.031975s
Checking validity of VCs ... took 1.461907s

Generating VCs ... took 0.032072s
Checking validity of VCs ... took 1.479786s

Generating VCs ... took 0.0321s
Checking validity of VCs ... took 1.502574s

Generating VCs ... took 0.032447s
Checking validity of VCs ... took 1.469063s

Generating VCs ... took 0.032847s
Checking validity of VCs ... took 1.480449s

Generating VCs ... took 0.012536s
Checking validity of VCs ... 
1/109 ... [NO_EFFECT] line 54, (@pre18 == c) ... unproven
2/109 ... [NO_EFFECT] line 218, (@pre27 == supplylimit) ... unproven
3/109 ... [NO_EFFECT] line 230, (@pre28 == otherchainstotalsupply) ... unproven
4/109 ... [NO_EFFECT] line 261, (@pre30 == balances[msg.sender]) ... unproven
5/109 ... [NO_EFFECT] line 262, (@pre29 == totalSupply) ... unproven
6/109 ... [NO_EFFECT] line 278, (@pre33 == balances[_from]) ... unproven
7/109 ... [NO_EFFECT] line 279, (@pre32 == allowed[_from][msg.sender]) ... unproven
8/109 ... [NO_EFFECT] line 280, (@pre31 == totalSupply) ... unproven
9/109 ... [NO_EFFECT] line 291, (@pre35 == balances[msg.sender]) ... unproven
10/109 ... [NO_EFFECT] line 292, (@pre34 == balances[_to]) ... unproven
11/109 ... [NO_EFFECT] line 302, (@pre38 == balances[_to]) ... unproven
12/109 ... [NO_EFFECT] line 303, (@pre37 == balances[_from]) ... unproven
13/109 ... [NO_EFFECT] line 304, (@pre36 == allowed[_from][msg.sender]) ... unproven
14/109 ... [NO_EFFECT] line 311, (@pre39 == balance) ... unproven
15/109 ... [NO_EFFECT] line 315, (@pre40 == allowed[msg.sender][_spender]) ... unproven
16/109 ... [NO_EFFECT] line 321, (@pre41 == remaining) ... unproven
17/109 ... [NO_EFFECT] line 329, (@pre42 == balances[msg.sender]) ... unproven
18/109 ... [NO_EFFECT] line 354, (@pre46 == Chain1) ... unproven
19/109 ... [NO_EFFECT] line 355, (@pre45 == Chain2) ... unproven
20/109 ... [NO_EFFECT] line 356, (@pre44 == Chain3) ... unproven
21/109 ... [NO_EFFECT] line 357, (@pre43 == Chain4) ... unproven
22/109 ... [NO_EFFECT] line 372, (@pre49 == t.amount) ... unproven
23/109 ... [NO_EFFECT] line 373, (@pre48 == t.recipient) ... unproven
24/109 ... [NO_EFFECT] line 375, (@pre47 == numTransfers) ... unproven
25/109 ... [NO_EFFECT] line 403, (@pre57 == numTokensRAW) ... unproven
26/109 ... [NO_EFFECT] line 405, (@pre56 == numTokens) ... unproven
27/109 ... [NO_EFFECT] line 406, (@pre55 == totalSupply) ... unproven
28/109 ... [NO_EFFECT] line 409, (@pre54 == balances[holder]) ... unproven
29/109 ... [NO_EFFECT] line 410, (@pre53 == balancesRAW[holder]) ... unproven
30/109 ... [NO_EFFECT] line 416, (@pre52 == additionalTokens) ... unproven
31/109 ... [NO_EFFECT] line 418, (@pre51 == totalSupply) ... unproven
32/109 ... [NO_EFFECT] line 420, (@pre50 == balances[migrationMaster]) ... unproven
33/109 ... [NO_EFFECT] line 426, (@pre59 == bonusCreationRate) ... unproven
34/109 ... [NO_EFFECT] line 428, (@pre58 == CreationRate) ... unproven
35/109 ... [NO_EFFECT] line 477, (@pre62 == balances[msg.sender]) ... unproven
36/109 ... [NO_EFFECT] line 478, (@pre61 == totalSupply) ... unproven
37/109 ... [NO_EFFECT] line 479, (@pre60 == totalMigrated) ... unproven
38/109 ... [NO_EFFECT] line 489, (@pre65 == DAOPLTokenValue) ... unproven
39/109 ... [NO_EFFECT] line 490, (@pre64 == ETHValue) ... unproven
40/109 ... [NO_EFFECT] line 493, (@pre63 == totalSupply) ... unproven
41/109 ... [ASSIGN_CONST] line 54, (c == 0) ... unproven
42/109 ... [ASSIGN_CONST] line 261, (balances[msg.sender] == 0) ... unproven
43/109 ... [ASSIGN_CONST] line 262, (totalSupply == 0) ... unproven
44/109 ... [ASSIGN_CONST] line 278, (balances[_from] == 0) ... unproven
45/109 ... [ASSIGN_CONST] line 279, (allowed[_from][msg.sender] == 0) ... unproven
46/109 ... [ASSIGN_CONST] line 280, (totalSupply == 0) ... unproven
47/109 ... [ASSIGN_CONST] line 291, ((!(_to != msg.sender)) || (balances[msg.sender] == 0)) ... unproven
48/109 ... [ASSIGN_CONST] line 292, ((!(_to != msg.sender)) || (balances[_to] == 0)) ... unproven
49/109 ... [ASSIGN_CONST] line 302, ((!(_from != _to)) || (balances[_to] == 0)) ... unproven
50/109 ... [ASSIGN_CONST] line 303, ((!(_from != _to)) || (balances[_from] == 0)) ... unproven
51/109 ... [ASSIGN_CONST] line 304, ((!(_from != _to)) || (allowed[_from][msg.sender] == 0)) ... unproven
52/109 ... [ASSIGN_CONST] line 329, (balances[msg.sender] == 0) ... unproven
53/109 ... [ASSIGN_CONST] line 375, (numTransfers == 0) ... unproven
54/109 ... [ASSIGN_CONST] line 406, ((!(holder != migrationMaster)) || (totalSupply == 0)) ... unproven
55/109 ... [ASSIGN_CONST] line 409, ((!(holder != migrationMaster)) || (balances[holder] == 0)) ... unproven
56/109 ... [ASSIGN_CONST] line 410, ((!(holder != migrationMaster)) || (balancesRAW[holder] == 0)) ... unproven
57/109 ... [ASSIGN_CONST] line 418, ((!(holder != migrationMaster)) || (totalSupply == 0)) ... unproven
58/109 ... [ASSIGN_CONST] line 420, ((!(holder != migrationMaster)) || (balances[migrationMaster] == 0)) ... unproven
59/109 ... [ASSIGN_CONST] line 428, (CreationRate == 0) ... unproven
60/109 ... [ASSIGN_CONST] line 477, (balances[msg.sender] == 0) ... unproven
61/109 ... [ASSIGN_CONST] line 478, (totalSupply == 0) ... unproven
62/109 ... [ASSIGN_CONST] line 479, (totalMigrated == 0) ... unproven
63/109 ... [ASSIGN_CONST] line 493, (totalSupply == 0) ... unproven
64/109 ... [DEAD] line 49, false ... unproven
65/109 ... [DEAD] line 55, false ... unproven
66/109 ... [DEAD] line 108, false ... unproven
67/109 ... [DEAD] line 109, false ... unproven
68/109 ... [DEAD] line 110, false ... unproven
69/109 ... [DEAD] line 210, false ... unproven
70/109 ... [DEAD] line 213, false ... unproven
71/109 ... [DEAD] line 222, false ... unproven
72/109 ... [DEAD] line 225, false ... unproven
73/109 ... [DEAD] line 246, false ... unproven
74/109 ... [DEAD] line 260, false ... unproven
75/109 ... [DEAD] line 263, false ... unproven
76/109 ... [DEAD] line 276, false ... unproven
77/109 ... [DEAD] line 277, false ... unproven
78/109 ... [DEAD] line 281, false ... unproven
79/109 ... [DEAD] line 293, false ... unproven
80/109 ... [DEAD] line 305, false ... unproven
81/109 ... [DEAD] line 316, false ... unproven
82/109 ... [DEAD] line 328, false ... unproven
83/109 ... [DEAD] line 340, false ... unproven
84/109 ... [DEAD] line 346, false ... unproven
85/109 ... [DEAD] line 351, false ... unproven
86/109 ... [DEAD] line 354, false ... unproven
87/109 ... [DEAD] line 355, false ... unproven
88/109 ... [DEAD] line 356, false ... unproven
89/109 ... [DEAD] line 357, false ... unproven
90/109 ... [DEAD] line 367, false ... unproven
91/109 ... [DEAD] line 392, false ... unproven
92/109 ... [DEAD] line 394, false ... unproven
93/109 ... [DEAD] line 412, false ... unproven
94/109 ... [DEAD] line 421, false ... unproven
95/109 ... [DEAD] line 425, false ... unproven
96/109 ... [DEAD] line 427, false ... unproven
97/109 ... [DEAD] line 433, false ... unproven
98/109 ... [DEAD] line 438, false ... unproven
99/109 ... [DEAD] line 443, false ... unproven
100/109 ... [DEAD] line 448, false ... unproven
101/109 ... [DEAD] line 452, false ... unproven
102/109 ... [DEAD] line 459, false ... unproven
103/109 ... [DEAD] line 464, false ... unproven
104/109 ... [DEAD] line 474, false ... unproven
105/109 ... [DEAD] line 475, false ... unproven
106/109 ... [DEAD] line 481, false ... unproven
107/109 ... [DEAD] line 491, false ... unproven
108/109 ... [DEAD] line 495, false ... unproven
109/109 ... [DEAD] line 496, false ... unproven
took 6.214341s


===== Vulnerability Report =====
[1] [IO] line 50, (a - b) : proven
[2] [IO] line 54, (a + b) : proven
[3] [IO] line 261, (balances[msg.sender] - _value) : proven
[4] [IO] line 262, (totalSupply - _value) : unproven
[5] [IO] line 278, (balances[_from] - _value) : proven
[6] [IO] line 279, (allowed[_from][msg.sender] - _value) : proven
[7] [IO] line 280, (totalSupply - _value) : unproven
[8] [IO] line 289, (balances[_to] + _value) : proven
[9] [IO] line 291, (balances[msg.sender] - _value) : proven
[10] [IO] line 292, (balances[_to] + _value) : proven
[11] [IO] line 300, (balances[_to] + _value) : proven
[12] [IO] line 302, (balances[_to] + _value) : proven
[13] [IO] line 303, (balances[_from] - _value) : proven
[14] [IO] line 304, (allowed[_from][msg.sender] - _value) : proven
[15] [IO] line 329, (balances[msg.sender] + msg.value) : unproven
[16] [IO] line 375, (numTransfers + 1) : unproven
[17] [IO] line 394, (supplylimit - totalSupply) : unproven
[18] [IO] line 405, (msg.value * CreationRate) : unproven
[19] [IO] line 406, (totalSupply + numTokens) : unproven
[20] [IO] line 409, (balances[holder] + numTokens) : unproven
[21] [IO] line 410, (balancesRAW[holder] + numTokensRAW) : unproven
[22] [IO] line 416, (numTokens * percentOfTotal) : unproven
[23] [IO] line 418, (totalSupply + additionalTokens) : unproven
[24] [IO] line 420, (balances[migrationMaster] + additionalTokens) : unproven
[25] [IO] line 427, (tokenCreationRate + bonusCreationRate) : proven
[26] [IO] line 428, (tokenCreationRate + bonusCreationRate) : proven
[27] [IO] line 440, (this.balance - SubX) : unproven
[28] [IO] line 459, (8 * oneweek) : proven
[29] [IO] line 459, (fundingEndBlock + (8 * oneweek)) : proven
[30] [IO] line 477, (balances[msg.sender] - _value) : proven
[31] [IO] line 478, (totalSupply - _value) : unproven
[32] [IO] line 479, (totalMigrated + _value) : unproven
[33] [IO] line 493, (totalSupply - DAOPLTokenValue) : unproven
[34] [ETH_LEAK] line 434, owner.send(this.balance) : proven
[35] [ETH_LEAK] line 440, owner.send((this.balance - SubX)); : proven
[36] [ETH_LEAK] line 466, owner.send(this.balance); : proven
[37] [ETH_LEAK] line 496, msg.sender.transfer(ETHValue); : unproven
[38] [RE_EL] line 434, owner.send(this.balance) : proven
[39] [RE_EL] line 440, owner.send((this.balance - SubX)); : proven
[40] [RE_EL] line 466, owner.send(this.balance); : proven
[41] [RE_EL] line 496, msg.sender.transfer(ETHValue); : unproven
[42] [RE] line 209, (daoPOLSKAtokens, setSupply, [uint256]) : proven
[43] [RE] line 221, (daoPOLSKAtokens, setotherchainstotalsupply, [uint256]) : proven
[44] [RE] line 242, (daoPOLSKAtokens, approveAndCall, [address, uint256, dbytes]) : unproven
[45] [RE] line 259, (daoPOLSKAtokens, burn, [uint256]) : unproven
[46] [RE] line 275, (daoPOLSKAtokens, burnFrom, [address, uint256]) : unproven
[47] [RE] line 285, (daoPOLSKAtokens, transfer, [address, uint256]) : unproven
[48] [RE] line 298, (daoPOLSKAtokens, transferFrom, [address, address, uint256]) : unproven
[49] [RE] line 314, (daoPOLSKAtokens, approve, [address, uint256]) : unproven
[50] [RE] line 326, (daoPOLSKAtokens, @fallback, []) : unproven
[51] [RE] line 338, (daoPOLSKAtokens, setTokenInformation, [string, string]) : proven
[52] [RE] line 349, (daoPOLSKAtokens, setChainsAddresses, [address, int256]) : proven
[53] [RE] line 366, (daoPOLSKAtokens, sendTokenAw, [address, address, uint256]) : proven
[54] [RE] line 387, (daoPOLSKAtokens, createDaoPOLSKAtokens, [address]) : unproven
[55] [RE] line 424, (daoPOLSKAtokens, setBonusCreationRate, [uint256]) : proven
[56] [RE] line 432, (daoPOLSKAtokens, FundsTransfer, []) : proven
[57] [RE] line 437, (daoPOLSKAtokens, PartialFundsTransfer, [uint256]) : proven
[58] [RE] line 442, (daoPOLSKAtokens, turnrefund, []) : proven
[59] [RE] line 447, (daoPOLSKAtokens, fundingState, []) : proven
[60] [RE] line 451, (daoPOLSKAtokens, turnmigrate, []) : proven
[61] [RE] line 458, (daoPOLSKAtokens, finalize, []) : unproven
[62] [RE] line 468, (daoPOLSKAtokens, migrate, [uint256]) : unproven
[63] [RE] line 484, (daoPOLSKAtokens, refundTRA, []) : unproven
[64] [TX_ORG] line 210, assume((msg.sender != owner)); : proven
[65] [TX_ORG] line 222, assume((msg.sender != owner)); : proven
[66] [TX_ORG] line 340, assume((msg.sender != owner)); : proven
[67] [TX_ORG] line 351, assume((msg.sender != owner)); : proven
[68] [TX_ORG] line 367, assume((msg.sender != owner)); : proven
[69] [TX_ORG] line 425, assume((msg.sender == owner)); : proven
[70] [TX_ORG] line 438, assume((msg.sender != owner)); : proven
[71] [TX_ORG] line 443, assume((msg.sender != owner)); : proven
[72] [TX_ORG] line 448, assume((msg.sender != owner)); : proven
[73] [TX_ORG] line 452, assume((msg.sender != migrationMaster)); : proven
[74] [TX_ORG] line 464, assume((msg.sender == owner)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 54, (@pre18 == c) : unproven
[2] [NO_EFFECT] line 218, (@pre27 == supplylimit) : unproven
[3] [NO_EFFECT] line 230, (@pre28 == otherchainstotalsupply) : unproven
[4] [NO_EFFECT] line 261, (@pre30 == balances[msg.sender]) : unproven
[5] [NO_EFFECT] line 262, (@pre29 == totalSupply) : unproven
[6] [NO_EFFECT] line 278, (@pre33 == balances[_from]) : unproven
[7] [NO_EFFECT] line 279, (@pre32 == allowed[_from][msg.sender]) : unproven
[8] [NO_EFFECT] line 280, (@pre31 == totalSupply) : unproven
[9] [NO_EFFECT] line 291, (@pre35 == balances[msg.sender]) : unproven
[10] [NO_EFFECT] line 292, (@pre34 == balances[_to]) : unproven
[11] [NO_EFFECT] line 302, (@pre38 == balances[_to]) : unproven
[12] [NO_EFFECT] line 303, (@pre37 == balances[_from]) : unproven
[13] [NO_EFFECT] line 304, (@pre36 == allowed[_from][msg.sender]) : unproven
[14] [NO_EFFECT] line 311, (@pre39 == balance) : unproven
[15] [NO_EFFECT] line 315, (@pre40 == allowed[msg.sender][_spender]) : unproven
[16] [NO_EFFECT] line 321, (@pre41 == remaining) : unproven
[17] [NO_EFFECT] line 329, (@pre42 == balances[msg.sender]) : unproven
[18] [NO_EFFECT] line 354, (@pre46 == Chain1) : unproven
[19] [NO_EFFECT] line 355, (@pre45 == Chain2) : unproven
[20] [NO_EFFECT] line 356, (@pre44 == Chain3) : unproven
[21] [NO_EFFECT] line 357, (@pre43 == Chain4) : unproven
[22] [NO_EFFECT] line 372, (@pre49 == t.amount) : unproven
[23] [NO_EFFECT] line 373, (@pre48 == t.recipient) : unproven
[24] [NO_EFFECT] line 375, (@pre47 == numTransfers) : unproven
[25] [NO_EFFECT] line 403, (@pre57 == numTokensRAW) : unproven
[26] [NO_EFFECT] line 405, (@pre56 == numTokens) : unproven
[27] [NO_EFFECT] line 406, (@pre55 == totalSupply) : unproven
[28] [NO_EFFECT] line 409, (@pre54 == balances[holder]) : unproven
[29] [NO_EFFECT] line 410, (@pre53 == balancesRAW[holder]) : unproven
[30] [NO_EFFECT] line 416, (@pre52 == additionalTokens) : unproven
[31] [NO_EFFECT] line 418, (@pre51 == totalSupply) : unproven
[32] [NO_EFFECT] line 420, (@pre50 == balances[migrationMaster]) : unproven
[33] [NO_EFFECT] line 426, (@pre59 == bonusCreationRate) : unproven
[34] [NO_EFFECT] line 428, (@pre58 == CreationRate) : unproven
[35] [NO_EFFECT] line 477, (@pre62 == balances[msg.sender]) : unproven
[36] [NO_EFFECT] line 478, (@pre61 == totalSupply) : unproven
[37] [NO_EFFECT] line 479, (@pre60 == totalMigrated) : unproven
[38] [NO_EFFECT] line 489, (@pre65 == DAOPLTokenValue) : unproven
[39] [NO_EFFECT] line 490, (@pre64 == ETHValue) : unproven
[40] [NO_EFFECT] line 493, (@pre63 == totalSupply) : unproven
[41] [ASSIGN_CONST] line 54, (c == 0) : unproven
[42] [ASSIGN_CONST] line 261, (balances[msg.sender] == 0) : unproven
[43] [ASSIGN_CONST] line 262, (totalSupply == 0) : unproven
[44] [ASSIGN_CONST] line 278, (balances[_from] == 0) : unproven
[45] [ASSIGN_CONST] line 279, (allowed[_from][msg.sender] == 0) : unproven
[46] [ASSIGN_CONST] line 280, (totalSupply == 0) : unproven
[47] [ASSIGN_CONST] line 291, ((!(_to != msg.sender)) || (balances[msg.sender] == 0)) : unproven
[48] [ASSIGN_CONST] line 292, ((!(_to != msg.sender)) || (balances[_to] == 0)) : unproven
[49] [ASSIGN_CONST] line 302, ((!(_from != _to)) || (balances[_to] == 0)) : unproven
[50] [ASSIGN_CONST] line 303, ((!(_from != _to)) || (balances[_from] == 0)) : unproven
[51] [ASSIGN_CONST] line 304, ((!(_from != _to)) || (allowed[_from][msg.sender] == 0)) : unproven
[52] [ASSIGN_CONST] line 329, (balances[msg.sender] == 0) : unproven
[53] [ASSIGN_CONST] line 375, (numTransfers == 0) : unproven
[54] [ASSIGN_CONST] line 406, ((!(holder != migrationMaster)) || (totalSupply == 0)) : unproven
[55] [ASSIGN_CONST] line 409, ((!(holder != migrationMaster)) || (balances[holder] == 0)) : unproven
[56] [ASSIGN_CONST] line 410, ((!(holder != migrationMaster)) || (balancesRAW[holder] == 0)) : unproven
[57] [ASSIGN_CONST] line 418, ((!(holder != migrationMaster)) || (totalSupply == 0)) : unproven
[58] [ASSIGN_CONST] line 420, ((!(holder != migrationMaster)) || (balances[migrationMaster] == 0)) : unproven
[59] [ASSIGN_CONST] line 428, (CreationRate == 0) : unproven
[60] [ASSIGN_CONST] line 477, (balances[msg.sender] == 0) : unproven
[61] [ASSIGN_CONST] line 478, (totalSupply == 0) : unproven
[62] [ASSIGN_CONST] line 479, (totalMigrated == 0) : unproven
[63] [ASSIGN_CONST] line 493, (totalSupply == 0) : unproven
[64] [DEAD] line 49, false : unproven
[65] [DEAD] line 55, false : unproven
[66] [DEAD] line 108, false : unproven
[67] [DEAD] line 109, false : unproven
[68] [DEAD] line 110, false : unproven
[69] [DEAD] line 210, false : unproven
[70] [DEAD] line 213, false : unproven
[71] [DEAD] line 222, false : unproven
[72] [DEAD] line 225, false : unproven
[73] [DEAD] line 246, false : unproven
[74] [DEAD] line 260, false : unproven
[75] [DEAD] line 263, false : unproven
[76] [DEAD] line 276, false : unproven
[77] [DEAD] line 277, false : unproven
[78] [DEAD] line 281, false : unproven
[79] [DEAD] line 293, false : unproven
[80] [DEAD] line 305, false : unproven
[81] [DEAD] line 316, false : unproven
[82] [DEAD] line 328, false : unproven
[83] [DEAD] line 340, false : unproven
[84] [DEAD] line 346, false : unproven
[85] [DEAD] line 351, false : unproven
[86] [DEAD] line 354, false : unproven
[87] [DEAD] line 355, false : unproven
[88] [DEAD] line 356, false : unproven
[89] [DEAD] line 357, false : unproven
[90] [DEAD] line 367, false : unproven
[91] [DEAD] line 392, false : unproven
[92] [DEAD] line 394, false : unproven
[93] [DEAD] line 412, false : unproven
[94] [DEAD] line 421, false : unproven
[95] [DEAD] line 425, false : unproven
[96] [DEAD] line 427, false : unproven
[97] [DEAD] line 433, false : unproven
[98] [DEAD] line 438, false : unproven
[99] [DEAD] line 443, false : unproven
[100] [DEAD] line 448, false : unproven
[101] [DEAD] line 452, false : unproven
[102] [DEAD] line 459, false : unproven
[103] [DEAD] line 464, false : unproven
[104] [DEAD] line 474, false : unproven
[105] [DEAD] line 475, false : unproven
[106] [DEAD] line 481, false : unproven
[107] [DEAD] line 491, false : unproven
[108] [DEAD] line 495, false : unproven
[109] [DEAD] line 496, false : unproven

============ Statistics ============
# Iter                    : 44
# Alarm / Query           : 29 / 74
- integer over/underflow  : 16 / 33
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 4
- reentrancy-leaking      : 1 / 4
- reentrancy              : 11 / 22
- tx.origin               : 0 / 11

Time Elapsed (Real) : 158.248988152
Time Elapsed (CPU)  : 158.315986
