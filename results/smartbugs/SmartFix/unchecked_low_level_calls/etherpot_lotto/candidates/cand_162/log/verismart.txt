[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 21
[INFO] reachable : 18
[INFO] Generating Paths ... took 0.003249s
[INFO] # path : 104

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.010438s
Generating VCs ... took 0.051969s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.23342
[
0 -> true
47 -> true
]
[
]
1/21 ... [IO] line 3, (a + b) ... proven
2/21 ... [IO] line 4, (a + b) ... proven
3/21 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/21 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/21 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/21 ... [IO] line 82, (roundIndex + 1) ... proven
7/21 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/21 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/21 ... [IO] line 83, (roundIndex + 1) ... proven
10/21 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/21 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/21 ... [IO] line 152, (msg.value - value) ... proven
13/21 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/21 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/21 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/21 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
17/21 ... [IO] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
18/21 ... [IO] line 167, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
19/21 ... [IO] line 170, (rounds[roundIndex].pot + value) ... unproven
20/21 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
21/21 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 71.398647s

Generating VCs ... took 0.053166s
Checking validity of VCs ... took 0.062139s

Generating VCs ... took 0.049496s
Checking validity of VCs ... took 0.030591s

Generating VCs ... took 0.049754s
Checking validity of VCs ... took 0.052052s

Generating VCs ... took 0.050763s
Checking validity of VCs ... took 0.041829s

Generating VCs ... took 0.050249s
Checking validity of VCs ... took 0.062195s

Generating VCs ... took 0.049471s
Checking validity of VCs ... took 0.052298s

Generating VCs ... took 0.049896s
Checking validity of VCs ... took 0.042851s

Generating VCs ... took 0.048684s
Checking validity of VCs ... took 0.064227s

Iter : 10 To explore : 254 Explored : 263 Total elapsed : 72.459241
Generating VCs ... took 0.048379s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 10 Total elapsed : 72.543338
[
0 -> (blocksPerRound__@33 == 6800)
47 -> (blocksPerRound__@33 == 6800)
]
[
]
1/21 ... [IO] line 3, (a + b) ... proven
2/21 ... [IO] line 4, (a + b) ... proven
3/21 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/21 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/21 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/21 ... [IO] line 82, (roundIndex + 1) ... proven
7/21 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/21 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/21 ... [IO] line 83, (roundIndex + 1) ... proven
10/21 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/21 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/21 ... [IO] line 152, (msg.value - value) ... proven
13/21 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/21 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/21 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/21 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
17/21 ... [IO] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
18/21 ... [IO] line 167, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
19/21 ... [IO] line 170, (rounds[roundIndex].pot + value) ... unproven
20/21 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
21/21 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 8.013742s

Generating VCs ... took 0.056534s
Checking validity of VCs ... took 1.422318s

Generating VCs ... took 0.05387s
Checking validity of VCs ... took 1.454044s

Generating VCs ... took 0.049887s
Checking validity of VCs ... took 1.392287s

Generating VCs ... took 0.048601s
Checking validity of VCs ... took 1.43999s

Generating VCs ... took 0.048466s
Checking validity of VCs ... took 1.41731s

Generating VCs ... took 0.048544s
Checking validity of VCs ... took 1.374597s

Generating VCs ... took 0.048853s
Checking validity of VCs ... took 1.401401s

Generating VCs ... took 0.052349s
Checking validity of VCs ... took 1.397124s

Generating VCs ... took 0.048893s
Checking validity of VCs ... took 1.473734s

Iter : 20 To explore : 155 Explored : 422 Total elapsed : 93.824299
Generating VCs ... took 0.0488s
Checking validity of VCs ... took 1.449721s

Generating VCs ... took 0.049421s
Checking validity of VCs ... took 1.43402s

Generating VCs ... took 0.048461s
Checking validity of VCs ... took 1.43357s

Generating VCs ... took 0.04803s
Checking validity of VCs ... took 1.468667s

Generating VCs ... took 0.048329s
Checking validity of VCs ... took 1.411298s

Generating VCs ... took 0.049874s
Checking validity of VCs ... took 1.450935s

Generating VCs ... took 0.048565s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 26 Total elapsed : 104.257715
[
0 -> ((blockReward__@39 == 5000000000000000000) /\ (blocksPerRound__@33 == 6800))
47 -> ((blockReward__@39 == 5000000000000000000) /\ (blocksPerRound__@33 == 6800))
]
[
]
1/21 ... [IO] line 3, (a + b) ... proven
2/21 ... [IO] line 4, (a + b) ... proven
3/21 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/21 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/21 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/21 ... [IO] line 82, (roundIndex + 1) ... proven
7/21 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/21 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/21 ... [IO] line 83, (roundIndex + 1) ... proven
10/21 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/21 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/21 ... [IO] line 152, (msg.value - value) ... proven
13/21 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/21 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/21 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/21 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
17/21 ... [IO] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
18/21 ... [IO] line 167, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
19/21 ... [IO] line 170, (rounds[roundIndex].pot + value) ... unproven
20/21 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
21/21 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 9.468927s

Generating VCs ... took 0.054782s
Checking validity of VCs ... took 1.632946s

Generating VCs ... took 0.056075s
Checking validity of VCs ... took 1.579603s

Generating VCs ... took 0.04922s
Checking validity of VCs ... took 1.583545s

Iter : 30 To explore : 82 Explored : 622 Total elapsed : 117.329267
Generating VCs ... took 0.049312s
Checking validity of VCs ... took 1.585765s

Generating VCs ... took 0.049094s
Checking validity of VCs ... took 1.621475s

Generating VCs ... took 0.048087s
Checking validity of VCs ... took 1.585036s

Generating VCs ... took 0.049558s
Checking validity of VCs ... took 1.590351s

Generating VCs ... took 0.049318s
Checking validity of VCs ... took 1.539422s

Generating VCs ... took 0.053621s
Checking validity of VCs ... took 1.54745s

Generating VCs ... took 0.049282s
Checking validity of VCs ... took 1.551933s

Generating VCs ... took 0.048779s
Checking validity of VCs ... took 1.587609s

Generating VCs ... took 0.055699s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 38 Total elapsed : 132.007547
[
0 -> (((blockReward__@39 == 5000000000000000000) /\ (blocksPerRound__@33 == 6800)) /\ (ticketPrice__@36 == 100000000000000000))
47 -> (((blockReward__@39 == 5000000000000000000) /\ (blocksPerRound__@33 == 6800)) /\ (ticketPrice__@36 == 100000000000000000))
]
[
]
1/21 ... [IO] line 3, (a + b) ... proven
2/21 ... [IO] line 4, (a + b) ... proven
3/21 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/21 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/21 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/21 ... [IO] line 82, (roundIndex + 1) ... proven
7/21 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/21 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/21 ... [IO] line 83, (roundIndex + 1) ... proven
10/21 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/21 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/21 ... [IO] line 152, (msg.value - value) ... proven
13/21 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/21 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/21 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/21 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
17/21 ... [IO] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
18/21 ... [IO] line 167, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
19/21 ... [IO] line 170, (rounds[roundIndex].pot + value) ... unproven
20/21 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
21/21 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 7.31737s

Generating VCs ... took 0.049135s
Checking validity of VCs ... took 1.78338s

Iter : 40 To explore : 5 Explored : 632 Total elapsed : 139.617088
Generating VCs ... took 0.054949s
Checking validity of VCs ... took 1.764708s

Generating VCs ... took 0.049711s
Checking validity of VCs ... took 1.771097s

Generating VCs ... took 0.048805s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 42 Total elapsed : 145.075095
[
0 -> ((((blockReward__@39 >= ticketPrice__@36) /\ (blockReward__@39 == 5000000000000000000)) /\ (blocksPerRound__@33 == 6800)) /\ (ticketPrice__@36 == 100000000000000000))
47 -> ((((blockReward__@39 >= ticketPrice__@36) /\ (blockReward__@39 == 5000000000000000000)) /\ (blocksPerRound__@33 == 6800)) /\ (ticketPrice__@36 == 100000000000000000))
]
[
]
1/21 ... [IO] line 3, (a + b) ... proven
2/21 ... [IO] line 4, (a + b) ... proven
3/21 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/21 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/21 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/21 ... [IO] line 82, (roundIndex + 1) ... proven
7/21 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/21 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/21 ... [IO] line 83, (roundIndex + 1) ... proven
10/21 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/21 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/21 ... [IO] line 152, (msg.value - value) ... proven
13/21 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/21 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/21 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/21 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
17/21 ... [IO] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
18/21 ... [IO] line 167, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
19/21 ... [IO] line 170, (rounds[roundIndex].pot + value) ... unproven
20/21 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
21/21 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 8.404242s

Generating VCs ... took 0.012603s
Checking validity of VCs ... 
1/49 ... [NO_EFFECT] line 4, (@pre18 == c) ... unproven
2/49 ... [NO_EFFECT] line 65, (@pre5 == winningTicketIndex) ... unproven
3/49 ... [NO_EFFECT] line 68, (@pre4 == ticketIndex) ... unproven
4/49 ... [NO_EFFECT] line 71, (@pre3 == buyer) ... unproven
5/49 ... [NO_EFFECT] line 73, (@pre2 == ticketIndex) ... unproven
6/49 ... [NO_EFFECT] line 87, (@pre7 == subpotsCount) ... unproven
7/49 ... [NO_EFFECT] line 90, (@pre6 == subpotsCount) ... unproven
8/49 ... [NO_EFFECT] line 146, (@pre17 == value) ... unproven
9/49 ... [NO_EFFECT] line 156, (@pre16 == ticketsCount) ... unproven
10/49 ... [NO_EFFECT] line 158, (@pre15 == rounds[roundIndex].ticketsCount) ... unproven
11/49 ... [NO_EFFECT] line 161, (@pre12 == buyersLength) ... unproven
12/49 ... [NO_EFFECT] line 161, (@pre13 == rounds[roundIndex].buyers.length) ... unproven
13/49 ... [NO_EFFECT] line 161, (@pre14 == Tmp3) ... unproven
14/49 ... [NO_EFFECT] line 162, (@pre11 == rounds[roundIndex].buyers[buyersLength]) ... unproven
15/49 ... [NO_EFFECT] line 166, (@pre10 == rounds[roundIndex].ticketsCountByBuyer[msg.sender]) ... unproven
16/49 ... [NO_EFFECT] line 167, (@pre9 == rounds[roundIndex].ticketsCount) ... unproven
17/49 ... [NO_EFFECT] line 170, (@pre8 == rounds[roundIndex].pot) ... unproven
18/49 ... [ASSIGN_CONST] line 4, (c == 0) ... unproven
19/49 ... [ASSIGN_CONST] line 73, (ticketIndex == 0) ... unproven
20/49 ... [ASSIGN_CONST] line 90, (subpotsCount == 0) ... unproven
21/49 ... [ASSIGN_CONST] line 146, (value == 0) ... unproven
22/49 ... [ASSIGN_CONST] line 158, (rounds[roundIndex].ticketsCount == 0) ... unproven
23/49 ... [ASSIGN_CONST] line 161, (rounds[roundIndex].buyers.length == 0) ... unproven
24/49 ... [ASSIGN_CONST] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] == 0) ... unproven
25/49 ... [ASSIGN_CONST] line 167, (rounds[roundIndex].ticketsCount == 0) ... unproven
26/49 ... [ASSIGN_CONST] line 170, (rounds[roundIndex].pot == 0) ... unproven
27/49 ... [DEAD] line 3, false ... unproven
28/49 ... [DEAD] line 58, false ... unproven
29/49 ... [DEAD] line 60, false ... unproven
30/49 ... [DEAD] line 64, false ... unproven
31/49 ... [DEAD] line 70, false ... unproven
32/49 ... [DEAD] line 72, false ... unproven
33/49 ... [DEAD] line 75, false ... unproven
34/49 ... [DEAD] line 82, false ... unproven
35/49 ... [DEAD] line 89, false ... unproven
36/49 ... [DEAD] line 96, false ... unproven
37/49 ... [DEAD] line 101, false ... unproven
38/49 ... [DEAD] line 103, false ... unproven
39/49 ... [DEAD] line 106, false ... unproven
40/49 ... [DEAD] line 108, false ... unproven
41/49 ... [DEAD] line 115, false ... unproven
42/49 ... [DEAD] line 116, false ... unproven
43/49 ... [DEAD] line 144, false ... unproven
44/49 ... [DEAD] line 145, false ... unproven
45/49 ... [DEAD] line 148, false ... unproven
46/49 ... [DEAD] line 150, false ... unproven
47/49 ... [DEAD] line 157, false ... unproven
48/49 ... [DEAD] line 160, false ... unproven
49/49 ... [DEAD] line 165, false ... unproven
took 27.280938s


===== Vulnerability Report =====
[1] [IO] line 3, (a + b) : proven
[2] [IO] line 4, (a + b) : proven
[3] [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) : proven
[4] [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) : proven
[5] [IO] line 82, ((roundIndex + 1) * blocksPerRound) : proven
[6] [IO] line 82, (roundIndex + 1) : proven
[7] [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) : unproven
[8] [IO] line 83, ((roundIndex + 1) * blocksPerRound) : proven
[9] [IO] line 83, (roundIndex + 1) : proven
[10] [IO] line 90, (subpotsCount + 1) : unproven
[11] [IO] line 146, (msg.value - (msg.value % ticketPrice)) : proven
[12] [IO] line 152, (msg.value - value) : proven
[13] [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) : proven
[14] [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) : proven
[15] [IO] line 161, (rounds[roundIndex].buyers.length + 1) : proven
[16] [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) : proven
[17] [IO] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) : proven
[18] [IO] line 167, (rounds[roundIndex].ticketsCount + ticketsCount) : unproven
[19] [IO] line 170, (rounds[roundIndex].pot + value) : unproven
[20] [ETH_LEAK] line 119, winner.send(subpot); : unproven
[21] [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 4, (@pre18 == c) : unproven
[2] [NO_EFFECT] line 65, (@pre5 == winningTicketIndex) : unproven
[3] [NO_EFFECT] line 68, (@pre4 == ticketIndex) : unproven
[4] [NO_EFFECT] line 71, (@pre3 == buyer) : unproven
[5] [NO_EFFECT] line 73, (@pre2 == ticketIndex) : unproven
[6] [NO_EFFECT] line 87, (@pre7 == subpotsCount) : unproven
[7] [NO_EFFECT] line 90, (@pre6 == subpotsCount) : unproven
[8] [NO_EFFECT] line 146, (@pre17 == value) : unproven
[9] [NO_EFFECT] line 156, (@pre16 == ticketsCount) : unproven
[10] [NO_EFFECT] line 158, (@pre15 == rounds[roundIndex].ticketsCount) : unproven
[11] [NO_EFFECT] line 161, (@pre12 == buyersLength) : unproven
[12] [NO_EFFECT] line 161, (@pre13 == rounds[roundIndex].buyers.length) : unproven
[13] [NO_EFFECT] line 161, (@pre14 == Tmp3) : unproven
[14] [NO_EFFECT] line 162, (@pre11 == rounds[roundIndex].buyers[buyersLength]) : unproven
[15] [NO_EFFECT] line 166, (@pre10 == rounds[roundIndex].ticketsCountByBuyer[msg.sender]) : unproven
[16] [NO_EFFECT] line 167, (@pre9 == rounds[roundIndex].ticketsCount) : unproven
[17] [NO_EFFECT] line 170, (@pre8 == rounds[roundIndex].pot) : unproven
[18] [ASSIGN_CONST] line 4, (c == 0) : unproven
[19] [ASSIGN_CONST] line 73, (ticketIndex == 0) : unproven
[20] [ASSIGN_CONST] line 90, (subpotsCount == 0) : unproven
[21] [ASSIGN_CONST] line 146, (value == 0) : unproven
[22] [ASSIGN_CONST] line 158, (rounds[roundIndex].ticketsCount == 0) : unproven
[23] [ASSIGN_CONST] line 161, (rounds[roundIndex].buyers.length == 0) : unproven
[24] [ASSIGN_CONST] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] == 0) : unproven
[25] [ASSIGN_CONST] line 167, (rounds[roundIndex].ticketsCount == 0) : unproven
[26] [ASSIGN_CONST] line 170, (rounds[roundIndex].pot == 0) : unproven
[27] [DEAD] line 3, false : unproven
[28] [DEAD] line 58, false : unproven
[29] [DEAD] line 60, false : unproven
[30] [DEAD] line 64, false : unproven
[31] [DEAD] line 70, false : unproven
[32] [DEAD] line 72, false : unproven
[33] [DEAD] line 75, false : unproven
[34] [DEAD] line 82, false : unproven
[35] [DEAD] line 89, false : unproven
[36] [DEAD] line 96, false : unproven
[37] [DEAD] line 101, false : unproven
[38] [DEAD] line 103, false : unproven
[39] [DEAD] line 106, false : unproven
[40] [DEAD] line 108, false : unproven
[41] [DEAD] line 115, false : unproven
[42] [DEAD] line 116, false : unproven
[43] [DEAD] line 144, false : unproven
[44] [DEAD] line 145, false : unproven
[45] [DEAD] line 148, false : unproven
[46] [DEAD] line 150, false : unproven
[47] [DEAD] line 157, false : unproven
[48] [DEAD] line 160, false : unproven
[49] [DEAD] line 165, false : unproven

============ Statistics ============
# Iter                    : 42
# Alarm / Query           : 6 / 21
- integer over/underflow  : 4 / 19
- kill-anyone             : 0 / 0
- ether-leaking           : 2 / 2
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 0

Time Elapsed (Real) : 179.007339001
Time Elapsed (CPU)  : 179.058599
