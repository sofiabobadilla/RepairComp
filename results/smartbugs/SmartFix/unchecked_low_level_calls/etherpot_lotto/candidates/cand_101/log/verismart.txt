[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 21
[INFO] reachable : 18
[INFO] Generating Paths ... took 0.001867s
[INFO] # path : 94

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.008773s
Generating VCs ... took 0.046845s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.171131
[
0 -> true
47 -> true
]
[
]
1/20 ... [IO] line 3, (a + b) ... proven
2/20 ... [IO] line 4, (a + b) ... proven
3/20 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/20 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/20 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/20 ... [IO] line 82, (roundIndex + 1) ... proven
7/20 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/20 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/20 ... [IO] line 83, (roundIndex + 1) ... proven
10/20 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/20 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/20 ... [IO] line 152, (msg.value - value) ... proven
13/20 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/20 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/20 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/20 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... unproven
17/20 ... [IO] line 166, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
18/20 ... [IO] line 169, (rounds[roundIndex].pot + value) ... unproven
19/20 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
20/20 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 65.782072s

Generating VCs ... took 0.044026s
Checking validity of VCs ... took 0.06227s

Generating VCs ... took 0.043594s
Checking validity of VCs ... took 0.029027s

Generating VCs ... took 0.04467s
Checking validity of VCs ... took 0.050886s

Generating VCs ... took 0.044335s
Checking validity of VCs ... took 0.040885s

Generating VCs ... took 0.044213s
Checking validity of VCs ... took 0.061615s

Generating VCs ... took 0.044044s
Checking validity of VCs ... took 0.050976s

Generating VCs ... took 0.044678s
Checking validity of VCs ... took 0.040835s

Generating VCs ... took 0.044634s
Checking validity of VCs ... took 0.059662s

Iter : 10 To explore : 254 Explored : 263 Total elapsed : 66.722655
Generating VCs ... took 0.043632s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 10 Total elapsed : 66.80054
[
0 -> (blocksPerRound__@33 == 6800)
47 -> (blocksPerRound__@33 == 6800)
]
[
]
1/20 ... [IO] line 3, (a + b) ... proven
2/20 ... [IO] line 4, (a + b) ... proven
3/20 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/20 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/20 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/20 ... [IO] line 82, (roundIndex + 1) ... proven
7/20 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/20 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/20 ... [IO] line 83, (roundIndex + 1) ... proven
10/20 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/20 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/20 ... [IO] line 152, (msg.value - value) ... proven
13/20 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/20 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/20 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/20 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... unproven
17/20 ... [IO] line 166, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
18/20 ... [IO] line 169, (rounds[roundIndex].pot + value) ... unproven
19/20 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
20/20 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 6.575716s

Generating VCs ... took 0.050561s
Checking validity of VCs ... took 1.388685s

Generating VCs ... took 0.044799s
Checking validity of VCs ... took 1.444539s

Generating VCs ... took 0.044937s
Checking validity of VCs ... took 1.396766s

Generating VCs ... took 0.043998s
Checking validity of VCs ... took 1.429931s

Generating VCs ... took 0.048782s
Checking validity of VCs ... took 1.379142s

Generating VCs ... took 0.044639s
Checking validity of VCs ... took 1.383782s

Generating VCs ... took 0.048743s
Checking validity of VCs ... took 1.363727s

Generating VCs ... took 0.044866s
Checking validity of VCs ... took 1.377675s

Generating VCs ... took 0.04472s
Checking validity of VCs ... took 1.425114s

Iter : 20 To explore : 155 Explored : 422 Total elapsed : 86.426666
Generating VCs ... took 0.04485s
Checking validity of VCs ... took 1.461074s

Generating VCs ... took 0.044808s
Checking validity of VCs ... took 1.462895s

Generating VCs ... took 0.044864s
Checking validity of VCs ... took 1.420257s

Generating VCs ... took 0.044591s
Checking validity of VCs ... took 1.465766s

Generating VCs ... took 0.044764s
Checking validity of VCs ... took 1.406532s

Generating VCs ... took 0.047517s
Checking validity of VCs ... took 1.463198s

Generating VCs ... took 0.045042s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 26 Total elapsed : 96.839684
[
0 -> ((blockReward__@39 == 5000000000000000000) /\ (blocksPerRound__@33 == 6800))
47 -> ((blockReward__@39 == 5000000000000000000) /\ (blocksPerRound__@33 == 6800))
]
[
]
1/20 ... [IO] line 3, (a + b) ... proven
2/20 ... [IO] line 4, (a + b) ... proven
3/20 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/20 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/20 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/20 ... [IO] line 82, (roundIndex + 1) ... proven
7/20 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/20 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/20 ... [IO] line 83, (roundIndex + 1) ... proven
10/20 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/20 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/20 ... [IO] line 152, (msg.value - value) ... proven
13/20 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/20 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/20 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/20 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... unproven
17/20 ... [IO] line 166, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
18/20 ... [IO] line 169, (rounds[roundIndex].pot + value) ... unproven
19/20 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
20/20 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 8.49169s

Generating VCs ... took 0.049529s
Checking validity of VCs ... took 1.608814s

Generating VCs ... took 0.044804s
Checking validity of VCs ... took 1.59475s

Generating VCs ... took 0.049142s
Checking validity of VCs ... took 1.583462s

Iter : 30 To explore : 82 Explored : 622 Total elapsed : 108.938632
Generating VCs ... took 0.044484s
Checking validity of VCs ... took 1.591759s

Generating VCs ... took 0.044678s
Checking validity of VCs ... took 1.620567s

Generating VCs ... took 0.044317s
Checking validity of VCs ... took 1.611464s

Generating VCs ... took 0.044643s
Checking validity of VCs ... took 1.627471s

Generating VCs ... took 0.045174s
Checking validity of VCs ... took 1.513308s

Generating VCs ... took 0.044658s
Checking validity of VCs ... took 1.532274s

Generating VCs ... took 0.048186s
Checking validity of VCs ... took 1.525287s

Generating VCs ... took 0.044794s
Checking validity of VCs ... took 1.560269s

Generating VCs ... took 0.044664s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 38 Total elapsed : 123.541956
[
0 -> (((blockReward__@39 == 5000000000000000000) /\ (blocksPerRound__@33 == 6800)) /\ (ticketPrice__@36 == 100000000000000000))
47 -> (((blockReward__@39 == 5000000000000000000) /\ (blocksPerRound__@33 == 6800)) /\ (ticketPrice__@36 == 100000000000000000))
]
[
]
1/20 ... [IO] line 3, (a + b) ... proven
2/20 ... [IO] line 4, (a + b) ... proven
3/20 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/20 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/20 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/20 ... [IO] line 82, (roundIndex + 1) ... proven
7/20 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/20 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/20 ... [IO] line 83, (roundIndex + 1) ... proven
10/20 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/20 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/20 ... [IO] line 152, (msg.value - value) ... proven
13/20 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/20 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/20 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/20 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... unproven
17/20 ... [IO] line 166, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
18/20 ... [IO] line 169, (rounds[roundIndex].pot + value) ... unproven
19/20 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
20/20 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 7.729535s

Generating VCs ... took 0.046271s
Checking validity of VCs ... took 1.744246s

Iter : 40 To explore : 5 Explored : 632 Total elapsed : 131.520658
Generating VCs ... took 0.045685s
Checking validity of VCs ... took 1.711302s

Generating VCs ... took 0.045113s
Checking validity of VCs ... took 1.768882s

Generating VCs ... took 0.045026s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 42 Total elapsed : 136.84279
[
0 -> ((((blockReward__@39 >= ticketPrice__@36) /\ (blockReward__@39 == 5000000000000000000)) /\ (blocksPerRound__@33 == 6800)) /\ (ticketPrice__@36 == 100000000000000000))
47 -> ((((blockReward__@39 >= ticketPrice__@36) /\ (blockReward__@39 == 5000000000000000000)) /\ (blocksPerRound__@33 == 6800)) /\ (ticketPrice__@36 == 100000000000000000))
]
[
]
1/20 ... [IO] line 3, (a + b) ... proven
2/20 ... [IO] line 4, (a + b) ... proven
3/20 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/20 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/20 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/20 ... [IO] line 82, (roundIndex + 1) ... proven
7/20 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/20 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/20 ... [IO] line 83, (roundIndex + 1) ... proven
10/20 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/20 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/20 ... [IO] line 152, (msg.value - value) ... proven
13/20 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/20 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/20 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/20 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... unproven
17/20 ... [IO] line 166, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
18/20 ... [IO] line 169, (rounds[roundIndex].pot + value) ... unproven
19/20 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
20/20 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 11.181096s

Generating VCs ... took 0.045034s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 43 Total elapsed : 148.309426
[
0 -> (((((blockReward__@39 >= blocksPerRound__@33) /\ (blockReward__@39 >= ticketPrice__@36)) /\ (blockReward__@39 == 5000000000000000000)) /\ (blocksPerRound__@33 == 6800)) /\ (ticketPrice__@36 == 100000000000000000))
47 -> (((((blockReward__@39 >= blocksPerRound__@33) /\ (blockReward__@39 >= ticketPrice__@36)) /\ (blockReward__@39 == 5000000000000000000)) /\ (blocksPerRound__@33 == 6800)) /\ (ticketPrice__@36 == 100000000000000000))
]
[
]
1/20 ... [IO] line 3, (a + b) ... proven
2/20 ... [IO] line 4, (a + b) ... proven
3/20 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/20 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/20 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/20 ... [IO] line 82, (roundIndex + 1) ... proven
7/20 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/20 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/20 ... [IO] line 83, (roundIndex + 1) ... proven
10/20 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/20 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/20 ... [IO] line 152, (msg.value - value) ... proven
13/20 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/20 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/20 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/20 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... unproven
17/20 ... [IO] line 166, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
18/20 ... [IO] line 169, (rounds[roundIndex].pot + value) ... unproven
19/20 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
20/20 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 7.949281s

Generating VCs ... took 0.011562s
Checking validity of VCs ... 
1/48 ... [NO_EFFECT] line 4, (@pre18 == c) ... unproven
2/48 ... [NO_EFFECT] line 65, (@pre5 == winningTicketIndex) ... unproven
3/48 ... [NO_EFFECT] line 68, (@pre4 == ticketIndex) ... unproven
4/48 ... [NO_EFFECT] line 71, (@pre3 == buyer) ... unproven
5/48 ... [NO_EFFECT] line 73, (@pre2 == ticketIndex) ... unproven
6/48 ... [NO_EFFECT] line 87, (@pre7 == subpotsCount) ... unproven
7/48 ... [NO_EFFECT] line 90, (@pre6 == subpotsCount) ... unproven
8/48 ... [NO_EFFECT] line 146, (@pre17 == value) ... unproven
9/48 ... [NO_EFFECT] line 156, (@pre16 == ticketsCount) ... unproven
10/48 ... [NO_EFFECT] line 158, (@pre15 == rounds[roundIndex].ticketsCount) ... unproven
11/48 ... [NO_EFFECT] line 161, (@pre12 == buyersLength) ... unproven
12/48 ... [NO_EFFECT] line 161, (@pre13 == rounds[roundIndex].buyers.length) ... unproven
13/48 ... [NO_EFFECT] line 161, (@pre14 == Tmp3) ... unproven
14/48 ... [NO_EFFECT] line 162, (@pre11 == rounds[roundIndex].buyers[buyersLength]) ... unproven
15/48 ... [NO_EFFECT] line 165, (@pre10 == rounds[roundIndex].ticketsCountByBuyer[msg.sender]) ... unproven
16/48 ... [NO_EFFECT] line 166, (@pre9 == rounds[roundIndex].ticketsCount) ... unproven
17/48 ... [NO_EFFECT] line 169, (@pre8 == rounds[roundIndex].pot) ... unproven
18/48 ... [ASSIGN_CONST] line 4, (c == 0) ... unproven
19/48 ... [ASSIGN_CONST] line 73, (ticketIndex == 0) ... unproven
20/48 ... [ASSIGN_CONST] line 90, (subpotsCount == 0) ... unproven
21/48 ... [ASSIGN_CONST] line 146, (value == 0) ... unproven
22/48 ... [ASSIGN_CONST] line 158, (rounds[roundIndex].ticketsCount == 0) ... unproven
23/48 ... [ASSIGN_CONST] line 161, (rounds[roundIndex].buyers.length == 0) ... unproven
24/48 ... [ASSIGN_CONST] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] == 0) ... unproven
25/48 ... [ASSIGN_CONST] line 166, (rounds[roundIndex].ticketsCount == 0) ... unproven
26/48 ... [ASSIGN_CONST] line 169, (rounds[roundIndex].pot == 0) ... unproven
27/48 ... [DEAD] line 3, false ... unproven
28/48 ... [DEAD] line 58, false ... unproven
29/48 ... [DEAD] line 60, false ... unproven
30/48 ... [DEAD] line 64, false ... unproven
31/48 ... [DEAD] line 70, false ... unproven
32/48 ... [DEAD] line 72, false ... unproven
33/48 ... [DEAD] line 75, false ... unproven
34/48 ... [DEAD] line 82, false ... unproven
35/48 ... [DEAD] line 89, false ... unproven
36/48 ... [DEAD] line 96, false ... unproven
37/48 ... [DEAD] line 101, false ... unproven
38/48 ... [DEAD] line 103, false ... unproven
39/48 ... [DEAD] line 106, false ... unproven
40/48 ... [DEAD] line 108, false ... unproven
41/48 ... [DEAD] line 115, false ... unproven
42/48 ... [DEAD] line 116, false ... unproven
43/48 ... [DEAD] line 144, false ... unproven
44/48 ... [DEAD] line 145, false ... unproven
45/48 ... [DEAD] line 148, false ... unproven
46/48 ... [DEAD] line 150, false ... unproven
47/48 ... [DEAD] line 157, false ... unproven
48/48 ... [DEAD] line 160, false ... unproven
took 22.174727s


===== Vulnerability Report =====
[1] [IO] line 3, (a + b) : proven
[2] [IO] line 4, (a + b) : proven
[3] [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) : proven
[4] [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) : proven
[5] [IO] line 82, ((roundIndex + 1) * blocksPerRound) : proven
[6] [IO] line 82, (roundIndex + 1) : proven
[7] [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) : unproven
[8] [IO] line 83, ((roundIndex + 1) * blocksPerRound) : proven
[9] [IO] line 83, (roundIndex + 1) : proven
[10] [IO] line 90, (subpotsCount + 1) : unproven
[11] [IO] line 146, (msg.value - (msg.value % ticketPrice)) : proven
[12] [IO] line 152, (msg.value - value) : proven
[13] [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) : proven
[14] [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) : proven
[15] [IO] line 161, (rounds[roundIndex].buyers.length + 1) : proven
[16] [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) : unproven
[17] [IO] line 166, (rounds[roundIndex].ticketsCount + ticketsCount) : unproven
[18] [IO] line 169, (rounds[roundIndex].pot + value) : unproven
[19] [ETH_LEAK] line 119, winner.send(subpot); : unproven
[20] [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 4, (@pre18 == c) : unproven
[2] [NO_EFFECT] line 65, (@pre5 == winningTicketIndex) : unproven
[3] [NO_EFFECT] line 68, (@pre4 == ticketIndex) : unproven
[4] [NO_EFFECT] line 71, (@pre3 == buyer) : unproven
[5] [NO_EFFECT] line 73, (@pre2 == ticketIndex) : unproven
[6] [NO_EFFECT] line 87, (@pre7 == subpotsCount) : unproven
[7] [NO_EFFECT] line 90, (@pre6 == subpotsCount) : unproven
[8] [NO_EFFECT] line 146, (@pre17 == value) : unproven
[9] [NO_EFFECT] line 156, (@pre16 == ticketsCount) : unproven
[10] [NO_EFFECT] line 158, (@pre15 == rounds[roundIndex].ticketsCount) : unproven
[11] [NO_EFFECT] line 161, (@pre12 == buyersLength) : unproven
[12] [NO_EFFECT] line 161, (@pre13 == rounds[roundIndex].buyers.length) : unproven
[13] [NO_EFFECT] line 161, (@pre14 == Tmp3) : unproven
[14] [NO_EFFECT] line 162, (@pre11 == rounds[roundIndex].buyers[buyersLength]) : unproven
[15] [NO_EFFECT] line 165, (@pre10 == rounds[roundIndex].ticketsCountByBuyer[msg.sender]) : unproven
[16] [NO_EFFECT] line 166, (@pre9 == rounds[roundIndex].ticketsCount) : unproven
[17] [NO_EFFECT] line 169, (@pre8 == rounds[roundIndex].pot) : unproven
[18] [ASSIGN_CONST] line 4, (c == 0) : unproven
[19] [ASSIGN_CONST] line 73, (ticketIndex == 0) : unproven
[20] [ASSIGN_CONST] line 90, (subpotsCount == 0) : unproven
[21] [ASSIGN_CONST] line 146, (value == 0) : unproven
[22] [ASSIGN_CONST] line 158, (rounds[roundIndex].ticketsCount == 0) : unproven
[23] [ASSIGN_CONST] line 161, (rounds[roundIndex].buyers.length == 0) : unproven
[24] [ASSIGN_CONST] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] == 0) : unproven
[25] [ASSIGN_CONST] line 166, (rounds[roundIndex].ticketsCount == 0) : unproven
[26] [ASSIGN_CONST] line 169, (rounds[roundIndex].pot == 0) : unproven
[27] [DEAD] line 3, false : unproven
[28] [DEAD] line 58, false : unproven
[29] [DEAD] line 60, false : unproven
[30] [DEAD] line 64, false : unproven
[31] [DEAD] line 70, false : unproven
[32] [DEAD] line 72, false : unproven
[33] [DEAD] line 75, false : unproven
[34] [DEAD] line 82, false : unproven
[35] [DEAD] line 89, false : unproven
[36] [DEAD] line 96, false : unproven
[37] [DEAD] line 101, false : unproven
[38] [DEAD] line 103, false : unproven
[39] [DEAD] line 106, false : unproven
[40] [DEAD] line 108, false : unproven
[41] [DEAD] line 115, false : unproven
[42] [DEAD] line 116, false : unproven
[43] [DEAD] line 144, false : unproven
[44] [DEAD] line 145, false : unproven
[45] [DEAD] line 148, false : unproven
[46] [DEAD] line 150, false : unproven
[47] [DEAD] line 157, false : unproven
[48] [DEAD] line 160, false : unproven

============ Statistics ============
# Iter                    : 43
# Alarm / Query           : 7 / 20
- integer over/underflow  : 5 / 18
- kill-anyone             : 0 / 0
- ether-leaking           : 2 / 2
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 0

Time Elapsed (Real) : 176.555214882
Time Elapsed (CPU)  : 176.610997
