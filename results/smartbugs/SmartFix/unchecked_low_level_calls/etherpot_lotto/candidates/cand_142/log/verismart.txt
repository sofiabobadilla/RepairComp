[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 23
[INFO] reachable : 19
[INFO] Generating Paths ... took 0.002497s
[INFO] # path : 116

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.011252s
Generating VCs ... took 0.065126s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.212794
[
0 -> true
50 -> true
]
[
]
1/23 ... [IO] line 3, (a + b) ... proven
2/23 ... [IO] line 4, (a + b) ... proven
3/23 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/23 ... [IO] line 74, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/23 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
6/23 ... [IO] line 83, (roundIndex + 1) ... proven
7/23 ... [IO] line 84, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/23 ... [IO] line 84, ((roundIndex + 1) * blocksPerRound) ... proven
9/23 ... [IO] line 84, (roundIndex + 1) ... proven
10/23 ... [IO] line 91, (subpotsCount + 1) ... unproven
11/23 ... [IO] line 148, (msg.value - (msg.value % ticketPrice)) ... proven
12/23 ... [IO] line 154, (msg.value - value) ... proven
13/23 ... [IO] line 159, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/23 ... [IO] line 160, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/23 ... [IO] line 163, (rounds[roundIndex].buyers.length + 1) ... proven
16/23 ... [IO] line 167, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
17/23 ... [IO] line 168, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
18/23 ... [IO] line 169, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
19/23 ... [IO] line 172, (rounds[roundIndex].pot + value) ... proven
20/23 ... [IO] line 173, (rounds[roundIndex].pot + value) ... proven
21/23 ... [ETH_LEAK] line 121, winner.send(subpot); ... unproven
22/23 ... [ETH_LEAK] line 154, msg.sender.send((msg.value - value)); ... unproven
23/23 ... [TX_ORG] line 102, assume((smartfix_owner == msg.sender)); ... proven
took 92.704977s

Generating VCs ... took 0.063314s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 93.032577
[
0 -> (Read(@TU, smartfix_owner__@30) == true)
50 -> (Read(@TU, smartfix_owner__@30) == true)
]
[
]
1/23 ... [IO] line 3, (a + b) ... proven
2/23 ... [IO] line 4, (a + b) ... proven
3/23 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/23 ... [IO] line 74, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/23 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
6/23 ... [IO] line 83, (roundIndex + 1) ... proven
7/23 ... [IO] line 84, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/23 ... [IO] line 84, ((roundIndex + 1) * blocksPerRound) ... proven
9/23 ... [IO] line 84, (roundIndex + 1) ... proven
10/23 ... [IO] line 91, (subpotsCount + 1) ... unproven
11/23 ... [IO] line 148, (msg.value - (msg.value % ticketPrice)) ... proven
12/23 ... [IO] line 154, (msg.value - value) ... proven
13/23 ... [IO] line 159, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/23 ... [IO] line 160, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/23 ... [IO] line 163, (rounds[roundIndex].buyers.length + 1) ... proven
16/23 ... [IO] line 167, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
17/23 ... [IO] line 168, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
18/23 ... [IO] line 169, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
19/23 ... [IO] line 172, (rounds[roundIndex].pot + value) ... proven
20/23 ... [IO] line 173, (rounds[roundIndex].pot + value) ... proven
21/23 ... [ETH_LEAK] line 121, winner.send(subpot); ... unproven
22/23 ... [ETH_LEAK] line 154, msg.sender.send((msg.value - value)); ... unproven
23/23 ... [TX_ORG] line 102, assume((smartfix_owner == msg.sender)); ... proven
took 7.956932s

Generating VCs ... took 0.065614s
Checking validity of VCs ... took 1.571995s

Generating VCs ... took 0.063199s
Checking validity of VCs ... took 0.039306s

Generating VCs ... took 0.067887s
Checking validity of VCs ... took 1.584146s

Generating VCs ... took 0.064187s
Checking validity of VCs ... took 1.580306s

Generating VCs ... took 0.063048s
Checking validity of VCs ... took 1.563074s

Generating VCs ... took 0.064075s
Checking validity of VCs ... took 1.64313s

Generating VCs ... took 0.062332s
Checking validity of VCs ... took 1.58627s

Iter : 10 To explore : 238 Explored : 298 Total elapsed : 111.048705
Generating VCs ... took 0.06276s
Checking validity of VCs ... took 1.611709s

Generating VCs ... took 0.06403s
Checking validity of VCs ... took 1.542021s

Generating VCs ... took 0.064199s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 12 Total elapsed : 115.974411
[
0 -> ((blockReward__@43 == 5000000000000000000) /\ (Read(@TU, smartfix_owner__@30) == true))
50 -> ((blockReward__@43 == 5000000000000000000) /\ (Read(@TU, smartfix_owner__@30) == true))
]
[
]
1/23 ... [IO] line 3, (a + b) ... proven
2/23 ... [IO] line 4, (a + b) ... proven
3/23 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/23 ... [IO] line 74, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/23 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
6/23 ... [IO] line 83, (roundIndex + 1) ... proven
7/23 ... [IO] line 84, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/23 ... [IO] line 84, ((roundIndex + 1) * blocksPerRound) ... proven
9/23 ... [IO] line 84, (roundIndex + 1) ... proven
10/23 ... [IO] line 91, (subpotsCount + 1) ... unproven
11/23 ... [IO] line 148, (msg.value - (msg.value % ticketPrice)) ... proven
12/23 ... [IO] line 154, (msg.value - value) ... proven
13/23 ... [IO] line 159, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/23 ... [IO] line 160, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/23 ... [IO] line 163, (rounds[roundIndex].buyers.length + 1) ... proven
16/23 ... [IO] line 167, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
17/23 ... [IO] line 168, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
18/23 ... [IO] line 169, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
19/23 ... [IO] line 172, (rounds[roundIndex].pot + value) ... proven
20/23 ... [IO] line 173, (rounds[roundIndex].pot + value) ... proven
21/23 ... [ETH_LEAK] line 121, winner.send(subpot); ... unproven
22/23 ... [ETH_LEAK] line 154, msg.sender.send((msg.value - value)); ... unproven
23/23 ... [TX_ORG] line 102, assume((smartfix_owner == msg.sender)); ... proven
took 9.467798s

Generating VCs ... took 0.064648s
Checking validity of VCs ... took 1.817079s

Generating VCs ... took 0.06278s
Checking validity of VCs ... took 1.709318s

Generating VCs ... took 0.063628s
Checking validity of VCs ... took 1.721342s

Generating VCs ... took 0.063867s
Checking validity of VCs ... took 1.829447s

Generating VCs ... took 0.063546s
Checking validity of VCs ... took 1.713546s

Generating VCs ... took 0.063143s
Checking validity of VCs ... took 1.802251s

Generating VCs ... took 0.066891s
Checking validity of VCs ... took 1.713305s

Iter : 20 To explore : 168 Explored : 520 Total elapsed : 136.729847
Generating VCs ... took 0.081837s
Checking validity of VCs ... took 1.765847s

Generating VCs ... took 0.064461s
Checking validity of VCs ... took 1.762909s

Generating VCs ... took 0.064109s
Checking validity of VCs ... took 1.819841s

Generating VCs ... took 0.063983s
Checking validity of VCs ... took 1.861501s

Generating VCs ... took 0.064352s
Checking validity of VCs ... took 1.811235s

Generating VCs ... took 0.064326s
Checking validity of VCs ... took 1.74937s

Generating VCs ... took 0.063487s
Checking validity of VCs ... took 1.863623s

Generating VCs ... took 0.063657s
Checking validity of VCs ... took 1.694577s

Generating VCs ... took 0.020407s
Checking validity of VCs ... 
1/51 ... [NO_EFFECT] line 4, (@pre18 == c) ... unproven
2/51 ... [NO_EFFECT] line 66, (@pre5 == winningTicketIndex) ... unproven
3/51 ... [NO_EFFECT] line 69, (@pre4 == ticketIndex) ... unproven
4/51 ... [NO_EFFECT] line 72, (@pre3 == buyer) ... unproven
5/51 ... [NO_EFFECT] line 74, (@pre2 == ticketIndex) ... unproven
6/51 ... [NO_EFFECT] line 88, (@pre7 == subpotsCount) ... unproven
7/51 ... [NO_EFFECT] line 91, (@pre6 == subpotsCount) ... unproven
8/51 ... [NO_EFFECT] line 148, (@pre17 == value) ... unproven
9/51 ... [NO_EFFECT] line 158, (@pre16 == ticketsCount) ... unproven
10/51 ... [NO_EFFECT] line 160, (@pre15 == rounds[roundIndex].ticketsCount) ... unproven
11/51 ... [NO_EFFECT] line 163, (@pre12 == buyersLength) ... unproven
12/51 ... [NO_EFFECT] line 163, (@pre13 == rounds[roundIndex].buyers.length) ... unproven
13/51 ... [NO_EFFECT] line 163, (@pre14 == Tmp3) ... unproven
14/51 ... [NO_EFFECT] line 164, (@pre11 == rounds[roundIndex].buyers[buyersLength]) ... unproven
15/51 ... [NO_EFFECT] line 168, (@pre10 == rounds[roundIndex].ticketsCountByBuyer[msg.sender]) ... unproven
16/51 ... [NO_EFFECT] line 169, (@pre9 == rounds[roundIndex].ticketsCount) ... unproven
17/51 ... [NO_EFFECT] line 173, (@pre8 == rounds[roundIndex].pot) ... unproven
18/51 ... [ASSIGN_CONST] line 4, (c == 0) ... unproven
19/51 ... [ASSIGN_CONST] line 74, (ticketIndex == 0) ... unproven
20/51 ... [ASSIGN_CONST] line 91, (subpotsCount == 0) ... unproven
21/51 ... [ASSIGN_CONST] line 148, (value == 0) ... unproven
22/51 ... [ASSIGN_CONST] line 160, (rounds[roundIndex].ticketsCount == 0) ... unproven
23/51 ... [ASSIGN_CONST] line 163, (rounds[roundIndex].buyers.length == 0) ... unproven
24/51 ... [ASSIGN_CONST] line 168, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] == 0) ... unproven
25/51 ... [ASSIGN_CONST] line 169, (rounds[roundIndex].ticketsCount == 0) ... unproven
26/51 ... [ASSIGN_CONST] line 173, (rounds[roundIndex].pot == 0) ... unproven
27/51 ... [DEAD] line 3, false ... unproven
28/51 ... [DEAD] line 59, false ... unproven
29/51 ... [DEAD] line 61, false ... unproven
30/51 ... [DEAD] line 65, false ... unproven
31/51 ... [DEAD] line 71, false ... unproven
32/51 ... [DEAD] line 73, false ... unproven
33/51 ... [DEAD] line 76, false ... unproven
34/51 ... [DEAD] line 83, false ... unproven
35/51 ... [DEAD] line 90, false ... unproven
36/51 ... [DEAD] line 97, false ... unproven
37/51 ... [DEAD] line 102, false ... unproven
38/51 ... [DEAD] line 103, false ... unproven
39/51 ... [DEAD] line 105, false ... unproven
40/51 ... [DEAD] line 108, false ... unproven
41/51 ... [DEAD] line 110, false ... unproven
42/51 ... [DEAD] line 117, false ... unproven
43/51 ... [DEAD] line 118, false ... unproven
44/51 ... [DEAD] line 146, false ... unproven
45/51 ... [DEAD] line 147, false ... unproven
46/51 ... [DEAD] line 150, false ... unproven
47/51 ... [DEAD] line 152, false ... unproven
48/51 ... [DEAD] line 159, false ... unproven
49/51 ... [DEAD] line 162, false ... unproven
50/51 ... [DEAD] line 167, false ... unproven
51/51 ... [DEAD] line 172, false ... unproven
took 33.579772s


===== Vulnerability Report =====
[1] [IO] line 3, (a + b) : proven
[2] [IO] line 4, (a + b) : proven
[3] [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) : proven
[4] [IO] line 74, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) : proven
[5] [IO] line 83, ((roundIndex + 1) * blocksPerRound) : proven
[6] [IO] line 83, (roundIndex + 1) : proven
[7] [IO] line 84, (((roundIndex + 1) * blocksPerRound) + subpotIndex) : unproven
[8] [IO] line 84, ((roundIndex + 1) * blocksPerRound) : proven
[9] [IO] line 84, (roundIndex + 1) : proven
[10] [IO] line 91, (subpotsCount + 1) : unproven
[11] [IO] line 148, (msg.value - (msg.value % ticketPrice)) : proven
[12] [IO] line 154, (msg.value - value) : proven
[13] [IO] line 159, (rounds[roundIndex].ticketsCount + ticketsCount) : proven
[14] [IO] line 160, (rounds[roundIndex].ticketsCount + ticketsCount) : proven
[15] [IO] line 163, (rounds[roundIndex].buyers.length + 1) : proven
[16] [IO] line 167, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) : proven
[17] [IO] line 168, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) : proven
[18] [IO] line 169, (rounds[roundIndex].ticketsCount + ticketsCount) : unproven
[19] [IO] line 172, (rounds[roundIndex].pot + value) : proven
[20] [IO] line 173, (rounds[roundIndex].pot + value) : proven
[21] [ETH_LEAK] line 121, winner.send(subpot); : unproven
[22] [ETH_LEAK] line 154, msg.sender.send((msg.value - value)); : unproven
[23] [TX_ORG] line 102, assume((smartfix_owner == msg.sender)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 4, (@pre18 == c) : unproven
[2] [NO_EFFECT] line 66, (@pre5 == winningTicketIndex) : unproven
[3] [NO_EFFECT] line 69, (@pre4 == ticketIndex) : unproven
[4] [NO_EFFECT] line 72, (@pre3 == buyer) : unproven
[5] [NO_EFFECT] line 74, (@pre2 == ticketIndex) : unproven
[6] [NO_EFFECT] line 88, (@pre7 == subpotsCount) : unproven
[7] [NO_EFFECT] line 91, (@pre6 == subpotsCount) : unproven
[8] [NO_EFFECT] line 148, (@pre17 == value) : unproven
[9] [NO_EFFECT] line 158, (@pre16 == ticketsCount) : unproven
[10] [NO_EFFECT] line 160, (@pre15 == rounds[roundIndex].ticketsCount) : unproven
[11] [NO_EFFECT] line 163, (@pre12 == buyersLength) : unproven
[12] [NO_EFFECT] line 163, (@pre13 == rounds[roundIndex].buyers.length) : unproven
[13] [NO_EFFECT] line 163, (@pre14 == Tmp3) : unproven
[14] [NO_EFFECT] line 164, (@pre11 == rounds[roundIndex].buyers[buyersLength]) : unproven
[15] [NO_EFFECT] line 168, (@pre10 == rounds[roundIndex].ticketsCountByBuyer[msg.sender]) : unproven
[16] [NO_EFFECT] line 169, (@pre9 == rounds[roundIndex].ticketsCount) : unproven
[17] [NO_EFFECT] line 173, (@pre8 == rounds[roundIndex].pot) : unproven
[18] [ASSIGN_CONST] line 4, (c == 0) : unproven
[19] [ASSIGN_CONST] line 74, (ticketIndex == 0) : unproven
[20] [ASSIGN_CONST] line 91, (subpotsCount == 0) : unproven
[21] [ASSIGN_CONST] line 148, (value == 0) : unproven
[22] [ASSIGN_CONST] line 160, (rounds[roundIndex].ticketsCount == 0) : unproven
[23] [ASSIGN_CONST] line 163, (rounds[roundIndex].buyers.length == 0) : unproven
[24] [ASSIGN_CONST] line 168, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] == 0) : unproven
[25] [ASSIGN_CONST] line 169, (rounds[roundIndex].ticketsCount == 0) : unproven
[26] [ASSIGN_CONST] line 173, (rounds[roundIndex].pot == 0) : unproven
[27] [DEAD] line 3, false : unproven
[28] [DEAD] line 59, false : unproven
[29] [DEAD] line 61, false : unproven
[30] [DEAD] line 65, false : unproven
[31] [DEAD] line 71, false : unproven
[32] [DEAD] line 73, false : unproven
[33] [DEAD] line 76, false : unproven
[34] [DEAD] line 83, false : unproven
[35] [DEAD] line 90, false : unproven
[36] [DEAD] line 97, false : unproven
[37] [DEAD] line 102, false : unproven
[38] [DEAD] line 103, false : unproven
[39] [DEAD] line 105, false : unproven
[40] [DEAD] line 108, false : unproven
[41] [DEAD] line 110, false : unproven
[42] [DEAD] line 117, false : unproven
[43] [DEAD] line 118, false : unproven
[44] [DEAD] line 146, false : unproven
[45] [DEAD] line 147, false : unproven
[46] [DEAD] line 150, false : unproven
[47] [DEAD] line 152, false : unproven
[48] [DEAD] line 159, false : unproven
[49] [DEAD] line 162, false : unproven
[50] [DEAD] line 167, false : unproven
[51] [DEAD] line 172, false : unproven

============ Statistics ============
# Iter                    : 27
# Alarm / Query           : 5 / 23
- integer over/underflow  : 3 / 20
- kill-anyone             : 0 / 0
- ether-leaking           : 2 / 2
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 1

Time Elapsed (Real) : 185.206869841
Time Elapsed (CPU)  : 185.228654
