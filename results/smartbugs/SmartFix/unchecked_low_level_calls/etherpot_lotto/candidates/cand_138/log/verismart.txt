[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 21
[INFO] reachable : 18
[INFO] Generating Paths ... took 0.002349s
[INFO] # path : 114

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.010897s
Generating VCs ... took 0.056092s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.192683
[
0 -> true
47 -> true
]
[
]
1/22 ... [IO] line 3, (a + b) ... proven
2/22 ... [IO] line 4, (a + b) ... proven
3/22 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/22 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/22 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/22 ... [IO] line 82, (roundIndex + 1) ... proven
7/22 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/22 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/22 ... [IO] line 83, (roundIndex + 1) ... proven
10/22 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/22 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/22 ... [IO] line 152, (msg.value - value) ... proven
13/22 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/22 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/22 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/22 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
17/22 ... [IO] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
18/22 ... [IO] line 167, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
19/22 ... [IO] line 170, (rounds[roundIndex].pot + value) ... proven
20/22 ... [IO] line 171, (rounds[roundIndex].pot + value) ... proven
21/22 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
22/22 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 73.396892s

Generating VCs ... took 0.054798s
Checking validity of VCs ... took 0.069021s

Generating VCs ... took 0.054954s
Checking validity of VCs ... took 0.032995s

Generating VCs ... took 0.061632s
Checking validity of VCs ... took 0.0546s

Generating VCs ... took 0.056739s
Checking validity of VCs ... took 0.044812s

Generating VCs ... took 0.056546s
Checking validity of VCs ... took 0.068371s

Generating VCs ... took 0.056034s
Checking validity of VCs ... took 0.05544s

Generating VCs ... took 0.058275s
Checking validity of VCs ... took 0.045801s

Generating VCs ... took 0.055913s
Checking validity of VCs ... took 0.068594s

Iter : 10 To explore : 254 Explored : 263 Total elapsed : 74.51124
Generating VCs ... took 0.057777s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 10 Total elapsed : 74.607735
[
0 -> (blocksPerRound__@33 == 6800)
47 -> (blocksPerRound__@33 == 6800)
]
[
]
1/22 ... [IO] line 3, (a + b) ... proven
2/22 ... [IO] line 4, (a + b) ... proven
3/22 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/22 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/22 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/22 ... [IO] line 82, (roundIndex + 1) ... proven
7/22 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/22 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/22 ... [IO] line 83, (roundIndex + 1) ... proven
10/22 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/22 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/22 ... [IO] line 152, (msg.value - value) ... proven
13/22 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/22 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/22 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/22 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
17/22 ... [IO] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
18/22 ... [IO] line 167, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
19/22 ... [IO] line 170, (rounds[roundIndex].pot + value) ... proven
20/22 ... [IO] line 171, (rounds[roundIndex].pot + value) ... proven
21/22 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
22/22 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 4.683184s

Generating VCs ... took 0.055744s
Checking validity of VCs ... took 1.421442s

Generating VCs ... took 0.055371s
Checking validity of VCs ... took 1.487573s

Generating VCs ... took 0.055756s
Checking validity of VCs ... took 1.492839s

Generating VCs ... took 0.056116s
Checking validity of VCs ... took 1.470077s

Generating VCs ... took 0.056173s
Checking validity of VCs ... took 1.474394s

Generating VCs ... took 0.055376s
Checking validity of VCs ... took 1.454397s

Generating VCs ... took 0.063681s
Checking validity of VCs ... took 1.473465s

Generating VCs ... took 0.055755s
Checking validity of VCs ... took 1.435846s

Generating VCs ... took 0.05594s
Checking validity of VCs ... took 1.510925s

Iter : 20 To explore : 155 Explored : 422 Total elapsed : 93.066996
Generating VCs ... took 0.057823s
Checking validity of VCs ... took 1.540117s

Generating VCs ... took 0.0564s
Checking validity of VCs ... took 1.511825s

Generating VCs ... took 0.055578s
Checking validity of VCs ... took 1.447909s

Generating VCs ... took 0.056116s
Checking validity of VCs ... took 1.532214s

Generating VCs ... took 0.061455s
Checking validity of VCs ... took 1.449706s

Generating VCs ... took 0.055624s
Checking validity of VCs ... took 1.512207s

Generating VCs ... took 0.056674s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 26 Total elapsed : 103.923249
[
0 -> ((blockReward__@39 == 5000000000000000000) /\ (blocksPerRound__@33 == 6800))
47 -> ((blockReward__@39 == 5000000000000000000) /\ (blocksPerRound__@33 == 6800))
]
[
]
1/22 ... [IO] line 3, (a + b) ... proven
2/22 ... [IO] line 4, (a + b) ... proven
3/22 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/22 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/22 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/22 ... [IO] line 82, (roundIndex + 1) ... proven
7/22 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/22 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/22 ... [IO] line 83, (roundIndex + 1) ... proven
10/22 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/22 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/22 ... [IO] line 152, (msg.value - value) ... proven
13/22 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/22 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/22 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/22 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
17/22 ... [IO] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
18/22 ... [IO] line 167, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
19/22 ... [IO] line 170, (rounds[roundIndex].pot + value) ... proven
20/22 ... [IO] line 171, (rounds[roundIndex].pot + value) ... proven
21/22 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
22/22 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 8.233672s

Generating VCs ... took 0.055939s
Checking validity of VCs ... took 1.678353s

Generating VCs ... took 0.063608s
Checking validity of VCs ... took 1.672387s

Generating VCs ... took 0.055334s
Checking validity of VCs ... took 1.68055s

Iter : 30 To explore : 82 Explored : 622 Total elapsed : 116.00605
Generating VCs ... took 0.055772s
Checking validity of VCs ... took 1.699047s

Generating VCs ... took 0.056111s
Checking validity of VCs ... took 1.691754s

Generating VCs ... took 0.056039s
Checking validity of VCs ... took 1.704552s

Generating VCs ... took 0.055541s
Checking validity of VCs ... took 1.668024s

Generating VCs ... took 0.057679s
Checking validity of VCs ... took 1.608549s

Generating VCs ... took 0.055843s
Checking validity of VCs ... took 1.62836s

Generating VCs ... took 0.056771s
Checking validity of VCs ... took 1.578056s

Generating VCs ... took 0.056226s
Checking validity of VCs ... took 1.634676s

Generating VCs ... took 0.056086s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 38 Total elapsed : 131.411661
[
0 -> (((blockReward__@39 == 5000000000000000000) /\ (blocksPerRound__@33 == 6800)) /\ (ticketPrice__@36 == 100000000000000000))
47 -> (((blockReward__@39 == 5000000000000000000) /\ (blocksPerRound__@33 == 6800)) /\ (ticketPrice__@36 == 100000000000000000))
]
[
]
1/22 ... [IO] line 3, (a + b) ... proven
2/22 ... [IO] line 4, (a + b) ... proven
3/22 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/22 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/22 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/22 ... [IO] line 82, (roundIndex + 1) ... proven
7/22 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/22 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/22 ... [IO] line 83, (roundIndex + 1) ... proven
10/22 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/22 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/22 ... [IO] line 152, (msg.value - value) ... proven
13/22 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/22 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/22 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/22 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
17/22 ... [IO] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
18/22 ... [IO] line 167, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
19/22 ... [IO] line 170, (rounds[roundIndex].pot + value) ... proven
20/22 ... [IO] line 171, (rounds[roundIndex].pot + value) ... proven
21/22 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
22/22 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 7.607038s

Generating VCs ... took 0.055166s
Checking validity of VCs ... took 1.844504s

Iter : 40 To explore : 5 Explored : 632 Total elapsed : 139.319326
Generating VCs ... took 0.056283s
Checking validity of VCs ... took 1.823376s

Generating VCs ... took 0.062116s
Checking validity of VCs ... took 1.848329s

Generating VCs ... took 0.055903s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 42 Total elapsed : 145.046126
[
0 -> ((((blockReward__@39 >= ticketPrice__@36) /\ (blockReward__@39 == 5000000000000000000)) /\ (blocksPerRound__@33 == 6800)) /\ (ticketPrice__@36 == 100000000000000000))
47 -> ((((blockReward__@39 >= ticketPrice__@36) /\ (blockReward__@39 == 5000000000000000000)) /\ (blocksPerRound__@33 == 6800)) /\ (ticketPrice__@36 == 100000000000000000))
]
[
]
1/22 ... [IO] line 3, (a + b) ... proven
2/22 ... [IO] line 4, (a + b) ... proven
3/22 ... [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
4/22 ... [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) ... proven
5/22 ... [IO] line 82, ((roundIndex + 1) * blocksPerRound) ... proven
6/22 ... [IO] line 82, (roundIndex + 1) ... proven
7/22 ... [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) ... unproven
8/22 ... [IO] line 83, ((roundIndex + 1) * blocksPerRound) ... proven
9/22 ... [IO] line 83, (roundIndex + 1) ... proven
10/22 ... [IO] line 90, (subpotsCount + 1) ... unproven
11/22 ... [IO] line 146, (msg.value - (msg.value % ticketPrice)) ... proven
12/22 ... [IO] line 152, (msg.value - value) ... proven
13/22 ... [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
14/22 ... [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) ... proven
15/22 ... [IO] line 161, (rounds[roundIndex].buyers.length + 1) ... proven
16/22 ... [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
17/22 ... [IO] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) ... proven
18/22 ... [IO] line 167, (rounds[roundIndex].ticketsCount + ticketsCount) ... unproven
19/22 ... [IO] line 170, (rounds[roundIndex].pot + value) ... proven
20/22 ... [IO] line 171, (rounds[roundIndex].pot + value) ... proven
21/22 ... [ETH_LEAK] line 119, winner.send(subpot); ... unproven
22/22 ... [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); ... unproven
took 9.096322s

Generating VCs ... took 0.0151s
Checking validity of VCs ... 
1/50 ... [NO_EFFECT] line 4, (@pre18 == c) ... unproven
2/50 ... [NO_EFFECT] line 65, (@pre5 == winningTicketIndex) ... unproven
3/50 ... [NO_EFFECT] line 68, (@pre4 == ticketIndex) ... unproven
4/50 ... [NO_EFFECT] line 71, (@pre3 == buyer) ... unproven
5/50 ... [NO_EFFECT] line 73, (@pre2 == ticketIndex) ... unproven
6/50 ... [NO_EFFECT] line 87, (@pre7 == subpotsCount) ... unproven
7/50 ... [NO_EFFECT] line 90, (@pre6 == subpotsCount) ... unproven
8/50 ... [NO_EFFECT] line 146, (@pre17 == value) ... unproven
9/50 ... [NO_EFFECT] line 156, (@pre16 == ticketsCount) ... unproven
10/50 ... [NO_EFFECT] line 158, (@pre15 == rounds[roundIndex].ticketsCount) ... unproven
11/50 ... [NO_EFFECT] line 161, (@pre12 == buyersLength) ... unproven
12/50 ... [NO_EFFECT] line 161, (@pre13 == rounds[roundIndex].buyers.length) ... unproven
13/50 ... [NO_EFFECT] line 161, (@pre14 == Tmp3) ... unproven
14/50 ... [NO_EFFECT] line 162, (@pre11 == rounds[roundIndex].buyers[buyersLength]) ... unproven
15/50 ... [NO_EFFECT] line 166, (@pre10 == rounds[roundIndex].ticketsCountByBuyer[msg.sender]) ... unproven
16/50 ... [NO_EFFECT] line 167, (@pre9 == rounds[roundIndex].ticketsCount) ... unproven
17/50 ... [NO_EFFECT] line 171, (@pre8 == rounds[roundIndex].pot) ... unproven
18/50 ... [ASSIGN_CONST] line 4, (c == 0) ... unproven
19/50 ... [ASSIGN_CONST] line 73, (ticketIndex == 0) ... unproven
20/50 ... [ASSIGN_CONST] line 90, (subpotsCount == 0) ... unproven
21/50 ... [ASSIGN_CONST] line 146, (value == 0) ... unproven
22/50 ... [ASSIGN_CONST] line 158, (rounds[roundIndex].ticketsCount == 0) ... unproven
23/50 ... [ASSIGN_CONST] line 161, (rounds[roundIndex].buyers.length == 0) ... unproven
24/50 ... [ASSIGN_CONST] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] == 0) ... unproven
25/50 ... [ASSIGN_CONST] line 167, (rounds[roundIndex].ticketsCount == 0) ... unproven
26/50 ... [ASSIGN_CONST] line 171, (rounds[roundIndex].pot == 0) ... unproven
27/50 ... [DEAD] line 3, false ... unproven
28/50 ... [DEAD] line 58, false ... unproven
29/50 ... [DEAD] line 60, false ... unproven
30/50 ... [DEAD] line 64, false ... unproven
31/50 ... [DEAD] line 70, false ... unproven
32/50 ... [DEAD] line 72, false ... unproven
33/50 ... [DEAD] line 75, false ... unproven
34/50 ... [DEAD] line 82, false ... unproven
35/50 ... [DEAD] line 89, false ... unproven
36/50 ... [DEAD] line 96, false ... unproven
37/50 ... [DEAD] line 101, false ... unproven
38/50 ... [DEAD] line 103, false ... unproven
39/50 ... [DEAD] line 106, false ... unproven
40/50 ... [DEAD] line 108, false ... unproven
41/50 ... [DEAD] line 115, false ... unproven
42/50 ... [DEAD] line 116, false ... unproven
43/50 ... [DEAD] line 144, false ... unproven
44/50 ... [DEAD] line 145, false ... unproven
45/50 ... [DEAD] line 148, false ... unproven
46/50 ... [DEAD] line 150, false ... unproven
47/50 ... [DEAD] line 157, false ... unproven
48/50 ... [DEAD] line 160, false ... unproven
49/50 ... [DEAD] line 165, false ... unproven
50/50 ... [DEAD] line 170, false ... unproven
took 29.400741s


===== Vulnerability Report =====
[1] [IO] line 3, (a + b) : proven
[2] [IO] line 4, (a + b) : proven
[3] [IO] line 72, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) : proven
[4] [IO] line 73, (ticketIndex + rounds[roundIndex].ticketsCountByBuyer[buyer]) : proven
[5] [IO] line 82, ((roundIndex + 1) * blocksPerRound) : proven
[6] [IO] line 82, (roundIndex + 1) : proven
[7] [IO] line 83, (((roundIndex + 1) * blocksPerRound) + subpotIndex) : unproven
[8] [IO] line 83, ((roundIndex + 1) * blocksPerRound) : proven
[9] [IO] line 83, (roundIndex + 1) : proven
[10] [IO] line 90, (subpotsCount + 1) : unproven
[11] [IO] line 146, (msg.value - (msg.value % ticketPrice)) : proven
[12] [IO] line 152, (msg.value - value) : proven
[13] [IO] line 157, (rounds[roundIndex].ticketsCount + ticketsCount) : proven
[14] [IO] line 158, (rounds[roundIndex].ticketsCount + ticketsCount) : proven
[15] [IO] line 161, (rounds[roundIndex].buyers.length + 1) : proven
[16] [IO] line 165, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) : proven
[17] [IO] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] + ticketsCount) : proven
[18] [IO] line 167, (rounds[roundIndex].ticketsCount + ticketsCount) : unproven
[19] [IO] line 170, (rounds[roundIndex].pot + value) : proven
[20] [IO] line 171, (rounds[roundIndex].pot + value) : proven
[21] [ETH_LEAK] line 119, winner.send(subpot); : unproven
[22] [ETH_LEAK] line 152, msg.sender.send((msg.value - value)); : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 4, (@pre18 == c) : unproven
[2] [NO_EFFECT] line 65, (@pre5 == winningTicketIndex) : unproven
[3] [NO_EFFECT] line 68, (@pre4 == ticketIndex) : unproven
[4] [NO_EFFECT] line 71, (@pre3 == buyer) : unproven
[5] [NO_EFFECT] line 73, (@pre2 == ticketIndex) : unproven
[6] [NO_EFFECT] line 87, (@pre7 == subpotsCount) : unproven
[7] [NO_EFFECT] line 90, (@pre6 == subpotsCount) : unproven
[8] [NO_EFFECT] line 146, (@pre17 == value) : unproven
[9] [NO_EFFECT] line 156, (@pre16 == ticketsCount) : unproven
[10] [NO_EFFECT] line 158, (@pre15 == rounds[roundIndex].ticketsCount) : unproven
[11] [NO_EFFECT] line 161, (@pre12 == buyersLength) : unproven
[12] [NO_EFFECT] line 161, (@pre13 == rounds[roundIndex].buyers.length) : unproven
[13] [NO_EFFECT] line 161, (@pre14 == Tmp3) : unproven
[14] [NO_EFFECT] line 162, (@pre11 == rounds[roundIndex].buyers[buyersLength]) : unproven
[15] [NO_EFFECT] line 166, (@pre10 == rounds[roundIndex].ticketsCountByBuyer[msg.sender]) : unproven
[16] [NO_EFFECT] line 167, (@pre9 == rounds[roundIndex].ticketsCount) : unproven
[17] [NO_EFFECT] line 171, (@pre8 == rounds[roundIndex].pot) : unproven
[18] [ASSIGN_CONST] line 4, (c == 0) : unproven
[19] [ASSIGN_CONST] line 73, (ticketIndex == 0) : unproven
[20] [ASSIGN_CONST] line 90, (subpotsCount == 0) : unproven
[21] [ASSIGN_CONST] line 146, (value == 0) : unproven
[22] [ASSIGN_CONST] line 158, (rounds[roundIndex].ticketsCount == 0) : unproven
[23] [ASSIGN_CONST] line 161, (rounds[roundIndex].buyers.length == 0) : unproven
[24] [ASSIGN_CONST] line 166, (rounds[roundIndex].ticketsCountByBuyer[msg.sender] == 0) : unproven
[25] [ASSIGN_CONST] line 167, (rounds[roundIndex].ticketsCount == 0) : unproven
[26] [ASSIGN_CONST] line 171, (rounds[roundIndex].pot == 0) : unproven
[27] [DEAD] line 3, false : unproven
[28] [DEAD] line 58, false : unproven
[29] [DEAD] line 60, false : unproven
[30] [DEAD] line 64, false : unproven
[31] [DEAD] line 70, false : unproven
[32] [DEAD] line 72, false : unproven
[33] [DEAD] line 75, false : unproven
[34] [DEAD] line 82, false : unproven
[35] [DEAD] line 89, false : unproven
[36] [DEAD] line 96, false : unproven
[37] [DEAD] line 101, false : unproven
[38] [DEAD] line 103, false : unproven
[39] [DEAD] line 106, false : unproven
[40] [DEAD] line 108, false : unproven
[41] [DEAD] line 115, false : unproven
[42] [DEAD] line 116, false : unproven
[43] [DEAD] line 144, false : unproven
[44] [DEAD] line 145, false : unproven
[45] [DEAD] line 148, false : unproven
[46] [DEAD] line 150, false : unproven
[47] [DEAD] line 157, false : unproven
[48] [DEAD] line 160, false : unproven
[49] [DEAD] line 165, false : unproven
[50] [DEAD] line 170, false : unproven

============ Statistics ============
# Iter                    : 42
# Alarm / Query           : 5 / 22
- integer over/underflow  : 3 / 20
- kill-anyone             : 0 / 0
- ether-leaking           : 2 / 2
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 0

Time Elapsed (Real) : 181.689535856
Time Elapsed (CPU)  : 181.744853
