{
  "src": [ "etherpot_lotto.sol" ],
  "knowledge": [
    {
      "abs_patch": [ "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})" ],
      "score": 0.038461538461538464
    },
    {
      "abs_patch": [ "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})" ],
      "score": -2.0
    },
    {
      "abs_patch": [ "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})" ],
      "score": 0.11538461538461539
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 0 @ {})"
      ],
      "score": -0.038461538461538464
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {})"
      ],
      "score": -0.038461538461538464
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})"
      ],
      "score": 0.038461538461538464
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {mapping(uint256 => struct Lotto.Round)})"
      ],
      "score": 0.038461538461538464
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})"
      ],
      "score": 0.038461538461538464
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})"
      ],
      "score": 0.038461538461538464
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})"
      ],
      "score": 0.15384615384615385
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})"
      ],
      "score": 0.19230769230769232
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})"
      ],
      "score": 0.23076923076923078
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {mapping(uint256 => struct Lotto.Round)})"
      ],
      "score": 0.2692307692307692
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})"
      ],
      "score": 0.3076923076923077
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})"
      ],
      "score": 0.2692307692307692
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})"
      ],
      "score": 0.23076923076923078
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {mapping(uint256 => struct Lotto.Round)})"
      ],
      "score": 0.2692307692307692
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})"
      ],
      "score": 0.3076923076923077
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 0 @ {})"
      ],
      "score": 0.2692307692307692
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {})"
      ],
      "score": 0.2692307692307692
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})"
      ],
      "score": 0.2692307692307692
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {mapping(uint256 => struct Lotto.Round)})"
      ],
      "score": 0.3076923076923077
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})"
      ],
      "score": 0.34615384615384615
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 0 @ {})"
      ],
      "score": 0.3076923076923077
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {})"
      ],
      "score": 0.3076923076923077
    },
    {
      "abs_patch": [
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {mapping(uint256 => struct Lotto.Round)}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})",
        "Abs_Insert ({}, {uint256,mapping(uint256 => struct Lotto.Round)}, 0, 1, 0, 0 @ {mapping(uint256 => struct Lotto.Round)})"
      ],
      "score": 0.3076923076923077
    }
  ]
}