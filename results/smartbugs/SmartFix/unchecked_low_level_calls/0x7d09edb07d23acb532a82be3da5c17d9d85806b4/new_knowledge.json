{
  "src": [ "0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol" ],
  "knowledge": [
    {
      "abs_patch": [
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})"
      ],
      "score": 0.1
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})"
      ],
      "score": 0.2
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0 @ {uint256})"
      ],
      "score": -0.1
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_AtomLst [\nAbs_NR ({}, {address}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {bool,uint256}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0)\nAbs_NR ({uint256}, {address,bool}, 1, 1, 0, 0)\n]"
      ],
      "score": 0.08500000000000001
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_AtomLst [\nAbs_NR ({}, {address}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {bool,uint256}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0)\nAbs_NR ({uint256}, {address,bool}, 1, 1, 0, 0)\n]",
        "Abs_Insert ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0 @ {uint256})"
      ],
      "score": -0.21500000000000002
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_AtomLst [\nAbs_NR ({}, {address}, 0, 0, 0, 0)\nAbs_NR ({bool}, {address}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {address}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {address}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {bool,uint256}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0)\nAbs_NR ({uint256}, {address,bool}, 1, 1, 0, 0)\n]"
      ],
      "score": 0.07599999999999998
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_AtomLst [\nAbs_NR ({}, {address}, 0, 0, 0, 0)\nAbs_NR ({bool}, {address}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {address}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {address}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {bool,uint256}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0)\nAbs_NR ({uint256}, {address,bool}, 1, 1, 0, 0)\n]",
        "Abs_Insert ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0 @ {uint256})"
      ],
      "score": -0.22400000000000003
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_AtomLst [\nAbs_NR ({}, {address}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {bool,uint256}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0)\nAbs_NR ({uint256}, {address,bool}, 1, 1, 0, 0)\n]"
      ],
      "score": -0.01499999999999999
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_AtomLst [\nAbs_NR ({}, {address}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {bool,uint256}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0)\nAbs_NR ({uint256}, {address,bool}, 1, 1, 0, 0)\n]",
        "Abs_Insert ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0 @ {uint256})"
      ],
      "score": -0.315
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_AtomLst [\nAbs_NR ({}, {address}, 0, 0, 0, 0)\nAbs_NR ({bool}, {address}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {address}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {address}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {bool,uint256}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0)\nAbs_NR ({uint256}, {address,bool}, 1, 1, 0, 0)\n]"
      ],
      "score": -0.02400000000000002
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})",
        "Abs_AtomLst [\nAbs_NR ({}, {address}, 0, 0, 0, 0)\nAbs_NR ({bool}, {address}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {address}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {address}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {bool,uint256}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0)\nAbs_NR ({uint256}, {address,bool}, 1, 1, 0, 0)\n]",
        "Abs_Insert ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0 @ {uint256})"
      ],
      "score": -0.324
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0 @ {uint256})"
      ],
      "score": -2.0
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256}, {address}, 0, 1, 0, 0 @ {uint256})"
      ],
      "score": -0.2
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_AtomLst [\nAbs_NR ({}, {address}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {bool,uint256}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0)\nAbs_NR ({uint256}, {address,bool}, 1, 1, 0, 0)\n]"
      ],
      "score": -3.15
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0 @ {uint256})",
        "Abs_AtomLst [\nAbs_NR ({}, {address}, 0, 0, 0, 0)\nAbs_NR ({bool}, {address}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {address}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {address}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {bool,uint256}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0)\nAbs_NR ({uint256}, {address,bool}, 1, 1, 0, 0)\n]"
      ],
      "score": -3.24
    },
    {
      "abs_patch": [
        "Abs_AtomLst [\nAbs_NR ({}, {address}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {bool,uint256}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0)\nAbs_NR ({uint256}, {address,bool}, 1, 1, 0, 0)\n]"
      ],
      "score": -0.11499999999999999
    },
    {
      "abs_patch": [
        "Abs_AtomLst [\nAbs_NR ({}, {address}, 0, 0, 0, 0)\nAbs_NR ({bool}, {address}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {address}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {address}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {bool,uint256}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0)\nAbs_NR ({uint256}, {address,bool}, 1, 1, 0, 0)\n]"
      ],
      "score": -0.124
    },
    {
      "abs_patch": [
        "Abs_AtomLst [\nAbs_Move ({uint256}, {address}, 0, 1, 0, 0)\nAbs_Move ({uint256}, {address}, 0, 1, 0, 0)\n]"
      ],
      "score": -0.1
    },
    {
      "abs_patch": [
        "Abs_AtomLst [\nAbs_Move ({uint256}, {address}, 0, 1, 0, 0)\nAbs_Move ({uint256}, {address}, 0, 1, 0, 0)\n]",
        "Abs_Insert ({uint256,mapping(address => uint256)}, {address,bool,uint256,mapping(address => uint256)}, 0, 1, 0, 0 @ {uint256})"
      ],
      "score": -3.0
    }
  ]
}