[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 32
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.001039s
[INFO] # path : 57

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.002104s
Generating VCs ... took 0.020126s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.099915
[
-1 -> true
0 -> true
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 211, (totalDonated + amount) ... unproven
4/21 ... [IO] line 223, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/21 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/21 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/21 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... unproven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 183, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... unproven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.033556s

Generating VCs ... took 0.020559s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 3.20491
[
-1 -> (Read(@TU, owner__@112) == true)
0 -> (Read(@TU, owner__@112) == true)
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 211, (totalDonated + amount) ... unproven
4/21 ... [IO] line 223, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/21 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/21 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/21 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 183, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.713456s

Generating VCs ... took 0.020281s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 6.464588
[
-1 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 211, (totalDonated + amount) ... unproven
4/21 ... [IO] line 223, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/21 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/21 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/21 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 183, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.099456s

Generating VCs ... took 0.019481s
Checking validity of VCs ... took 0.466816s

Generating VCs ... took 0.020615s
Checking validity of VCs ... took 0.467839s

Generating VCs ... took 0.020776s
Checking validity of VCs ... took 0.462345s

Generating VCs ... took 0.021947s
Checking validity of VCs ... took 0.62238s

Generating VCs ... took 0.021709s
Checking validity of VCs ... took 9.770501s

Generating VCs ... took 0.019859s
Checking validity of VCs ... took 18.188927s

Iter : 10 To explore : 700 Explored : 963 Total elapsed : 39.363341
Generating VCs ... took 0.021905s
Checking validity of VCs ... took 2.249313s

Generating VCs ... took 0.021076s
Checking validity of VCs ... took 8.817648s

Generating VCs ... took 0.020175s
Checking validity of VCs ... took 5.120971s

Generating VCs ... took 0.02329s
Checking validity of VCs ... took 15.468583s

Generating VCs ... took 0.021501s
Checking validity of VCs ... took 9.328019s

Generating VCs ... took 0.02549s
Checking validity of VCs ... took 1.931082s

Generating VCs ... took 0.020729s
Checking validity of VCs ... took 7.384359s

Generating VCs ... took 0.023529s
Checking validity of VCs ... took 4.35617s

Generating VCs ... took 0.021128s
Checking validity of VCs ... took 0.579328s

Generating VCs ... took 0.020483s
Checking validity of VCs ... took 0.685345s

Iter : 20 To explore : 1751 Explored : 2024 Total elapsed : 95.77388
Generating VCs ... took 0.021637s
Checking validity of VCs ... took 0.492725s

Generating VCs ... took 0.021439s
Checking validity of VCs ... took 0.69186s

Generating VCs ... took 0.021797s
Checking validity of VCs ... took 0.495456s

Generating VCs ... took 0.021411s
Checking validity of VCs ... took 0.594154s

Generating VCs ... took 0.020283s
Checking validity of VCs ... took 0.500232s

Generating VCs ... took 0.021075s
Checking validity of VCs ... took 0.654425s

Generating VCs ... took 0.021575s
Checking validity of VCs ... took 1.36037s

Generating VCs ... took 0.019943s
Checking validity of VCs ... took 0.609545s

Generating VCs ... took 0.019679s
Checking validity of VCs ... took 0.645857s

Generating VCs ... took 0.020471s
Checking validity of VCs ... took 1.302889s

Iter : 30 To explore : 2645 Explored : 2928 Total elapsed : 103.529773
Generating VCs ... took 0.020244s
Checking validity of VCs ... took 0.818313s

Generating VCs ... took 0.020335s
Checking validity of VCs ... took 0.664737s

Generating VCs ... took 0.020513s
Checking validity of VCs ... took 1.06681s

Generating VCs ... took 0.021294s
Checking validity of VCs ... took 1.754118s

Generating VCs ... took 0.02022s
Checking validity of VCs ... took 1.500276s

Generating VCs ... took 0.021761s
Checking validity of VCs ... took 0.905546s

Generating VCs ... took 0.021932s
Checking validity of VCs ... took 3.433949s

Generating VCs ... took 0.021171s
Checking validity of VCs ... took 2.723078s

Generating VCs ... took 0.020209s
Checking validity of VCs ... took 2.779199s

Generating VCs ... took 0.02038s
Checking validity of VCs ... took 4.758828s

Iter : 40 To explore : 3708 Explored : 4001 Total elapsed : 124.485385
Generating VCs ... took 0.020231s
Checking validity of VCs ... took 0.696548s

Generating VCs ... took 0.020543s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 41 Total elapsed : 125.73687
[
-1 -> (((randomSeed__@110 == 0) /\ (Read(@TU, owner__@112) == true)) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 211, (totalDonated + amount) ... unproven
4/21 ... [IO] line 223, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/21 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/21 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/21 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 183, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.847915s

Generating VCs ... took 0.020491s
Checking validity of VCs ... took 0.4938s

Generating VCs ... took 0.020329s
Checking validity of VCs ... took 0.499259s

Generating VCs ... took 0.02168s
Checking validity of VCs ... took 0.500777s

Generating VCs ... took 0.020283s
Checking validity of VCs ... took 15.239809s

Generating VCs ... took 0.020185s
Checking validity of VCs ... took 1.943238s

Generating VCs ... took 0.019959s
Checking validity of VCs ... took 0.691838s

Generating VCs ... took 0.02019s
Checking validity of VCs ... took 9.837336s

Generating VCs ... took 0.00568100000001s
Checking validity of VCs ... 
1/24 ... [NO_EFFECT] line 108, (@pre1 == betLimit) ... unproven
2/24 ... [NO_EFFECT] line 120, (@pre2 == difficulty) ... unproven
3/24 ... [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) ... unproven
4/24 ... [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) ... unproven
5/24 ... [NO_EFFECT] line 155, (@pre6 == blockNumber) ... unproven
6/24 ... [NO_EFFECT] line 162, (@pre5 == winningNumber) ... unproven
7/24 ... [NO_EFFECT] line 197, (@pre7 == ethToTransfer) ... unproven
8/24 ... [NO_EFFECT] line 211, (@pre8 == totalDonated) ... unproven
9/24 ... [NO_EFFECT] line 224, (@pre9 == totalDonated) ... unproven
10/24 ... [ASSIGN_CONST] line 162, (winningNumber == 0) ... unproven
11/24 ... [ASSIGN_CONST] line 211, (totalDonated == 0) ... unproven
12/24 ... [ASSIGN_CONST] line 224, (totalDonated == 0) ... unproven
13/24 ... [DEAD] line 29, false ... unproven
14/24 ... [DEAD] line 41, false ... unproven
15/24 ... [DEAD] line 47, false ... unproven
16/24 ... [DEAD] line 138, false ... unproven
17/24 ... [DEAD] line 156, false ... unproven
18/24 ... [DEAD] line 161, false ... unproven
19/24 ... [DEAD] line 164, false ... unproven
20/24 ... [DEAD] line 166, false ... unproven
21/24 ... [DEAD] line 171, false ... unproven
22/24 ... [DEAD] line 188, false ... unproven
23/24 ... [DEAD] line 199, false ... unproven
24/24 ... [DEAD] line 223, false ... unproven
took 1.509519s


===== Vulnerability Report =====
[1] [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[3] [IO] line 211, (totalDonated + amount) : unproven
[4] [IO] line 223, (totalDonated + amount) : proven
[5] [IO] line 224, (totalDonated + amount) : proven
[6] [ETH_LEAK] line 199, winner.transfer(ethToTransfer); : unproven
[7] [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[9] [RE_EL] line 199, winner.transfer(ethToTransfer); : unproven
[10] [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[12] [RE] line 94, (PoCGame, OpenToThePublic, []) : proven
[13] [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[14] [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) : proven
[15] [RE] line 126, (PoCGame, @fallback, []) : unproven
[16] [RE] line 131, (PoCGame, wager, []) : unproven
[17] [RE] line 149, (PoCGame, play, []) : unproven
[18] [RE] line 183, (PoCGame, donate, []) : unproven
[19] [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) : proven
[20] [TX_ORG] line 29, assume((msg.sender == owner)); : proven
[21] [TX_ORG] line 41, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 108, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 120, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 155, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 162, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 197, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 211, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 224, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 162, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 211, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 224, (totalDonated == 0) : unproven
[13] [DEAD] line 29, false : unproven
[14] [DEAD] line 41, false : unproven
[15] [DEAD] line 47, false : unproven
[16] [DEAD] line 138, false : unproven
[17] [DEAD] line 156, false : unproven
[18] [DEAD] line 161, false : unproven
[19] [DEAD] line 164, false : unproven
[20] [DEAD] line 166, false : unproven
[21] [DEAD] line 171, false : unproven
[22] [DEAD] line 188, false : unproven
[23] [DEAD] line 199, false : unproven
[24] [DEAD] line 223, false : unproven

============ Statistics ============
# Iter                    : 48
# Alarm / Query           : 9 / 21
- integer over/underflow  : 3 / 5
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 4 / 8
- tx.origin               : 0 / 2

Time Elapsed (Real) : 159.865496159
Time Elapsed (CPU)  : 159.914246
