[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 32
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000893s
[INFO] # path : 57

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.002351s
Generating VCs ... took 0.015843s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.090999
[
-1 -> true
0 -> true
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 210, (totalDonated + amount) ... proven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 223, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/21 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/21 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/21 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... unproven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 182, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... unproven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.130962s

Generating VCs ... took 0.015945s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 2.292273
[
-1 -> (Read(@TU, owner__@112) == true)
0 -> (Read(@TU, owner__@112) == true)
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 210, (totalDonated + amount) ... proven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 223, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/21 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/21 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/21 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 182, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 1.622593s

Generating VCs ... took 0.016189s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 4.457413
[
-1 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 210, (totalDonated + amount) ... proven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 223, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/21 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/21 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/21 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 182, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.049684s

Generating VCs ... took 0.017377s
Checking validity of VCs ... took 0.470064s

Generating VCs ... took 0.016234s
Checking validity of VCs ... took 0.470389s

Generating VCs ... took 0.01797s
Checking validity of VCs ... took 0.478812s

Generating VCs ... took 0.016302s
Checking validity of VCs ... took 0.721267s

Generating VCs ... took 0.016282s
Checking validity of VCs ... took 8.691918s

Generating VCs ... took 0.015958s
Checking validity of VCs ... took 15.682326s

Iter : 10 To explore : 700 Explored : 963 Total elapsed : 32.818472
Generating VCs ... took 0.0168s
Checking validity of VCs ... took 1.749647s

Generating VCs ... took 0.018336s
Checking validity of VCs ... took 7.812117s

Generating VCs ... took 0.01715s
Checking validity of VCs ... took 4.260587s

Generating VCs ... took 0.016887s
Checking validity of VCs ... took 15.151375s

Generating VCs ... took 0.016405s
Checking validity of VCs ... took 8.139825s

Generating VCs ... took 0.017237s
Checking validity of VCs ... took 1.517412s

Generating VCs ... took 0.020003s
Checking validity of VCs ... took 7.497411s

Generating VCs ... took 0.020032s
Checking validity of VCs ... took 4.830956s

Generating VCs ... took 0.017011s
Checking validity of VCs ... took 0.669831s

Generating VCs ... took 0.018381s
Checking validity of VCs ... took 0.726284s

Iter : 20 To explore : 1751 Explored : 2024 Total elapsed : 85.616273
Generating VCs ... took 0.017279s
Checking validity of VCs ... took 0.491341s

Generating VCs ... took 0.017475s
Checking validity of VCs ... took 0.705229s

Generating VCs ... took 0.01656s
Checking validity of VCs ... took 0.50737s

Generating VCs ... took 0.016503s
Checking validity of VCs ... took 0.574697s

Generating VCs ... took 0.01613s
Checking validity of VCs ... took 0.486733s

Generating VCs ... took 0.016366s
Checking validity of VCs ... took 0.671911s

Generating VCs ... took 0.016359s
Checking validity of VCs ... took 1.415906s

Generating VCs ... took 0.017721s
Checking validity of VCs ... took 0.634916s

Generating VCs ... took 0.01709s
Checking validity of VCs ... took 0.786884s

Generating VCs ... took 0.016082s
Checking validity of VCs ... took 1.385253s

Iter : 30 To explore : 2645 Explored : 2928 Total elapsed : 93.641995
Generating VCs ... took 0.017953s
Checking validity of VCs ... took 0.651785s

Generating VCs ... took 0.016203s
Checking validity of VCs ... took 0.738104s

Generating VCs ... took 0.018623s
Checking validity of VCs ... took 0.973108s

Generating VCs ... took 0.016675s
Checking validity of VCs ... took 1.752391s

Generating VCs ... took 0.016527s
Checking validity of VCs ... took 1.21432s

Generating VCs ... took 0.016102s
Checking validity of VCs ... took 0.980425s

Generating VCs ... took 0.01751s
Checking validity of VCs ... took 1.803453s

Generating VCs ... took 0.016611s
Checking validity of VCs ... took 2.03205s

Generating VCs ... took 0.016546s
Checking validity of VCs ... took 1.981732s

Generating VCs ... took 0.019308s
Checking validity of VCs ... took 4.07035s

Iter : 40 To explore : 3708 Explored : 4001 Total elapsed : 110.364201
Generating VCs ... took 0.016063s
Checking validity of VCs ... took 0.627715s

Generating VCs ... took 0.016432s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 41 Total elapsed : 111.541102
[
-1 -> (((randomSeed__@110 == 0) /\ (Read(@TU, owner__@112) == true)) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 210, (totalDonated + amount) ... proven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 223, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/21 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/21 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/21 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 182, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 1.774651s

Generating VCs ... took 0.016932s
Checking validity of VCs ... took 0.501881s

Generating VCs ... took 0.016585s
Checking validity of VCs ... took 0.49252s

Generating VCs ... took 0.016191s
Checking validity of VCs ... took 0.490765s

Generating VCs ... took 0.016839s
Checking validity of VCs ... took 15.848593s

Generating VCs ... took 0.017153s
Checking validity of VCs ... took 1.557537s

Generating VCs ... took 0.016223s
Checking validity of VCs ... took 0.743495s

Generating VCs ... took 0.016383s
Checking validity of VCs ... took 8.585635s

Generating VCs ... took 0.016573s
Checking validity of VCs ... took 15.741714s

Generating VCs ... took 0.00472199999999s
Checking validity of VCs ... 
1/24 ... [NO_EFFECT] line 108, (@pre1 == betLimit) ... unproven
2/24 ... [NO_EFFECT] line 120, (@pre2 == difficulty) ... unproven
3/24 ... [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) ... unproven
4/24 ... [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) ... unproven
5/24 ... [NO_EFFECT] line 155, (@pre6 == blockNumber) ... unproven
6/24 ... [NO_EFFECT] line 161, (@pre5 == winningNumber) ... unproven
7/24 ... [NO_EFFECT] line 196, (@pre7 == ethToTransfer) ... unproven
8/24 ... [NO_EFFECT] line 211, (@pre8 == totalDonated) ... unproven
9/24 ... [NO_EFFECT] line 224, (@pre9 == totalDonated) ... unproven
10/24 ... [ASSIGN_CONST] line 161, (winningNumber == 0) ... unproven
11/24 ... [ASSIGN_CONST] line 211, (totalDonated == 0) ... unproven
12/24 ... [ASSIGN_CONST] line 224, (totalDonated == 0) ... unproven
13/24 ... [DEAD] line 29, false ... unproven
14/24 ... [DEAD] line 41, false ... unproven
15/24 ... [DEAD] line 47, false ... unproven
16/24 ... [DEAD] line 138, false ... unproven
17/24 ... [DEAD] line 156, false ... unproven
18/24 ... [DEAD] line 163, false ... unproven
19/24 ... [DEAD] line 165, false ... unproven
20/24 ... [DEAD] line 170, false ... unproven
21/24 ... [DEAD] line 187, false ... unproven
22/24 ... [DEAD] line 198, false ... unproven
23/24 ... [DEAD] line 210, false ... unproven
24/24 ... [DEAD] line 223, false ... unproven
took 2.096357s


===== Vulnerability Report =====
[1] [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 210, (totalDonated + amount) : proven
[3] [IO] line 211, (totalDonated + amount) : proven
[4] [IO] line 223, (totalDonated + amount) : proven
[5] [IO] line 224, (totalDonated + amount) : proven
[6] [ETH_LEAK] line 198, winner.transfer(ethToTransfer); : unproven
[7] [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[9] [RE_EL] line 198, winner.transfer(ethToTransfer); : unproven
[10] [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[12] [RE] line 94, (PoCGame, OpenToThePublic, []) : proven
[13] [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[14] [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) : proven
[15] [RE] line 126, (PoCGame, @fallback, []) : unproven
[16] [RE] line 131, (PoCGame, wager, []) : unproven
[17] [RE] line 149, (PoCGame, play, []) : unproven
[18] [RE] line 182, (PoCGame, donate, []) : unproven
[19] [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) : proven
[20] [TX_ORG] line 29, assume((msg.sender == owner)); : proven
[21] [TX_ORG] line 41, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 108, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 120, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 155, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 161, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 196, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 211, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 224, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 161, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 211, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 224, (totalDonated == 0) : unproven
[13] [DEAD] line 29, false : unproven
[14] [DEAD] line 41, false : unproven
[15] [DEAD] line 47, false : unproven
[16] [DEAD] line 138, false : unproven
[17] [DEAD] line 156, false : unproven
[18] [DEAD] line 163, false : unproven
[19] [DEAD] line 165, false : unproven
[20] [DEAD] line 170, false : unproven
[21] [DEAD] line 187, false : unproven
[22] [DEAD] line 198, false : unproven
[23] [DEAD] line 210, false : unproven
[24] [DEAD] line 223, false : unproven

============ Statistics ============
# Iter                    : 49
# Alarm / Query           : 7 / 21
- integer over/underflow  : 1 / 5
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 4 / 8
- tx.origin               : 0 / 2

Time Elapsed (Real) : 159.929535151
Time Elapsed (CPU)  : 159.949893
