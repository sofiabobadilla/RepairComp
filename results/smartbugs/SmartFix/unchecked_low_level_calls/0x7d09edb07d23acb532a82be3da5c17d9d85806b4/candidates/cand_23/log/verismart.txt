[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 32
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000896s
[INFO] # path : 54

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.002255s
Generating VCs ... took 0.016837s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.092911
[
-1 -> true
0 -> true
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 212, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... unproven
6/21 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/21 ... [ETH_LEAK] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/21 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/21 ... [RE_EL] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... unproven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 183, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... unproven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.247096s

Generating VCs ... took 0.017338s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 3.404638
[
-1 -> (Read(@TU, owner__@112) == true)
0 -> (Read(@TU, owner__@112) == true)
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 212, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... unproven
6/21 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/21 ... [ETH_LEAK] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/21 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/21 ... [RE_EL] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 183, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.11974s

Generating VCs ... took 0.017506s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 7.05665
[
-1 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 212, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... unproven
6/21 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/21 ... [ETH_LEAK] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/21 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/21 ... [RE_EL] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 183, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.304064s

Generating VCs ... took 0.016546s
Checking validity of VCs ... took 0.480734s

Generating VCs ... took 0.01695s
Checking validity of VCs ... took 0.487398s

Generating VCs ... took 0.017061s
Checking validity of VCs ... took 0.485863s

Generating VCs ... took 0.016773s
Checking validity of VCs ... took 0.614366s

Generating VCs ... took 0.017034s
Checking validity of VCs ... took 7.602304s

Generating VCs ... took 0.017968s
Checking validity of VCs ... took 15.985804s

Iter : 10 To explore : 700 Explored : 963 Total elapsed : 35.811143
Generating VCs ... took 0.017321s
Checking validity of VCs ... took 1.63404s

Generating VCs ... took 0.019706s
Checking validity of VCs ... took 8.152826s

Generating VCs ... took 0.017428s
Checking validity of VCs ... took 4.524006s

Generating VCs ... took 0.019311s
Checking validity of VCs ... took 13.745126s

Generating VCs ... took 0.017545s
Checking validity of VCs ... took 8.148806s

Generating VCs ... took 0.017969s
Checking validity of VCs ... took 2.052617s

Generating VCs ... took 0.017192s
Checking validity of VCs ... took 8.556617s

Generating VCs ... took 0.016878s
Checking validity of VCs ... took 5.02544s

Generating VCs ... took 0.018092s
Checking validity of VCs ... took 0.544416s

Generating VCs ... took 0.016745s
Checking validity of VCs ... took 0.707872s

Iter : 20 To explore : 1751 Explored : 2024 Total elapsed : 89.349727
Generating VCs ... took 0.017746s
Checking validity of VCs ... took 0.497732s

Generating VCs ... took 0.018386s
Checking validity of VCs ... took 0.702216s

Generating VCs ... took 0.016649s
Checking validity of VCs ... took 0.505651s

Generating VCs ... took 0.017171s
Checking validity of VCs ... took 0.613725s

Generating VCs ... took 0.017597s
Checking validity of VCs ... took 0.499672s

Generating VCs ... took 0.017456s
Checking validity of VCs ... took 0.657204s

Generating VCs ... took 0.016455s
Checking validity of VCs ... took 1.586458s

Generating VCs ... took 0.016584s
Checking validity of VCs ... took 0.614056s

Generating VCs ... took 0.016841s
Checking validity of VCs ... took 0.736755s

Generating VCs ... took 0.017855s
Checking validity of VCs ... took 1.276834s

Iter : 30 To explore : 2645 Explored : 2928 Total elapsed : 97.420626
Generating VCs ... took 0.016823s
Checking validity of VCs ... took 0.657423s

Generating VCs ... took 0.018459s
Checking validity of VCs ... took 0.692153s

Generating VCs ... took 0.016858s
Checking validity of VCs ... took 1.048173s

Generating VCs ... took 0.016672s
Checking validity of VCs ... took 1.247655s

Generating VCs ... took 0.017147s
Checking validity of VCs ... took 1.463627s

Generating VCs ... took 0.016767s
Checking validity of VCs ... took 1.082652s

Generating VCs ... took 0.018661s
Checking validity of VCs ... took 1.678578s

Generating VCs ... took 0.016962s
Checking validity of VCs ... took 1.98319s

Generating VCs ... took 0.017194s
Checking validity of VCs ... took 2.530362s

Generating VCs ... took 0.017796s
Checking validity of VCs ... took 2.797416s

Iter : 40 To explore : 3708 Explored : 4001 Total elapsed : 113.113272
Generating VCs ... took 0.019452s
Checking validity of VCs ... took 0.782167s

Generating VCs ... took 0.019001s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 41 Total elapsed : 114.445498
[
-1 -> (((randomSeed__@110 == 0) /\ (Read(@TU, owner__@112) == true)) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 212, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... unproven
6/21 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/21 ... [ETH_LEAK] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/21 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/21 ... [RE_EL] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 183, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.977073s

Generating VCs ... took 0.016741s
Checking validity of VCs ... took 0.49501s

Generating VCs ... took 0.016476s
Checking validity of VCs ... took 0.479953s

Generating VCs ... took 0.018062s
Checking validity of VCs ... took 0.499921s

Generating VCs ... took 0.016885s
Checking validity of VCs ... took 14.772061s

Generating VCs ... took 0.016525s
Checking validity of VCs ... took 1.658299s

Generating VCs ... took 0.016765s
Checking validity of VCs ... took 0.745776s

Generating VCs ... took 0.016708s
Checking validity of VCs ... took 8.132186s

Generating VCs ... took 0.016669s
Checking validity of VCs ... took 15.664997s

Generating VCs ... took 0.00422999999998s
Checking validity of VCs ... 
1/24 ... [NO_EFFECT] line 108, (@pre1 == betLimit) ... unproven
2/24 ... [NO_EFFECT] line 120, (@pre2 == difficulty) ... unproven
3/24 ... [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) ... unproven
4/24 ... [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) ... unproven
5/24 ... [NO_EFFECT] line 155, (@pre6 == blockNumber) ... unproven
6/24 ... [NO_EFFECT] line 162, (@pre5 == winningNumber) ... unproven
7/24 ... [NO_EFFECT] line 197, (@pre7 == ethToTransfer) ... unproven
8/24 ... [NO_EFFECT] line 212, (@pre8 == totalDonated) ... unproven
9/24 ... [NO_EFFECT] line 224, (@pre9 == totalDonated) ... unproven
10/24 ... [ASSIGN_CONST] line 162, (winningNumber == 0) ... unproven
11/24 ... [ASSIGN_CONST] line 212, (totalDonated == 0) ... unproven
12/24 ... [ASSIGN_CONST] line 224, (totalDonated == 0) ... unproven
13/24 ... [DEAD] line 29, false ... unproven
14/24 ... [DEAD] line 41, false ... unproven
15/24 ... [DEAD] line 47, false ... unproven
16/24 ... [DEAD] line 138, false ... unproven
17/24 ... [DEAD] line 156, false ... unproven
18/24 ... [DEAD] line 161, false ... unproven
19/24 ... [DEAD] line 164, false ... unproven
20/24 ... [DEAD] line 166, false ... unproven
21/24 ... [DEAD] line 171, false ... unproven
22/24 ... [DEAD] line 188, false ... unproven
23/24 ... [DEAD] line 199, false ... unproven
24/24 ... [DEAD] line 211, false ... unproven
took 1.913942s


===== Vulnerability Report =====
[1] [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[3] [IO] line 211, (totalDonated + amount) : proven
[4] [IO] line 212, (totalDonated + amount) : proven
[5] [IO] line 224, (totalDonated + amount) : unproven
[6] [ETH_LEAK] line 199, winner.transfer(ethToTransfer); : unproven
[7] [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [ETH_LEAK] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[9] [RE_EL] line 199, winner.transfer(ethToTransfer); : unproven
[10] [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE_EL] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[12] [RE] line 94, (PoCGame, OpenToThePublic, []) : proven
[13] [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[14] [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) : proven
[15] [RE] line 126, (PoCGame, @fallback, []) : unproven
[16] [RE] line 131, (PoCGame, wager, []) : unproven
[17] [RE] line 149, (PoCGame, play, []) : unproven
[18] [RE] line 183, (PoCGame, donate, []) : unproven
[19] [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) : proven
[20] [TX_ORG] line 29, assume((msg.sender == owner)); : proven
[21] [TX_ORG] line 41, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 108, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 120, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 155, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 162, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 197, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 212, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 224, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 162, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 212, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 224, (totalDonated == 0) : unproven
[13] [DEAD] line 29, false : unproven
[14] [DEAD] line 41, false : unproven
[15] [DEAD] line 47, false : unproven
[16] [DEAD] line 138, false : unproven
[17] [DEAD] line 156, false : unproven
[18] [DEAD] line 161, false : unproven
[19] [DEAD] line 164, false : unproven
[20] [DEAD] line 166, false : unproven
[21] [DEAD] line 171, false : unproven
[22] [DEAD] line 188, false : unproven
[23] [DEAD] line 199, false : unproven
[24] [DEAD] line 211, false : unproven

============ Statistics ============
# Iter                    : 49
# Alarm / Query           : 9 / 21
- integer over/underflow  : 3 / 5
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 4 / 8
- tx.origin               : 0 / 2

Time Elapsed (Real) : 162.329419851
Time Elapsed (CPU)  : 162.3798
