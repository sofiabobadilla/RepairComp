[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 32
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000806s
[INFO] # path : 53

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001807s
Generating VCs ... took 0.01594s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.087725
[
-1 -> true
0 -> true
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/20 ... [IO] line 211, (totalDonated + amount) ... unproven
4/20 ... [IO] line 223, (totalDonated + amount) ... unproven
5/20 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/20 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/20 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/20 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... unproven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 183, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... unproven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.051012s

Generating VCs ... took 0.015277s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 3.198034
[
-1 -> (Read(@TU, owner__@112) == true)
0 -> (Read(@TU, owner__@112) == true)
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/20 ... [IO] line 211, (totalDonated + amount) ... unproven
4/20 ... [IO] line 223, (totalDonated + amount) ... unproven
5/20 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/20 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/20 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/20 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 183, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.065896s

Generating VCs ... took 0.015076s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 6.795185
[
-1 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/20 ... [IO] line 211, (totalDonated + amount) ... unproven
4/20 ... [IO] line 223, (totalDonated + amount) ... unproven
5/20 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/20 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/20 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/20 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 183, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.017015s

Generating VCs ... took 0.015819s
Checking validity of VCs ... took 0.48085s

Generating VCs ... took 0.015844s
Checking validity of VCs ... took 0.492118s

Generating VCs ... took 0.016432s
Checking validity of VCs ... took 0.483662s

Generating VCs ... took 0.016474s
Checking validity of VCs ... took 0.620636s

Generating VCs ... took 0.016076s
Checking validity of VCs ... took 6.384599s

Generating VCs ... took 0.015884s
Checking validity of VCs ... took 14.28805s

Iter : 10 To explore : 700 Explored : 963 Total elapsed : 32.344889
Generating VCs ... took 0.017585s
Checking validity of VCs ... took 1.562739s

Generating VCs ... took 0.016108s
Checking validity of VCs ... took 8.287327s

Generating VCs ... took 0.016119s
Checking validity of VCs ... took 4.173699s

Generating VCs ... took 0.015287s
Checking validity of VCs ... took 18.795833s

Generating VCs ... took 0.016531s
Checking validity of VCs ... took 7.300765s

Generating VCs ... took 0.01675s
Checking validity of VCs ... took 1.734569s

Generating VCs ... took 0.015486s
Checking validity of VCs ... took 6.918822s

Generating VCs ... took 0.015451s
Checking validity of VCs ... took 3.484015s

Generating VCs ... took 0.015749s
Checking validity of VCs ... took 0.580438s

Generating VCs ... took 0.016102s
Checking validity of VCs ... took 0.622346s

Iter : 20 To explore : 1751 Explored : 2024 Total elapsed : 86.264994
Generating VCs ... took 0.015892s
Checking validity of VCs ... took 0.493536s

Generating VCs ... took 0.01654s
Checking validity of VCs ... took 0.706005s

Generating VCs ... took 0.015969s
Checking validity of VCs ... took 0.493562s

Generating VCs ... took 0.016082s
Checking validity of VCs ... took 0.582871s

Generating VCs ... took 0.017079s
Checking validity of VCs ... took 0.479892s

Generating VCs ... took 0.016488s
Checking validity of VCs ... took 0.749021s

Generating VCs ... took 0.01564s
Checking validity of VCs ... took 1.048836s

Generating VCs ... took 0.015957s
Checking validity of VCs ... took 0.702068s

Generating VCs ... took 0.015754s
Checking validity of VCs ... took 0.675245s

Generating VCs ... took 0.015746s
Checking validity of VCs ... took 1.046172s

Iter : 30 To explore : 2645 Explored : 2928 Total elapsed : 93.607994
Generating VCs ... took 0.016831s
Checking validity of VCs ... took 0.698349s

Generating VCs ... took 0.015796s
Checking validity of VCs ... took 0.62907s

Generating VCs ... took 0.01548s
Checking validity of VCs ... took 1.174757s

Generating VCs ... took 0.015994s
Checking validity of VCs ... took 1.168601s

Generating VCs ... took 0.015542s
Checking validity of VCs ... took 1.203746s

Generating VCs ... took 0.01609s
Checking validity of VCs ... took 1.296873s

Generating VCs ... took 0.016s
Checking validity of VCs ... took 1.854302s

Generating VCs ... took 0.01576s
Checking validity of VCs ... took 1.775906s

Generating VCs ... took 0.01585s
Checking validity of VCs ... took 1.920475s

Generating VCs ... took 0.01585s
Checking validity of VCs ... took 3.514187s

Iter : 40 To explore : 3708 Explored : 4001 Total elapsed : 109.344109
Generating VCs ... took 0.016265s
Checking validity of VCs ... took 0.681819s

Generating VCs ... took 0.015578s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 41 Total elapsed : 110.566771
[
-1 -> (((randomSeed__@110 == 0) /\ (Read(@TU, owner__@112) == true)) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/20 ... [IO] line 211, (totalDonated + amount) ... unproven
4/20 ... [IO] line 223, (totalDonated + amount) ... unproven
5/20 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/20 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/20 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/20 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 183, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.092751s

Generating VCs ... took 0.016421s
Checking validity of VCs ... took 0.490555s

Generating VCs ... took 0.01615s
Checking validity of VCs ... took 0.491476s

Generating VCs ... took 0.01667s
Checking validity of VCs ... took 0.48889s

Generating VCs ... took 0.017529s
Checking validity of VCs ... took 14.883495s

Generating VCs ... took 0.015999s
Checking validity of VCs ... took 1.569342s

Generating VCs ... took 0.017434s
Checking validity of VCs ... took 0.695952s

Generating VCs ... took 0.015779s
Checking validity of VCs ... took 7.863439s

Generating VCs ... took 0.015667s
Checking validity of VCs ... took 16.37576s

Generating VCs ... took 0.004052s
Checking validity of VCs ... 
1/23 ... [NO_EFFECT] line 108, (@pre1 == betLimit) ... unproven
2/23 ... [NO_EFFECT] line 120, (@pre2 == difficulty) ... unproven
3/23 ... [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) ... unproven
4/23 ... [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) ... unproven
5/23 ... [NO_EFFECT] line 155, (@pre6 == blockNumber) ... unproven
6/23 ... [NO_EFFECT] line 162, (@pre5 == winningNumber) ... unproven
7/23 ... [NO_EFFECT] line 197, (@pre7 == ethToTransfer) ... unproven
8/23 ... [NO_EFFECT] line 211, (@pre8 == totalDonated) ... unproven
9/23 ... [NO_EFFECT] line 223, (@pre9 == totalDonated) ... unproven
10/23 ... [ASSIGN_CONST] line 162, (winningNumber == 0) ... unproven
11/23 ... [ASSIGN_CONST] line 211, (totalDonated == 0) ... unproven
12/23 ... [ASSIGN_CONST] line 223, (totalDonated == 0) ... unproven
13/23 ... [DEAD] line 29, false ... unproven
14/23 ... [DEAD] line 41, false ... unproven
15/23 ... [DEAD] line 47, false ... unproven
16/23 ... [DEAD] line 138, false ... unproven
17/23 ... [DEAD] line 156, false ... unproven
18/23 ... [DEAD] line 161, false ... unproven
19/23 ... [DEAD] line 164, false ... unproven
20/23 ... [DEAD] line 166, false ... unproven
21/23 ... [DEAD] line 171, false ... unproven
22/23 ... [DEAD] line 188, false ... unproven
23/23 ... [DEAD] line 199, false ... unproven
took 0.988721s


===== Vulnerability Report =====
[1] [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[3] [IO] line 211, (totalDonated + amount) : unproven
[4] [IO] line 223, (totalDonated + amount) : unproven
[5] [ETH_LEAK] line 199, winner.transfer(ethToTransfer); : unproven
[6] [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[7] [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [RE_EL] line 199, winner.transfer(ethToTransfer); : unproven
[9] [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[10] [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE] line 94, (PoCGame, OpenToThePublic, []) : proven
[12] [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[13] [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) : proven
[14] [RE] line 126, (PoCGame, @fallback, []) : unproven
[15] [RE] line 131, (PoCGame, wager, []) : unproven
[16] [RE] line 149, (PoCGame, play, []) : unproven
[17] [RE] line 183, (PoCGame, donate, []) : unproven
[18] [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) : proven
[19] [TX_ORG] line 29, assume((msg.sender == owner)); : proven
[20] [TX_ORG] line 41, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 108, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 120, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 155, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 162, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 197, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 211, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 223, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 162, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 211, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 223, (totalDonated == 0) : unproven
[13] [DEAD] line 29, false : unproven
[14] [DEAD] line 41, false : unproven
[15] [DEAD] line 47, false : unproven
[16] [DEAD] line 138, false : unproven
[17] [DEAD] line 156, false : unproven
[18] [DEAD] line 161, false : unproven
[19] [DEAD] line 164, false : unproven
[20] [DEAD] line 166, false : unproven
[21] [DEAD] line 171, false : unproven
[22] [DEAD] line 188, false : unproven
[23] [DEAD] line 199, false : unproven

============ Statistics ============
# Iter                    : 49
# Alarm / Query           : 10 / 20
- integer over/underflow  : 4 / 4
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 4 / 8
- tx.origin               : 0 / 2

Time Elapsed (Real) : 158.086230993
Time Elapsed (CPU)  : 158.116583
