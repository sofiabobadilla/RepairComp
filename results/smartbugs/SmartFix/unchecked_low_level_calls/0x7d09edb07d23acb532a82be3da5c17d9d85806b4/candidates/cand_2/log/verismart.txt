[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 29
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000453s
[INFO] # path : 48

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001567s
Generating VCs ... took 0.010015s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.076471
[
-1 -> true
0 -> true
]
[
]
1/18 ... [IO] line 150, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 199, (totalDonated + amount) ... proven
3/18 ... [IO] line 200, (totalDonated + amount) ... proven
4/18 ... [IO] line 212, (totalDonated + amount) ... unproven
5/18 ... [ETH_LEAK] line 187, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 198, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/18 ... [ETH_LEAK] line 211, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/18 ... [RE_EL] line 187, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 198, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/18 ... [RE_EL] line 211, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... unproven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 138, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 171, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 2.039878s

Generating VCs ... took 0.010216s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 2.167648
[
-1 -> (Read(@TU, owner__@89) == true)
0 -> (Read(@TU, owner__@89) == true)
]
[
]
1/18 ... [IO] line 150, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 199, (totalDonated + amount) ... proven
3/18 ... [IO] line 200, (totalDonated + amount) ... proven
4/18 ... [IO] line 212, (totalDonated + amount) ... unproven
5/18 ... [ETH_LEAK] line 187, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 198, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/18 ... [ETH_LEAK] line 211, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/18 ... [RE_EL] line 187, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 198, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/18 ... [RE_EL] line 211, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 138, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 171, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 2.022961s

Generating VCs ... took 0.010571s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 4.728932
[
-1 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
0 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
]
[
]
1/18 ... [IO] line 150, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 199, (totalDonated + amount) ... proven
3/18 ... [IO] line 200, (totalDonated + amount) ... proven
4/18 ... [IO] line 212, (totalDonated + amount) ... unproven
5/18 ... [ETH_LEAK] line 187, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 198, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/18 ... [ETH_LEAK] line 211, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/18 ... [RE_EL] line 187, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 198, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/18 ... [RE_EL] line 211, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 138, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 171, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 2.122324s

Generating VCs ... took 0.010851s
Checking validity of VCs ... took 0.482485s

Generating VCs ... took 0.011388s
Checking validity of VCs ... took 5.490226s

Generating VCs ... took 0.010325s
Checking validity of VCs ... took 14.551273s

Generating VCs ... took 0.010225s
Checking validity of VCs ... took 0.66928s

Generating VCs ... took 0.010554s
Checking validity of VCs ... took 14.932143s

Generating VCs ... took 0.010425s
Checking validity of VCs ... took 5.460174s

Iter : 10 To explore : 795 Explored : 1054 Total elapsed : 48.198814
Generating VCs ... took 0.012654s
Checking validity of VCs ... took 0.690655s

Generating VCs ... took 0.010255s
Checking validity of VCs ... took 0.489628s

Generating VCs ... took 0.010586s
Checking validity of VCs ... took 0.709382s

Generating VCs ... took 0.010453s
Checking validity of VCs ... took 0.493249s

Generating VCs ... took 0.010349s
Checking validity of VCs ... took 1.091842s

Generating VCs ... took 0.010383s
Checking validity of VCs ... took 0.595265s

Generating VCs ... took 0.0104s
Checking validity of VCs ... took 0.592921s

Generating VCs ... took 0.010303s
Checking validity of VCs ... took 1.120392s

Generating VCs ... took 0.010413s
Checking validity of VCs ... took 0.95505s

Generating VCs ... took 0.010311s
Checking validity of VCs ... took 2.262398s

Iter : 20 To explore : 1717 Explored : 1986 Total elapsed : 57.529483
Generating VCs ... took 0.010322s
Checking validity of VCs ... took 1.958994s

Generating VCs ... took 0.010363s
Checking validity of VCs ... took 0.565219s

Generating VCs ... took 0.010689s
Checking validity of VCs ... took 0.607069s

Generating VCs ... took 0.010361s
Checking validity of VCs ... took 1.001994s

Generating VCs ... took 0.011418s
Checking validity of VCs ... took 0.698711s

Generating VCs ... took 0.010359s
Checking validity of VCs ... took 0.629615s

Generating VCs ... took 0.012204s
Checking validity of VCs ... took 1.160858s

Generating VCs ... took 0.010227s
Checking validity of VCs ... took 1.224983s

Generating VCs ... took 0.010674s
Checking validity of VCs ... took 1.254637s

Generating VCs ... took 0.010412s
Checking validity of VCs ... took 1.492769s

Iter : 30 To explore : 2766 Explored : 3045 Total elapsed : 68.544655
Generating VCs ... took 0.011611s
Checking validity of VCs ... took 1.180092s

Generating VCs ... took 0.01045s
Checking validity of VCs ... took 1.849643s

Generating VCs ... took 0.010615s
Checking validity of VCs ... took 2.184541s

Generating VCs ... took 0.010287s
Checking validity of VCs ... took 1.904529s

Generating VCs ... took 0.011429s
Checking validity of VCs ... took 1.853169s

Generating VCs ... took 0.010413s
Checking validity of VCs ... took 0.682333s

Generating VCs ... took 0.010635s
Checking validity of VCs ... took 0.659992s

Generating VCs ... took 0.011631s
Checking validity of VCs ... took 0.641597s

Generating VCs ... took 0.012445s
Checking validity of VCs ... took 0.909313s

Generating VCs ... took 0.010809s
Checking validity of VCs ... took 0.658057s

Iter : 40 To explore : 3693 Explored : 3982 Total elapsed : 81.516253
Generating VCs ... took 0.010692s
Checking validity of VCs ... took 0.618242s

Generating VCs ... took 0.010447s
Checking validity of VCs ... took 0.693942s

Generating VCs ... took 0.010285s
Checking validity of VCs ... took 2.876578s

Generating VCs ... took 0.010503s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 43 Total elapsed : 86.311317
[
-1 -> (((randomSeed__@87 == 0) /\ (Read(@TU, owner__@89) == true)) /\ (Read(@TU, whale__@81) == true))
0 -> ((Read(@TU, owner__@89) == true) /\ (Read(@TU, whale__@81) == true))
]
[
]
1/18 ... [IO] line 150, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 199, (totalDonated + amount) ... proven
3/18 ... [IO] line 200, (totalDonated + amount) ... proven
4/18 ... [IO] line 212, (totalDonated + amount) ... unproven
5/18 ... [ETH_LEAK] line 187, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 198, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/18 ... [ETH_LEAK] line 211, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/18 ... [RE_EL] line 187, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 198, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/18 ... [RE_EL] line 211, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 138, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 171, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 1.848715s

Generating VCs ... took 0.010624s
Checking validity of VCs ... took 0.481096s

Generating VCs ... took 0.010963s
Checking validity of VCs ... took 11.56714s

Generating VCs ... took 0.011394s
Checking validity of VCs ... took 0.631769s

Generating VCs ... took 0.010871s
Checking validity of VCs ... took 5.743871s

Generating VCs ... took 0.010672s
Checking validity of VCs ... took 5.458124s

Generating VCs ... took 0.012211s
Checking validity of VCs ... took 13.687188s

Iter : 50 To explore : 3565 Explored : 7708 Total elapsed : 126.225715
Generating VCs ... took 0.010999s
Checking validity of VCs ... took 0.506712s

Generating VCs ... took 0.010706s
Checking validity of VCs ... took 0.6186s

Generating VCs ... took 0.010674s
Checking validity of VCs ... took 0.695381s

Generating VCs ... took 0.010428s
Checking validity of VCs ... took 0.487857s

Generating VCs ... took 0.011758s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 54 Total elapsed : 129.13565
[
-1 -> (((randomSeed__@87 == 0) /\ (Read(@TU, owner__@89) == true)) /\ (Read(@TU, whale__@81) == true))
0 -> (((randomSeed__@87 == 0) /\ (Read(@TU, owner__@89) == true)) /\ (Read(@TU, whale__@81) == true))
]
[
]
1/18 ... [IO] line 150, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/18 ... [IO] line 199, (totalDonated + amount) ... proven
3/18 ... [IO] line 200, (totalDonated + amount) ... proven
4/18 ... [IO] line 212, (totalDonated + amount) ... unproven
5/18 ... [ETH_LEAK] line 187, winner.transfer(ethToTransfer); ... unproven
6/18 ... [ETH_LEAK] line 198, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/18 ... [ETH_LEAK] line 211, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/18 ... [RE_EL] line 187, winner.transfer(ethToTransfer); ... unproven
9/18 ... [RE_EL] line 198, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/18 ... [RE_EL] line 211, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/18 ... [RE] line 83, (PoCGame, OpenToThePublic, []) ... proven
12/18 ... [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/18 ... [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/18 ... [RE] line 120, (PoCGame, wager, []) ... unproven
15/18 ... [RE] line 138, (PoCGame, play, []) ... unproven
16/18 ... [RE] line 171, (PoCGame, donate, []) ... unproven
17/18 ... [TX_ORG] line 18, assume((msg.sender == owner)); ... proven
18/18 ... [TX_ORG] line 30, assume((msg.sender == tx.origin)); ... proven
took 1.827233s

Generating VCs ... took 0.010679s
Checking validity of VCs ... took 0.496192s

Generating VCs ... took 0.010435s
Checking validity of VCs ... took 5.864142s

Generating VCs ... took 0.010319s
Checking validity of VCs ... took 0.58089s

Generating VCs ... took 0.01059s
Checking validity of VCs ... took 17.125548s

Generating VCs ... took 0.003344s
Checking validity of VCs ... 
1/23 ... [NO_EFFECT] line 97, (@pre1 == betLimit) ... unproven
2/23 ... [NO_EFFECT] line 109, (@pre2 == difficulty) ... unproven
3/23 ... [NO_EFFECT] line 130, (@pre4 == timestamps[msg.sender]) ... unproven
4/23 ... [NO_EFFECT] line 131, (@pre3 == wagers[msg.sender]) ... unproven
5/23 ... [NO_EFFECT] line 144, (@pre6 == blockNumber) ... unproven
6/23 ... [NO_EFFECT] line 150, (@pre5 == winningNumber) ... unproven
7/23 ... [NO_EFFECT] line 185, (@pre7 == ethToTransfer) ... unproven
8/23 ... [NO_EFFECT] line 200, (@pre8 == totalDonated) ... unproven
9/23 ... [NO_EFFECT] line 212, (@pre9 == totalDonated) ... unproven
10/23 ... [ASSIGN_CONST] line 150, (winningNumber == 0) ... unproven
11/23 ... [ASSIGN_CONST] line 200, (totalDonated == 0) ... unproven
12/23 ... [ASSIGN_CONST] line 212, (totalDonated == 0) ... unproven
13/23 ... [DEAD] line 18, false ... unproven
14/23 ... [DEAD] line 30, false ... unproven
15/23 ... [DEAD] line 36, false ... unproven
16/23 ... [DEAD] line 127, false ... unproven
17/23 ... [DEAD] line 145, false ... unproven
18/23 ... [DEAD] line 152, false ... unproven
19/23 ... [DEAD] line 154, false ... unproven
20/23 ... [DEAD] line 159, false ... unproven
21/23 ... [DEAD] line 176, false ... unproven
22/23 ... [DEAD] line 187, false ... unproven
23/23 ... [DEAD] line 199, false ... unproven
took 1.341976s


===== Vulnerability Report =====
[1] [IO] line 150, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 199, (totalDonated + amount) : proven
[3] [IO] line 200, (totalDonated + amount) : proven
[4] [IO] line 212, (totalDonated + amount) : unproven
[5] [ETH_LEAK] line 187, winner.transfer(ethToTransfer); : unproven
[6] [ETH_LEAK] line 198, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[7] [ETH_LEAK] line 211, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [RE_EL] line 187, winner.transfer(ethToTransfer); : unproven
[9] [RE_EL] line 198, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[10] [RE_EL] line 211, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE] line 83, (PoCGame, OpenToThePublic, []) : proven
[12] [RE] line 93, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[13] [RE] line 105, (PoCGame, AdjustDifficulty, [uint256]) : proven
[14] [RE] line 120, (PoCGame, wager, []) : unproven
[15] [RE] line 138, (PoCGame, play, []) : unproven
[16] [RE] line 171, (PoCGame, donate, []) : unproven
[17] [TX_ORG] line 18, assume((msg.sender == owner)); : proven
[18] [TX_ORG] line 30, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 97, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 109, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 130, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 131, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 144, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 150, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 185, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 200, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 212, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 150, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 200, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 212, (totalDonated == 0) : unproven
[13] [DEAD] line 18, false : unproven
[14] [DEAD] line 30, false : unproven
[15] [DEAD] line 36, false : unproven
[16] [DEAD] line 127, false : unproven
[17] [DEAD] line 145, false : unproven
[18] [DEAD] line 152, false : unproven
[19] [DEAD] line 154, false : unproven
[20] [DEAD] line 159, false : unproven
[21] [DEAD] line 176, false : unproven
[22] [DEAD] line 187, false : unproven
[23] [DEAD] line 199, false : unproven

============ Statistics ============
# Iter                    : 58
# Alarm / Query           : 7 / 18
- integer over/underflow  : 2 / 4
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 3 / 6
- tx.origin               : 0 / 2

Time Elapsed (Real) : 156.717370987
Time Elapsed (CPU)  : 156.778047
