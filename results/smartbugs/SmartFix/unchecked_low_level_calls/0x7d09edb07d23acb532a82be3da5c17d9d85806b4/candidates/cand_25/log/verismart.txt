[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 32
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000867s
[INFO] # path : 57

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.002352s
Generating VCs ... took 0.016746s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.088478
[
-1 -> true
0 -> true
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 212, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... unproven
6/21 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/21 ... [ETH_LEAK] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/21 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/21 ... [RE_EL] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... unproven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 183, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... unproven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.185577s

Generating VCs ... took 0.01712s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 3.338915
[
-1 -> (Read(@TU, owner__@112) == true)
0 -> (Read(@TU, owner__@112) == true)
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 212, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... unproven
6/21 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/21 ... [ETH_LEAK] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/21 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/21 ... [RE_EL] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 183, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.847131s

Generating VCs ... took 0.016459s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 6.734112
[
-1 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 212, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... unproven
6/21 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/21 ... [ETH_LEAK] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/21 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/21 ... [RE_EL] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 183, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 3.025999s

Generating VCs ... took 0.01688s
Checking validity of VCs ... took 0.486909s

Generating VCs ... took 0.019084s
Checking validity of VCs ... took 0.484806s

Generating VCs ... took 0.016684s
Checking validity of VCs ... took 0.493213s

Generating VCs ... took 0.017213s
Checking validity of VCs ... took 0.695167s

Generating VCs ... took 0.01653s
Checking validity of VCs ... took 7.484921s

Generating VCs ... took 0.017025s
Checking validity of VCs ... took 17.180274s

Iter : 10 To explore : 700 Explored : 963 Total elapsed : 36.363258
Generating VCs ... took 0.019141s
Checking validity of VCs ... took 1.360185s

Generating VCs ... took 0.017616s
Checking validity of VCs ... took 8.979943s

Generating VCs ... took 0.017223s
Checking validity of VCs ... took 4.518795s

Generating VCs ... took 0.016866s
Checking validity of VCs ... took 17.848915s

Generating VCs ... took 0.018073s
Checking validity of VCs ... took 8.94142s

Generating VCs ... took 0.017672s
Checking validity of VCs ... took 1.81628s

Generating VCs ... took 0.017162s
Checking validity of VCs ... took 6.608697s

Generating VCs ... took 0.017474s
Checking validity of VCs ... took 3.855074s

Generating VCs ... took 0.01696s
Checking validity of VCs ... took 0.634327s

Generating VCs ... took 0.016817s
Checking validity of VCs ... took 0.702892s

Iter : 20 To explore : 1751 Explored : 2024 Total elapsed : 92.080314
Generating VCs ... took 0.016788s
Checking validity of VCs ... took 0.497594s

Generating VCs ... took 0.018578s
Checking validity of VCs ... took 0.715919s

Generating VCs ... took 0.016944s
Checking validity of VCs ... took 0.509628s

Generating VCs ... took 0.017118s
Checking validity of VCs ... took 0.609045s

Generating VCs ... took 0.018822s
Checking validity of VCs ... took 0.493143s

Generating VCs ... took 0.018307s
Checking validity of VCs ... took 0.640952s

Generating VCs ... took 0.016949s
Checking validity of VCs ... took 1.681551s

Generating VCs ... took 0.018839s
Checking validity of VCs ... took 0.690943s

Generating VCs ... took 0.016738s
Checking validity of VCs ... took 0.714328s

Generating VCs ... took 0.017003s
Checking validity of VCs ... took 1.538344s

Iter : 30 To explore : 2645 Explored : 2928 Total elapsed : 100.553419
Generating VCs ... took 0.016899s
Checking validity of VCs ... took 0.715048s

Generating VCs ... took 0.018046s
Checking validity of VCs ... took 0.635006s

Generating VCs ... took 0.016917s
Checking validity of VCs ... took 1.088635s

Generating VCs ... took 0.01707s
Checking validity of VCs ... took 1.383806s

Generating VCs ... took 0.018049s
Checking validity of VCs ... took 1.094472s

Generating VCs ... took 0.019448s
Checking validity of VCs ... took 1.039531s

Generating VCs ... took 0.017884s
Checking validity of VCs ... took 2.137294s

Generating VCs ... took 0.017268s
Checking validity of VCs ... took 2.029966s

Generating VCs ... took 0.016786s
Checking validity of VCs ... took 2.086821s

Generating VCs ... took 0.017156s
Checking validity of VCs ... took 3.712245s

Iter : 40 To explore : 3708 Explored : 4001 Total elapsed : 116.988228
Generating VCs ... took 0.016842s
Checking validity of VCs ... took 0.768289s

Generating VCs ... took 0.017229s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 41 Total elapsed : 118.312621
[
-1 -> (((randomSeed__@110 == 0) /\ (Read(@TU, owner__@112) == true)) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 212, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... unproven
6/21 ... [ETH_LEAK] line 199, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/21 ... [ETH_LEAK] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/21 ... [RE_EL] line 199, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/21 ... [RE_EL] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 183, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.834209s

Generating VCs ... took 0.017294s
Checking validity of VCs ... took 0.494337s

Generating VCs ... took 0.01708s
Checking validity of VCs ... took 0.491406s

Generating VCs ... took 0.016912s
Checking validity of VCs ... took 0.494208s

Generating VCs ... took 0.017001s
Checking validity of VCs ... took 14.164243s

Generating VCs ... took 0.018302s
Checking validity of VCs ... took 1.647044s

Generating VCs ... took 0.018327s
Checking validity of VCs ... took 0.786839s

Generating VCs ... took 0.016911s
Checking validity of VCs ... took 7.73227s

Generating VCs ... took 0.017078s
Checking validity of VCs ... took 14.297702s

Generating VCs ... took 0.00430800000001s
Checking validity of VCs ... 
1/24 ... [NO_EFFECT] line 108, (@pre1 == betLimit) ... unproven
2/24 ... [NO_EFFECT] line 120, (@pre2 == difficulty) ... unproven
3/24 ... [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) ... unproven
4/24 ... [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) ... unproven
5/24 ... [NO_EFFECT] line 155, (@pre6 == blockNumber) ... unproven
6/24 ... [NO_EFFECT] line 162, (@pre5 == winningNumber) ... unproven
7/24 ... [NO_EFFECT] line 197, (@pre7 == ethToTransfer) ... unproven
8/24 ... [NO_EFFECT] line 212, (@pre8 == totalDonated) ... unproven
9/24 ... [NO_EFFECT] line 224, (@pre9 == totalDonated) ... unproven
10/24 ... [ASSIGN_CONST] line 162, (winningNumber == 0) ... unproven
11/24 ... [ASSIGN_CONST] line 212, (totalDonated == 0) ... unproven
12/24 ... [ASSIGN_CONST] line 224, (totalDonated == 0) ... unproven
13/24 ... [DEAD] line 29, false ... unproven
14/24 ... [DEAD] line 41, false ... unproven
15/24 ... [DEAD] line 47, false ... unproven
16/24 ... [DEAD] line 138, false ... unproven
17/24 ... [DEAD] line 156, false ... unproven
18/24 ... [DEAD] line 161, false ... unproven
19/24 ... [DEAD] line 164, false ... unproven
20/24 ... [DEAD] line 166, false ... unproven
21/24 ... [DEAD] line 171, false ... unproven
22/24 ... [DEAD] line 188, false ... unproven
23/24 ... [DEAD] line 199, false ... unproven
24/24 ... [DEAD] line 211, false ... unproven
took 1.617947s


===== Vulnerability Report =====
[1] [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 162, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[3] [IO] line 211, (totalDonated + amount) : proven
[4] [IO] line 212, (totalDonated + amount) : proven
[5] [IO] line 224, (totalDonated + amount) : unproven
[6] [ETH_LEAK] line 199, winner.transfer(ethToTransfer); : unproven
[7] [ETH_LEAK] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [ETH_LEAK] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[9] [RE_EL] line 199, winner.transfer(ethToTransfer); : unproven
[10] [RE_EL] line 210, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE_EL] line 223, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[12] [RE] line 94, (PoCGame, OpenToThePublic, []) : proven
[13] [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[14] [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) : proven
[15] [RE] line 126, (PoCGame, @fallback, []) : unproven
[16] [RE] line 131, (PoCGame, wager, []) : unproven
[17] [RE] line 149, (PoCGame, play, []) : unproven
[18] [RE] line 183, (PoCGame, donate, []) : unproven
[19] [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) : proven
[20] [TX_ORG] line 29, assume((msg.sender == owner)); : proven
[21] [TX_ORG] line 41, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 108, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 120, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 155, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 162, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 197, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 212, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 224, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 162, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 212, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 224, (totalDonated == 0) : unproven
[13] [DEAD] line 29, false : unproven
[14] [DEAD] line 41, false : unproven
[15] [DEAD] line 47, false : unproven
[16] [DEAD] line 138, false : unproven
[17] [DEAD] line 156, false : unproven
[18] [DEAD] line 161, false : unproven
[19] [DEAD] line 164, false : unproven
[20] [DEAD] line 166, false : unproven
[21] [DEAD] line 171, false : unproven
[22] [DEAD] line 188, false : unproven
[23] [DEAD] line 199, false : unproven
[24] [DEAD] line 211, false : unproven

============ Statistics ============
# Iter                    : 49
# Alarm / Query           : 9 / 21
- integer over/underflow  : 3 / 5
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 4 / 8
- tx.origin               : 0 / 2

Time Elapsed (Real) : 163.472485065
Time Elapsed (CPU)  : 163.495216
