[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 32
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000762s
[INFO] # path : 56

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.002187s
Generating VCs ... took 0.014843s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.087296
[
-1 -> true
0 -> true
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 210, (totalDonated + amount) ... unproven
3/20 ... [IO] line 222, (totalDonated + amount) ... proven
4/20 ... [IO] line 223, (totalDonated + amount) ... proven
5/20 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/20 ... [ETH_LEAK] line 221, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/20 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/20 ... [RE_EL] line 221, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... unproven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 182, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... unproven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.032563s

Generating VCs ... took 0.015387s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 2.186455
[
-1 -> (Read(@TU, owner__@112) == true)
0 -> (Read(@TU, owner__@112) == true)
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 210, (totalDonated + amount) ... unproven
3/20 ... [IO] line 222, (totalDonated + amount) ... proven
4/20 ... [IO] line 223, (totalDonated + amount) ... proven
5/20 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/20 ... [ETH_LEAK] line 221, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/20 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/20 ... [RE_EL] line 221, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 182, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 1.939487s

Generating VCs ... took 0.015461s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 4.679361
[
-1 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 210, (totalDonated + amount) ... unproven
3/20 ... [IO] line 222, (totalDonated + amount) ... proven
4/20 ... [IO] line 223, (totalDonated + amount) ... proven
5/20 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/20 ... [ETH_LEAK] line 221, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/20 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/20 ... [RE_EL] line 221, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 182, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.304821s

Generating VCs ... took 0.014798s
Checking validity of VCs ... took 0.48959s

Generating VCs ... took 0.015727s
Checking validity of VCs ... took 0.486711s

Generating VCs ... took 0.016794s
Checking validity of VCs ... took 0.498919s

Generating VCs ... took 0.015525s
Checking validity of VCs ... took 0.66071s

Generating VCs ... took 0.016665s
Checking validity of VCs ... took 7.82253s

Generating VCs ... took 0.015065s
Checking validity of VCs ... took 14.742817s

Iter : 10 To explore : 700 Explored : 963 Total elapsed : 31.458712
Generating VCs ... took 0.016815s
Checking validity of VCs ... took 1.486926s

Generating VCs ... took 0.015701s
Checking validity of VCs ... took 7.825823s

Generating VCs ... took 0.015767s
Checking validity of VCs ... took 4.232606s

Generating VCs ... took 0.017231s
Checking validity of VCs ... took 16.021086s

Generating VCs ... took 0.017232s
Checking validity of VCs ... took 8.299414s

Generating VCs ... took 0.01619s
Checking validity of VCs ... took 1.828326s

Generating VCs ... took 0.016768s
Checking validity of VCs ... took 6.503201s

Generating VCs ... took 0.016387s
Checking validity of VCs ... took 3.716028s

Generating VCs ... took 0.019509s
Checking validity of VCs ... took 0.486213s

Generating VCs ... took 0.01503s
Checking validity of VCs ... took 0.70359s

Iter : 20 To explore : 1751 Explored : 2024 Total elapsed : 83.004846
Generating VCs ... took 0.015222s
Checking validity of VCs ... took 0.504233s

Generating VCs ... took 0.015222s
Checking validity of VCs ... took 0.710095s

Generating VCs ... took 0.015024s
Checking validity of VCs ... took 0.508139s

Generating VCs ... took 0.015048s
Checking validity of VCs ... took 0.602082s

Generating VCs ... took 0.015225s
Checking validity of VCs ... took 0.497952s

Generating VCs ... took 0.015427s
Checking validity of VCs ... took 0.65263s

Generating VCs ... took 0.01675s
Checking validity of VCs ... took 1.410147s

Generating VCs ... took 0.015071s
Checking validity of VCs ... took 0.635558s

Generating VCs ... took 0.015317s
Checking validity of VCs ... took 0.710068s

Generating VCs ... took 0.01567s
Checking validity of VCs ... took 1.273768s

Iter : 30 To explore : 2645 Explored : 2928 Total elapsed : 90.86626
Generating VCs ... took 0.01518s
Checking validity of VCs ... took 0.686571s

Generating VCs ... took 0.01535s
Checking validity of VCs ... took 0.629515s

Generating VCs ... took 0.015562s
Checking validity of VCs ... took 0.929251s

Generating VCs ... took 0.016867s
Checking validity of VCs ... took 1.427038s

Generating VCs ... took 0.015206s
Checking validity of VCs ... took 1.172219s

Generating VCs ... took 0.015196s
Checking validity of VCs ... took 1.159216s

Generating VCs ... took 0.017564s
Checking validity of VCs ... took 2.325476s

Generating VCs ... took 0.015776s
Checking validity of VCs ... took 1.844666s

Generating VCs ... took 0.01533s
Checking validity of VCs ... took 2.020094s

Generating VCs ... took 0.015486s
Checking validity of VCs ... took 3.954202s

Iter : 40 To explore : 3708 Explored : 4001 Total elapsed : 107.516403
Generating VCs ... took 0.014969s
Checking validity of VCs ... took 0.723363s

Generating VCs ... took 0.015374s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 41 Total elapsed : 108.790878
[
-1 -> (((randomSeed__@110 == 0) /\ (Read(@TU, owner__@112) == true)) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 210, (totalDonated + amount) ... unproven
3/20 ... [IO] line 222, (totalDonated + amount) ... proven
4/20 ... [IO] line 223, (totalDonated + amount) ... proven
5/20 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/20 ... [ETH_LEAK] line 221, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/20 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/20 ... [RE_EL] line 221, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 182, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 1.849064s

Generating VCs ... took 0.016559s
Checking validity of VCs ... took 0.493082s

Generating VCs ... took 0.015618s
Checking validity of VCs ... took 0.487585s

Generating VCs ... took 0.015687s
Checking validity of VCs ... took 0.488643s

Generating VCs ... took 0.015209s
Checking validity of VCs ... took 15.010898s

Generating VCs ... took 0.014941s
Checking validity of VCs ... took 1.853762s

Generating VCs ... took 0.015294s
Checking validity of VCs ... took 0.586799s

Generating VCs ... took 0.01517s
Checking validity of VCs ... took 9.114628s

Generating VCs ... took 0.015329s
Checking validity of VCs ... took 17.137879s

Generating VCs ... took 0.00507100000002s
Checking validity of VCs ... 
1/23 ... [NO_EFFECT] line 108, (@pre1 == betLimit) ... unproven
2/23 ... [NO_EFFECT] line 120, (@pre2 == difficulty) ... unproven
3/23 ... [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) ... unproven
4/23 ... [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) ... unproven
5/23 ... [NO_EFFECT] line 155, (@pre6 == blockNumber) ... unproven
6/23 ... [NO_EFFECT] line 161, (@pre5 == winningNumber) ... unproven
7/23 ... [NO_EFFECT] line 196, (@pre7 == ethToTransfer) ... unproven
8/23 ... [NO_EFFECT] line 210, (@pre8 == totalDonated) ... unproven
9/23 ... [NO_EFFECT] line 223, (@pre9 == totalDonated) ... unproven
10/23 ... [ASSIGN_CONST] line 161, (winningNumber == 0) ... unproven
11/23 ... [ASSIGN_CONST] line 210, (totalDonated == 0) ... unproven
12/23 ... [ASSIGN_CONST] line 223, (totalDonated == 0) ... unproven
13/23 ... [DEAD] line 29, false ... unproven
14/23 ... [DEAD] line 41, false ... unproven
15/23 ... [DEAD] line 47, false ... unproven
16/23 ... [DEAD] line 138, false ... unproven
17/23 ... [DEAD] line 156, false ... unproven
18/23 ... [DEAD] line 163, false ... unproven
19/23 ... [DEAD] line 165, false ... unproven
20/23 ... [DEAD] line 170, false ... unproven
21/23 ... [DEAD] line 187, false ... unproven
22/23 ... [DEAD] line 198, false ... unproven
23/23 ... [DEAD] line 222, false ... unproven
took 1.120977s


===== Vulnerability Report =====
[1] [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 210, (totalDonated + amount) : unproven
[3] [IO] line 222, (totalDonated + amount) : proven
[4] [IO] line 223, (totalDonated + amount) : proven
[5] [ETH_LEAK] line 198, winner.transfer(ethToTransfer); : unproven
[6] [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[7] [ETH_LEAK] line 221, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [RE_EL] line 198, winner.transfer(ethToTransfer); : unproven
[9] [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[10] [RE_EL] line 221, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE] line 94, (PoCGame, OpenToThePublic, []) : proven
[12] [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[13] [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) : proven
[14] [RE] line 126, (PoCGame, @fallback, []) : unproven
[15] [RE] line 131, (PoCGame, wager, []) : unproven
[16] [RE] line 149, (PoCGame, play, []) : unproven
[17] [RE] line 182, (PoCGame, donate, []) : unproven
[18] [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) : proven
[19] [TX_ORG] line 29, assume((msg.sender == owner)); : proven
[20] [TX_ORG] line 41, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 108, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 120, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 155, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 161, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 196, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 210, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 223, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 161, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 210, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 223, (totalDonated == 0) : unproven
[13] [DEAD] line 29, false : unproven
[14] [DEAD] line 41, false : unproven
[15] [DEAD] line 47, false : unproven
[16] [DEAD] line 138, false : unproven
[17] [DEAD] line 156, false : unproven
[18] [DEAD] line 163, false : unproven
[19] [DEAD] line 165, false : unproven
[20] [DEAD] line 170, false : unproven
[21] [DEAD] line 187, false : unproven
[22] [DEAD] line 198, false : unproven
[23] [DEAD] line 222, false : unproven

============ Statistics ============
# Iter                    : 49
# Alarm / Query           : 8 / 20
- integer over/underflow  : 2 / 4
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 4 / 8
- tx.origin               : 0 / 2

Time Elapsed (Real) : 157.446231127
Time Elapsed (CPU)  : 157.499604
