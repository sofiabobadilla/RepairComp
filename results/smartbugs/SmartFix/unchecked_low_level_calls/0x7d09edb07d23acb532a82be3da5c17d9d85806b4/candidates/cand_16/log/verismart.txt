[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 32
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000766s
[INFO] # path : 56

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001998s
Generating VCs ... took 0.013059s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.086962
[
-1 -> true
0 -> true
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 210, (totalDonated + amount) ... proven
3/20 ... [IO] line 211, (totalDonated + amount) ... proven
4/20 ... [IO] line 223, (totalDonated + amount) ... unproven
5/20 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/20 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/20 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/20 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... unproven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 182, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... unproven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 1.78711s

Generating VCs ... took 0.013334s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 1.933283
[
-1 -> (Read(@TU, owner__@112) == true)
0 -> (Read(@TU, owner__@112) == true)
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 210, (totalDonated + amount) ... proven
3/20 ... [IO] line 211, (totalDonated + amount) ... proven
4/20 ... [IO] line 223, (totalDonated + amount) ... unproven
5/20 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/20 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/20 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/20 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 182, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 1.889465s

Generating VCs ... took 0.01245s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 4.348803
[
-1 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 210, (totalDonated + amount) ... proven
3/20 ... [IO] line 211, (totalDonated + amount) ... proven
4/20 ... [IO] line 223, (totalDonated + amount) ... unproven
5/20 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/20 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/20 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/20 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 182, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.162785s

Generating VCs ... took 0.01419s
Checking validity of VCs ... took 0.478736s

Generating VCs ... took 0.013143s
Checking validity of VCs ... took 0.465514s

Generating VCs ... took 0.013213s
Checking validity of VCs ... took 0.47268s

Generating VCs ... took 0.013413s
Checking validity of VCs ... took 0.689782s

Generating VCs ... took 0.013884s
Checking validity of VCs ... took 6.769867s

Generating VCs ... took 0.013212s
Checking validity of VCs ... took 14.331071s

Iter : 10 To explore : 700 Explored : 963 Total elapsed : 29.492247
Generating VCs ... took 0.013357s
Checking validity of VCs ... took 1.591829s

Generating VCs ... took 0.013865s
Checking validity of VCs ... took 11.286583s

Generating VCs ... took 0.013014s
Checking validity of VCs ... took 3.223073s

Generating VCs ... took 0.0131s
Checking validity of VCs ... took 17.397151s

Generating VCs ... took 0.014269s
Checking validity of VCs ... took 6.635396s

Generating VCs ... took 0.013898s
Checking validity of VCs ... took 1.542428s

Generating VCs ... took 0.013479s
Checking validity of VCs ... took 8.263323s

Generating VCs ... took 0.014351s
Checking validity of VCs ... took 2.915527s

Generating VCs ... took 0.01335s
Checking validity of VCs ... took 0.564002s

Generating VCs ... took 0.01351s
Checking validity of VCs ... took 0.736267s

Iter : 20 To explore : 1751 Explored : 2024 Total elapsed : 84.064073
Generating VCs ... took 0.014882s
Checking validity of VCs ... took 0.520108s

Generating VCs ... took 0.01388s
Checking validity of VCs ... took 0.742971s

Generating VCs ... took 0.013363s
Checking validity of VCs ... took 0.508023s

Generating VCs ... took 0.014048s
Checking validity of VCs ... took 0.618855s

Generating VCs ... took 0.013243s
Checking validity of VCs ... took 0.497682s

Generating VCs ... took 0.013731s
Checking validity of VCs ... took 0.752901s

Generating VCs ... took 0.013837s
Checking validity of VCs ... took 1.123816s

Generating VCs ... took 0.015851s
Checking validity of VCs ... took 0.590515s

Generating VCs ... took 0.013084s
Checking validity of VCs ... took 0.616022s

Generating VCs ... took 0.013326s
Checking validity of VCs ... took 1.167108s

Iter : 30 To explore : 2645 Explored : 2928 Total elapsed : 91.550204
Generating VCs ... took 0.013436s
Checking validity of VCs ... took 0.635408s

Generating VCs ... took 0.01344s
Checking validity of VCs ... took 0.635878s

Generating VCs ... took 0.013483s
Checking validity of VCs ... took 1.046256s

Generating VCs ... took 0.013362s
Checking validity of VCs ... took 1.28764s

Generating VCs ... took 0.015724s
Checking validity of VCs ... took 1.059582s

Generating VCs ... took 0.013949s
Checking validity of VCs ... took 0.933908s

Generating VCs ... took 0.01551s
Checking validity of VCs ... took 1.510252s

Generating VCs ... took 0.013696s
Checking validity of VCs ... took 1.313995s

Generating VCs ... took 0.013043s
Checking validity of VCs ... took 1.343083s

Generating VCs ... took 0.015879s
Checking validity of VCs ... took 2.74282s

Iter : 40 To explore : 3708 Explored : 4001 Total elapsed : 104.541925
Generating VCs ... took 0.015469s
Checking validity of VCs ... took 0.573693s

Generating VCs ... took 0.013072s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 41 Total elapsed : 105.65648
[
-1 -> (((randomSeed__@110 == 0) /\ (Read(@TU, owner__@112) == true)) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 210, (totalDonated + amount) ... proven
3/20 ... [IO] line 211, (totalDonated + amount) ... proven
4/20 ... [IO] line 223, (totalDonated + amount) ... unproven
5/20 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/20 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/20 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/20 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 182, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 1.817766s

Generating VCs ... took 0.013413s
Checking validity of VCs ... took 0.491521s

Generating VCs ... took 0.013188s
Checking validity of VCs ... took 0.507532s

Generating VCs ... took 0.013333s
Checking validity of VCs ... took 0.503296s

Generating VCs ... took 0.013235s
Checking validity of VCs ... took 14.352419s

Generating VCs ... took 0.013195s
Checking validity of VCs ... took 1.583649s

Generating VCs ... took 0.014014s
Checking validity of VCs ... took 0.693546s

Generating VCs ... took 0.018592s
Checking validity of VCs ... took 5.666065s

Generating VCs ... took 0.01314s
Checking validity of VCs ... took 14.373823s

Iter : 50 To explore : 3575 Explored : 7593 Total elapsed : 146.224734
Generating VCs ... took 0.013742s
Checking validity of VCs ... took 1.610688s

Generating VCs ... took 0.01312s
Checking validity of VCs ... took 7.095047s

Generating VCs ... took 0.003818s
Checking validity of VCs ... 
1/23 ... [NO_EFFECT] line 108, (@pre1 == betLimit) ... unproven
2/23 ... [NO_EFFECT] line 120, (@pre2 == difficulty) ... unproven
3/23 ... [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) ... unproven
4/23 ... [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) ... unproven
5/23 ... [NO_EFFECT] line 155, (@pre6 == blockNumber) ... unproven
6/23 ... [NO_EFFECT] line 161, (@pre5 == winningNumber) ... unproven
7/23 ... [NO_EFFECT] line 196, (@pre7 == ethToTransfer) ... unproven
8/23 ... [NO_EFFECT] line 211, (@pre8 == totalDonated) ... unproven
9/23 ... [NO_EFFECT] line 223, (@pre9 == totalDonated) ... unproven
10/23 ... [ASSIGN_CONST] line 161, (winningNumber == 0) ... unproven
11/23 ... [ASSIGN_CONST] line 211, (totalDonated == 0) ... unproven
12/23 ... [ASSIGN_CONST] line 223, (totalDonated == 0) ... unproven
13/23 ... [DEAD] line 29, false ... unproven
14/23 ... [DEAD] line 41, false ... unproven
15/23 ... [DEAD] line 47, false ... unproven
16/23 ... [DEAD] line 138, false ... unproven
17/23 ... [DEAD] line 156, false ... unproven
18/23 ... [DEAD] line 163, false ... unproven
19/23 ... [DEAD] line 165, false ... unproven
20/23 ... [DEAD] line 170, false ... unproven
21/23 ... [DEAD] line 187, false ... unproven
22/23 ... [DEAD] line 198, false ... unproven
23/23 ... [DEAD] line 210, false ... unproven
took 1.650777s


===== Vulnerability Report =====
[1] [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 210, (totalDonated + amount) : proven
[3] [IO] line 211, (totalDonated + amount) : proven
[4] [IO] line 223, (totalDonated + amount) : unproven
[5] [ETH_LEAK] line 198, winner.transfer(ethToTransfer); : unproven
[6] [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[7] [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [RE_EL] line 198, winner.transfer(ethToTransfer); : unproven
[9] [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[10] [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE] line 94, (PoCGame, OpenToThePublic, []) : proven
[12] [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[13] [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) : proven
[14] [RE] line 126, (PoCGame, @fallback, []) : unproven
[15] [RE] line 131, (PoCGame, wager, []) : unproven
[16] [RE] line 149, (PoCGame, play, []) : unproven
[17] [RE] line 182, (PoCGame, donate, []) : unproven
[18] [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) : proven
[19] [TX_ORG] line 29, assume((msg.sender == owner)); : proven
[20] [TX_ORG] line 41, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 108, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 120, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 155, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 161, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 196, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 211, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 223, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 161, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 211, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 223, (totalDonated == 0) : unproven
[13] [DEAD] line 29, false : unproven
[14] [DEAD] line 41, false : unproven
[15] [DEAD] line 47, false : unproven
[16] [DEAD] line 138, false : unproven
[17] [DEAD] line 156, false : unproven
[18] [DEAD] line 163, false : unproven
[19] [DEAD] line 165, false : unproven
[20] [DEAD] line 170, false : unproven
[21] [DEAD] line 187, false : unproven
[22] [DEAD] line 198, false : unproven
[23] [DEAD] line 210, false : unproven

============ Statistics ============
# Iter                    : 51
# Alarm / Query           : 8 / 20
- integer over/underflow  : 2 / 4
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 4 / 8
- tx.origin               : 0 / 2

Time Elapsed (Real) : 156.696507931
Time Elapsed (CPU)  : 156.692948
