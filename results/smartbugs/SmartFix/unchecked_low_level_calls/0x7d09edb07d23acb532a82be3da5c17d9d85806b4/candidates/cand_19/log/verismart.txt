[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 32
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000928s
[INFO] # path : 60

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.002583s
Generating VCs ... took 0.016327s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.092968
[
-1 -> true
0 -> true
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 210, (totalDonated + amount) ... proven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 223, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/21 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/21 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/21 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... unproven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 182, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... unproven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.094506s

Generating VCs ... took 0.016212s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 2.258453
[
-1 -> (Read(@TU, owner__@112) == true)
0 -> (Read(@TU, owner__@112) == true)
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 210, (totalDonated + amount) ... proven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 223, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/21 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
9/21 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/21 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 182, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 1.575551s

Generating VCs ... took 0.016445s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 4.381938
[
-1 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 210, (totalDonated + amount) ... proven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 223, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/21 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/21 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/21 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 182, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.260131s

Generating VCs ... took 0.016357s
Checking validity of VCs ... took 0.483931s

Generating VCs ... took 0.016055s
Checking validity of VCs ... took 0.459946s

Generating VCs ... took 0.017585s
Checking validity of VCs ... took 0.473545s

Generating VCs ... took 0.016352s
Checking validity of VCs ... took 0.678037s

Generating VCs ... took 0.017758s
Checking validity of VCs ... took 7.62197s

Generating VCs ... took 0.016341s
Checking validity of VCs ... took 16.900308s

Iter : 10 To explore : 700 Explored : 963 Total elapsed : 33.047174
Generating VCs ... took 0.016442s
Checking validity of VCs ... took 1.631346s

Generating VCs ... took 0.016982s
Checking validity of VCs ... took 7.457654s

Generating VCs ... took 0.016449s
Checking validity of VCs ... took 4.089184s

Generating VCs ... took 0.018563s
Checking validity of VCs ... took 15.301478s

Generating VCs ... took 0.017001s
Checking validity of VCs ... took 8.020063s

Generating VCs ... took 0.017679s
Checking validity of VCs ... took 1.743545s

Generating VCs ... took 0.016377s
Checking validity of VCs ... took 8.422321s

Generating VCs ... took 0.016324s
Checking validity of VCs ... took 4.662546s

Generating VCs ... took 0.016896s
Checking validity of VCs ... took 0.5776s

Generating VCs ... took 0.016634s
Checking validity of VCs ... took 0.700708s

Iter : 20 To explore : 1751 Explored : 2024 Total elapsed : 86.095715
Generating VCs ... took 0.016855s
Checking validity of VCs ... took 0.48542s

Generating VCs ... took 0.016302s
Checking validity of VCs ... took 0.633571s

Generating VCs ... took 0.016292s
Checking validity of VCs ... took 0.487923s

Generating VCs ... took 0.016653s
Checking validity of VCs ... took 0.5813s

Generating VCs ... took 0.017552s
Checking validity of VCs ... took 0.492054s

Generating VCs ... took 0.017143s
Checking validity of VCs ... took 0.647447s

Generating VCs ... took 0.016656s
Checking validity of VCs ... took 1.487976s

Generating VCs ... took 0.016618s
Checking validity of VCs ... took 0.613711s

Generating VCs ... took 0.016392s
Checking validity of VCs ... took 0.671029s

Generating VCs ... took 0.018465s
Checking validity of VCs ... took 1.337273s

Iter : 30 To explore : 2645 Explored : 2928 Total elapsed : 93.905245
Generating VCs ... took 0.016537s
Checking validity of VCs ... took 0.666577s

Generating VCs ... took 0.018481s
Checking validity of VCs ... took 0.699039s

Generating VCs ... took 0.016631s
Checking validity of VCs ... took 0.956645s

Generating VCs ... took 0.016835s
Checking validity of VCs ... took 1.181619s

Generating VCs ... took 0.017369s
Checking validity of VCs ... took 1.606752s

Generating VCs ... took 0.016602s
Checking validity of VCs ... took 0.962815s

Generating VCs ... took 0.017026s
Checking validity of VCs ... took 2.190983s

Generating VCs ... took 0.016565s
Checking validity of VCs ... took 1.838066s

Generating VCs ... took 0.016768s
Checking validity of VCs ... took 1.995666s

Generating VCs ... took 0.017694s
Checking validity of VCs ... took 4.535134s

Iter : 40 To explore : 3708 Explored : 4001 Total elapsed : 111.05153
Generating VCs ... took 0.016569s
Checking validity of VCs ... took 0.677559s

Generating VCs ... took 0.018782s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 41 Total elapsed : 112.275271
[
-1 -> (((randomSeed__@110 == 0) /\ (Read(@TU, owner__@112) == true)) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/21 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/21 ... [IO] line 210, (totalDonated + amount) ... proven
3/21 ... [IO] line 211, (totalDonated + amount) ... proven
4/21 ... [IO] line 223, (totalDonated + amount) ... proven
5/21 ... [IO] line 224, (totalDonated + amount) ... proven
6/21 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
7/21 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/21 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
9/21 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
10/21 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/21 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
12/21 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
13/21 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
14/21 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
15/21 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
16/21 ... [RE] line 131, (PoCGame, wager, []) ... unproven
17/21 ... [RE] line 149, (PoCGame, play, []) ... unproven
18/21 ... [RE] line 182, (PoCGame, donate, []) ... unproven
19/21 ... [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
20/21 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
21/21 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 1.86788s

Generating VCs ... took 0.016339s
Checking validity of VCs ... took 0.487471s

Generating VCs ... took 0.017552s
Checking validity of VCs ... took 0.497869s

Generating VCs ... took 0.017435s
Checking validity of VCs ... took 0.497206s

Generating VCs ... took 0.017761s
Checking validity of VCs ... took 13.32265s

Generating VCs ... took 0.017004s
Checking validity of VCs ... took 1.605511s

Generating VCs ... took 0.017622s
Checking validity of VCs ... took 0.611308s

Generating VCs ... took 0.016247s
Checking validity of VCs ... took 6.996469s

Generating VCs ... took 0.016421s
Checking validity of VCs ... took 15.385767s

Generating VCs ... took 0.00484499999999s
Checking validity of VCs ... 
1/24 ... [NO_EFFECT] line 108, (@pre1 == betLimit) ... unproven
2/24 ... [NO_EFFECT] line 120, (@pre2 == difficulty) ... unproven
3/24 ... [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) ... unproven
4/24 ... [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) ... unproven
5/24 ... [NO_EFFECT] line 155, (@pre6 == blockNumber) ... unproven
6/24 ... [NO_EFFECT] line 161, (@pre5 == winningNumber) ... unproven
7/24 ... [NO_EFFECT] line 196, (@pre7 == ethToTransfer) ... unproven
8/24 ... [NO_EFFECT] line 211, (@pre8 == totalDonated) ... unproven
9/24 ... [NO_EFFECT] line 224, (@pre9 == totalDonated) ... unproven
10/24 ... [ASSIGN_CONST] line 161, (winningNumber == 0) ... unproven
11/24 ... [ASSIGN_CONST] line 211, (totalDonated == 0) ... unproven
12/24 ... [ASSIGN_CONST] line 224, (totalDonated == 0) ... unproven
13/24 ... [DEAD] line 29, false ... unproven
14/24 ... [DEAD] line 41, false ... unproven
15/24 ... [DEAD] line 47, false ... unproven
16/24 ... [DEAD] line 138, false ... unproven
17/24 ... [DEAD] line 156, false ... unproven
18/24 ... [DEAD] line 163, false ... unproven
19/24 ... [DEAD] line 165, false ... unproven
20/24 ... [DEAD] line 170, false ... unproven
21/24 ... [DEAD] line 187, false ... unproven
22/24 ... [DEAD] line 198, false ... unproven
23/24 ... [DEAD] line 210, false ... unproven
24/24 ... [DEAD] line 223, false ... unproven
took 1.561224s


===== Vulnerability Report =====
[1] [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 210, (totalDonated + amount) : proven
[3] [IO] line 211, (totalDonated + amount) : proven
[4] [IO] line 223, (totalDonated + amount) : proven
[5] [IO] line 224, (totalDonated + amount) : proven
[6] [ETH_LEAK] line 198, winner.transfer(ethToTransfer); : unproven
[7] [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[9] [RE_EL] line 198, winner.transfer(ethToTransfer); : unproven
[10] [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[12] [RE] line 94, (PoCGame, OpenToThePublic, []) : proven
[13] [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[14] [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) : proven
[15] [RE] line 126, (PoCGame, @fallback, []) : unproven
[16] [RE] line 131, (PoCGame, wager, []) : unproven
[17] [RE] line 149, (PoCGame, play, []) : unproven
[18] [RE] line 182, (PoCGame, donate, []) : unproven
[19] [RE] line 294, (PoCGame, transferAnyERC20Token, [address, address, uint256]) : proven
[20] [TX_ORG] line 29, assume((msg.sender == owner)); : proven
[21] [TX_ORG] line 41, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 108, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 120, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 155, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 161, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 196, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 211, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 224, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 161, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 211, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 224, (totalDonated == 0) : unproven
[13] [DEAD] line 29, false : unproven
[14] [DEAD] line 41, false : unproven
[15] [DEAD] line 47, false : unproven
[16] [DEAD] line 138, false : unproven
[17] [DEAD] line 156, false : unproven
[18] [DEAD] line 163, false : unproven
[19] [DEAD] line 165, false : unproven
[20] [DEAD] line 170, false : unproven
[21] [DEAD] line 187, false : unproven
[22] [DEAD] line 198, false : unproven
[23] [DEAD] line 210, false : unproven
[24] [DEAD] line 223, false : unproven

============ Statistics ============
# Iter                    : 49
# Alarm / Query           : 7 / 21
- integer over/underflow  : 1 / 5
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 4 / 8
- tx.origin               : 0 / 2

Time Elapsed (Real) : 155.670855999
Time Elapsed (CPU)  : 155.685221
