[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 32
[INFO] reachable : 15
[INFO] Generating Paths ... took 0.000521s
[INFO] # path : 53

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001843s
Generating VCs ... took 0.012945s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.086844
[
-1 -> true
0 -> true
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 210, (totalDonated + amount) ... proven
3/20 ... [IO] line 211, (totalDonated + amount) ... proven
4/20 ... [IO] line 223, (totalDonated + amount) ... unproven
5/20 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/20 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/20 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/20 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... unproven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... unproven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... unproven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 182, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... unproven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 2.056739s

Generating VCs ... took 0.013388s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 2.20364
[
-1 -> (Read(@TU, owner__@112) == true)
0 -> (Read(@TU, owner__@112) == true)
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 210, (totalDonated + amount) ... proven
3/20 ... [IO] line 211, (totalDonated + amount) ... proven
4/20 ... [IO] line 223, (totalDonated + amount) ... unproven
5/20 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
7/20 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
8/20 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
10/20 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... unproven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 182, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 1.950312s

Generating VCs ... took 0.013147s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 4.690925
[
-1 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 210, (totalDonated + amount) ... proven
3/20 ... [IO] line 211, (totalDonated + amount) ... proven
4/20 ... [IO] line 223, (totalDonated + amount) ... unproven
5/20 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/20 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/20 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/20 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 182, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 1.930605s

Generating VCs ... took 0.013144s
Checking validity of VCs ... took 0.474634s

Generating VCs ... took 0.014185s
Checking validity of VCs ... took 0.476203s

Generating VCs ... took 0.013345s
Checking validity of VCs ... took 0.469496s

Generating VCs ... took 0.012405s
Checking validity of VCs ... took 0.634828s

Generating VCs ... took 0.012806s
Checking validity of VCs ... took 6.781324s

Generating VCs ... took 0.013259s
Checking validity of VCs ... took 14.025679s

Iter : 10 To explore : 700 Explored : 963 Total elapsed : 29.243318
Generating VCs ... took 0.014624s
Checking validity of VCs ... took 1.16499s

Generating VCs ... took 0.01367s
Checking validity of VCs ... took 7.189765s

Generating VCs ... took 0.013091s
Checking validity of VCs ... took 3.418696s

Generating VCs ... took 0.013803s
Checking validity of VCs ... took 16.977407s

Generating VCs ... took 0.013093s
Checking validity of VCs ... took 7.001424s

Generating VCs ... took 0.012745s
Checking validity of VCs ... took 1.602572s

Generating VCs ... took 0.012915s
Checking validity of VCs ... took 8.158214s

Generating VCs ... took 0.014252s
Checking validity of VCs ... took 3.989922s

Generating VCs ... took 0.013105s
Checking validity of VCs ... took 0.526332s

Generating VCs ... took 0.01337s
Checking validity of VCs ... took 0.69522s

Iter : 20 To explore : 1751 Explored : 2024 Total elapsed : 80.370908
Generating VCs ... took 0.014048s
Checking validity of VCs ... took 0.486381s

Generating VCs ... took 0.014051s
Checking validity of VCs ... took 0.700903s

Generating VCs ... took 0.013169s
Checking validity of VCs ... took 0.492738s

Generating VCs ... took 0.014012s
Checking validity of VCs ... took 0.582293s

Generating VCs ... took 0.01459s
Checking validity of VCs ... took 0.486734s

Generating VCs ... took 0.013425s
Checking validity of VCs ... took 0.694891s

Generating VCs ... took 0.012726s
Checking validity of VCs ... took 1.110654s

Generating VCs ... took 0.012865s
Checking validity of VCs ... took 0.604211s

Generating VCs ... took 0.014252s
Checking validity of VCs ... took 0.69106s

Generating VCs ... took 0.013782s
Checking validity of VCs ... took 0.978342s

Iter : 30 To explore : 2645 Explored : 2928 Total elapsed : 87.540094
Generating VCs ... took 0.013261s
Checking validity of VCs ... took 0.608175s

Generating VCs ... took 0.013072s
Checking validity of VCs ... took 0.642319s

Generating VCs ... took 0.012886s
Checking validity of VCs ... took 1.069119s

Generating VCs ... took 0.012984s
Checking validity of VCs ... took 1.039379s

Generating VCs ... took 0.013308s
Checking validity of VCs ... took 1.070061s

Generating VCs ... took 0.013489s
Checking validity of VCs ... took 1.013926s

Generating VCs ... took 0.013232s
Checking validity of VCs ... took 1.454776s

Generating VCs ... took 0.013562s
Checking validity of VCs ... took 1.128378s

Generating VCs ... took 0.014995s
Checking validity of VCs ... took 1.460452s

Generating VCs ... took 0.013313s
Checking validity of VCs ... took 2.7671s

Iter : 40 To explore : 3708 Explored : 4001 Total elapsed : 100.268718
Generating VCs ... took 0.012953s
Checking validity of VCs ... took 0.678373s

Generating VCs ... took 0.013049s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 41 Total elapsed : 101.474466
[
-1 -> (((randomSeed__@110 == 0) /\ (Read(@TU, owner__@112) == true)) /\ (Read(@TU, whale__@104) == true))
0 -> ((Read(@TU, owner__@112) == true) /\ (Read(@TU, whale__@104) == true))
]
[
]
1/20 ... [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) ... unproven
2/20 ... [IO] line 210, (totalDonated + amount) ... proven
3/20 ... [IO] line 211, (totalDonated + amount) ... proven
4/20 ... [IO] line 223, (totalDonated + amount) ... unproven
5/20 ... [ETH_LEAK] line 198, winner.transfer(ethToTransfer); ... unproven
6/20 ... [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
7/20 ... [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
8/20 ... [RE_EL] line 198, winner.transfer(ethToTransfer); ... unproven
9/20 ... [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
10/20 ... [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); ... proven
11/20 ... [RE] line 94, (PoCGame, OpenToThePublic, []) ... proven
12/20 ... [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) ... proven
13/20 ... [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) ... proven
14/20 ... [RE] line 126, (PoCGame, @fallback, []) ... unproven
15/20 ... [RE] line 131, (PoCGame, wager, []) ... unproven
16/20 ... [RE] line 149, (PoCGame, play, []) ... unproven
17/20 ... [RE] line 182, (PoCGame, donate, []) ... unproven
18/20 ... [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) ... proven
19/20 ... [TX_ORG] line 29, assume((msg.sender == owner)); ... proven
20/20 ... [TX_ORG] line 41, assume((msg.sender == tx.origin)); ... proven
took 1.712151s

Generating VCs ... took 0.013188s
Checking validity of VCs ... took 0.486904s

Generating VCs ... took 0.013012s
Checking validity of VCs ... took 0.489365s

Generating VCs ... took 0.01452s
Checking validity of VCs ... took 0.502027s

Generating VCs ... took 0.014401s
Checking validity of VCs ... took 14.913496s

Generating VCs ... took 0.013019s
Checking validity of VCs ... took 1.565979s

Generating VCs ... took 0.01302s
Checking validity of VCs ... took 0.696787s

Generating VCs ... took 0.013168s
Checking validity of VCs ... took 6.61212s

Generating VCs ... took 0.013341s
Checking validity of VCs ... took 14.592582s

Iter : 50 To explore : 3575 Explored : 7593 Total elapsed : 143.595737
Generating VCs ... took 0.012926s
Checking validity of VCs ... took 1.638841s

Generating VCs ... took 0.012922s
Checking validity of VCs ... took 6.972302s

Generating VCs ... took 0.00385700000001s
Checking validity of VCs ... 
1/23 ... [NO_EFFECT] line 108, (@pre1 == betLimit) ... unproven
2/23 ... [NO_EFFECT] line 120, (@pre2 == difficulty) ... unproven
3/23 ... [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) ... unproven
4/23 ... [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) ... unproven
5/23 ... [NO_EFFECT] line 155, (@pre6 == blockNumber) ... unproven
6/23 ... [NO_EFFECT] line 161, (@pre5 == winningNumber) ... unproven
7/23 ... [NO_EFFECT] line 196, (@pre7 == ethToTransfer) ... unproven
8/23 ... [NO_EFFECT] line 211, (@pre8 == totalDonated) ... unproven
9/23 ... [NO_EFFECT] line 223, (@pre9 == totalDonated) ... unproven
10/23 ... [ASSIGN_CONST] line 161, (winningNumber == 0) ... unproven
11/23 ... [ASSIGN_CONST] line 211, (totalDonated == 0) ... unproven
12/23 ... [ASSIGN_CONST] line 223, (totalDonated == 0) ... unproven
13/23 ... [DEAD] line 29, false ... unproven
14/23 ... [DEAD] line 41, false ... unproven
15/23 ... [DEAD] line 47, false ... unproven
16/23 ... [DEAD] line 138, false ... unproven
17/23 ... [DEAD] line 156, false ... unproven
18/23 ... [DEAD] line 163, false ... unproven
19/23 ... [DEAD] line 165, false ... unproven
20/23 ... [DEAD] line 170, false ... unproven
21/23 ... [DEAD] line 187, false ... unproven
22/23 ... [DEAD] line 198, false ... unproven
23/23 ... [DEAD] line 210, false ... unproven
took 1.250556s


===== Vulnerability Report =====
[1] [IO] line 161, ((uint256(keccak256(abi.encodePacked(blockhash(blockNumber), msg.sender))) % difficulty) + 1) : unproven
[2] [IO] line 210, (totalDonated + amount) : proven
[3] [IO] line 211, (totalDonated + amount) : proven
[4] [IO] line 223, (totalDonated + amount) : unproven
[5] [ETH_LEAK] line 198, winner.transfer(ethToTransfer); : unproven
[6] [ETH_LEAK] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[7] [ETH_LEAK] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[8] [RE_EL] line 198, winner.transfer(ethToTransfer); : unproven
[9] [RE_EL] line 209, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[10] [RE_EL] line 222, whale.call.value(amount)(bytes4(keccak256("donate()"))); : proven
[11] [RE] line 94, (PoCGame, OpenToThePublic, []) : proven
[12] [RE] line 104, (PoCGame, AdjustBetAmounts, [uint256]) : proven
[13] [RE] line 116, (PoCGame, AdjustDifficulty, [uint256]) : proven
[14] [RE] line 126, (PoCGame, @fallback, []) : unproven
[15] [RE] line 131, (PoCGame, wager, []) : unproven
[16] [RE] line 149, (PoCGame, play, []) : unproven
[17] [RE] line 182, (PoCGame, donate, []) : unproven
[18] [RE] line 293, (PoCGame, transferAnyERC20Token, [address, address, uint256]) : proven
[19] [TX_ORG] line 29, assume((msg.sender == owner)); : proven
[20] [TX_ORG] line 41, assume((msg.sender == tx.origin)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 108, (@pre1 == betLimit) : unproven
[2] [NO_EFFECT] line 120, (@pre2 == difficulty) : unproven
[3] [NO_EFFECT] line 141, (@pre4 == timestamps[msg.sender]) : unproven
[4] [NO_EFFECT] line 142, (@pre3 == wagers[msg.sender]) : unproven
[5] [NO_EFFECT] line 155, (@pre6 == blockNumber) : unproven
[6] [NO_EFFECT] line 161, (@pre5 == winningNumber) : unproven
[7] [NO_EFFECT] line 196, (@pre7 == ethToTransfer) : unproven
[8] [NO_EFFECT] line 211, (@pre8 == totalDonated) : unproven
[9] [NO_EFFECT] line 223, (@pre9 == totalDonated) : unproven
[10] [ASSIGN_CONST] line 161, (winningNumber == 0) : unproven
[11] [ASSIGN_CONST] line 211, (totalDonated == 0) : unproven
[12] [ASSIGN_CONST] line 223, (totalDonated == 0) : unproven
[13] [DEAD] line 29, false : unproven
[14] [DEAD] line 41, false : unproven
[15] [DEAD] line 47, false : unproven
[16] [DEAD] line 138, false : unproven
[17] [DEAD] line 156, false : unproven
[18] [DEAD] line 163, false : unproven
[19] [DEAD] line 165, false : unproven
[20] [DEAD] line 170, false : unproven
[21] [DEAD] line 187, false : unproven
[22] [DEAD] line 198, false : unproven
[23] [DEAD] line 210, false : unproven

============ Statistics ============
# Iter                    : 51
# Alarm / Query           : 8 / 20
- integer over/underflow  : 2 / 4
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3
- reentrancy-leaking      : 1 / 3
- reentrancy              : 4 / 8
- tx.origin               : 0 / 2

Time Elapsed (Real) : 153.5461061
Time Elapsed (CPU)  : 153.564586
