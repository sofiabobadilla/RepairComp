[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.0003s
[INFO] # path : 18

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000803s
Generating VCs ... took 0.002581s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.037639
[
0 -> true
]
[
]
1/6 ... [IO] line 29, (tot + 1) ... unproven
2/6 ... [IO] line 36, (players[0].number + players[1].number) ... unproven
3/6 ... [ETH_LEAK] line 38, res = players[0].addr.send(1800000000000000000); ... unproven
4/6 ... [ETH_LEAK] line 41, res = players[1].addr.send(1800000000000000000); ... unproven
5/6 ... [ETH_LEAK] line 50, res = msg.sender.send(this.balance); ... unproven
6/6 ... [TX_ORG] line 49, assume((msg.sender != owner)); ... proven
took 0.50297s

Generating VCs ... took 0.000924s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.541649
[
0 -> (Read(@TU, owner__@14) == true)
]
[
]
1/6 ... [IO] line 29, (tot + 1) ... unproven
2/6 ... [IO] line 36, (players[0].number + players[1].number) ... unproven
3/6 ... [ETH_LEAK] line 38, res = players[0].addr.send(1800000000000000000); ... unproven
4/6 ... [ETH_LEAK] line 41, res = players[1].addr.send(1800000000000000000); ... unproven
5/6 ... [ETH_LEAK] line 50, res = msg.sender.send(this.balance); ... proven
6/6 ... [TX_ORG] line 49, assume((msg.sender != owner)); ... proven
took 0.403404s

Generating VCs ... took 0.000909s
Checking validity of VCs ... took 0.172511s

Generating VCs ... took 0.000922s
Checking validity of VCs ... took 0.647466s

Generating VCs ... took 0.000889s
Checking validity of VCs ... took 0.7272s

Generating VCs ... took 0.000851s
Checking validity of VCs ... took 0.130584s

Generating VCs ... took 0.001036s
Checking validity of VCs ... took 0.703139s

Generating VCs ... took 0.000935s
Checking validity of VCs ... took 0.722723s

Generating VCs ... took 0.000846s
Checking validity of VCs ... took 0.175689s

Iter : 10 To explore : 20 Explored : 38 Total elapsed : 4.240228
Generating VCs ... took 0.000832s
Checking validity of VCs ... took 0.194128s

Generating VCs ... took 0.000895s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 11 Total elapsed : 4.578999
[
0 -> ((1000000000000000000 >= tot__@12) /\ (Read(@TU, owner__@14) == true))
]
[
]
1/6 ... [IO] line 29, (tot + 1) ... unproven
2/6 ... [IO] line 36, (players[0].number + players[1].number) ... unproven
3/6 ... [ETH_LEAK] line 38, res = players[0].addr.send(1800000000000000000); ... unproven
4/6 ... [ETH_LEAK] line 41, res = players[1].addr.send(1800000000000000000); ... unproven
5/6 ... [ETH_LEAK] line 50, res = msg.sender.send(this.balance); ... proven
6/6 ... [TX_ORG] line 49, assume((msg.sender != owner)); ... proven
took 0.533094s

Generating VCs ... took 0.000883999999999s
Checking validity of VCs ... took 0.699777s

Generating VCs ... took 0.000976s
Checking validity of VCs ... took 0.619304s

Generating VCs ... took 0.000943s
Checking validity of VCs ... took 0.18202s

Generating VCs ... took 0.000997s
Checking validity of VCs ... took 0.190463s

Generating VCs ... took 0.000905s
Checking validity of VCs ... took 0.140282s

Generating VCs ... took 0.001077s
Checking validity of VCs ... took 0.138477s

Generating VCs ... took 0.000996s
Checking validity of VCs ... took 0.138519s

Generating VCs ... took 0.001016s
Checking validity of VCs ... took 0.1345s

Iter : 20 To explore : 15 Explored : 59 Total elapsed : 7.229375
Generating VCs ... took 0.000893s
Checking validity of VCs ... took 0.135556s

Generating VCs ... took 0.001023s
Checking validity of VCs ... took 0.13723s

Generating VCs ... took 0.000985s
Checking validity of VCs ... took 0.137168s

Generating VCs ... took 0.000971s
Checking validity of VCs ... took 0.140916s

Generating VCs ... took 0.000978s
Checking validity of VCs ... took 0.135673s

Generating VCs ... took 0.001017s
Checking validity of VCs ... took 0.13603s

Generating VCs ... took 0.000868000000001s
Checking validity of VCs ... took 0.135482s

Generating VCs ... took 0.000894000000001s
Checking validity of VCs ... took 0.130067s

Generating VCs ... took 0.000972000000001s
Checking validity of VCs ... took 0.130585s

Generating VCs ... took 0.000942s
Checking validity of VCs ... took 0.134591s

Iter : 30 To explore : 5 Explored : 59 Total elapsed : 8.593693
Generating VCs ... took 0.0009s
Checking validity of VCs ... took 0.14054s

Generating VCs ... took 0.001619s
Checking validity of VCs ... took 0.75944s

Generating VCs ... took 0.000955999999999s
Checking validity of VCs ... took 0.223381s

Generating VCs ... took 0.001024s
Checking validity of VCs ... took 0.680014s

Generating VCs ... took 0.000861s
Checking validity of VCs ... took 0.195192s

Generating VCs ... took 0.000919999999999s
Checking validity of VCs ... took 0.136584s

Generating VCs ... took 0.000918s
Checking validity of VCs ... took 0.134314s

Generating VCs ... took 0.001216s
Checking validity of VCs ... took 0.137724s

Generating VCs ... took 0.0012s
Checking validity of VCs ... took 0.137251s

Generating VCs ... took 0.000898000000001s
Checking validity of VCs ... took 0.134699s

Iter : 40 To explore : 4 Explored : 68 Total elapsed : 11.290332
Generating VCs ... took 0.001021s
Checking validity of VCs ... took 0.132839s

Generating VCs ... took 0.000969000000001s
Checking validity of VCs ... took 0.131588s

Generating VCs ... took 0.000942s
Checking validity of VCs ... took 0.221904s

Generating VCs ... took 0.000964999999999s
Checking validity of VCs ... took 0.222118s

Generating VCs ... took 0.000513999999999s
Checking validity of VCs ... 
1/10 ... [NO_EFFECT] line 28, (@pre2 == players[tot].number) ... unproven
2/10 ... [NO_EFFECT] line 28, (@pre3 == players[tot].addr) ... unproven
3/10 ... [NO_EFFECT] line 29, (@pre1 == tot) ... unproven
4/10 ... [NO_EFFECT] line 36, (@pre4 == n) ... unproven
5/10 ... [ASSIGN_CONST] line 29, (tot == 0) ... unproven
6/10 ... [ASSIGN_CONST] line 36, ((!(players[0].addr != players[1].addr)) || (n == 0)) ... unproven
7/10 ... [DEAD] line 26, false ... unproven
8/10 ... [DEAD] line 31, false ... unproven
9/10 ... [DEAD] line 37, false ... unproven
10/10 ... [DEAD] line 49, false ... unproven
took 0.611066s


===== Vulnerability Report =====
[1] [IO] line 29, (tot + 1) : unproven
[2] [IO] line 36, (players[0].number + players[1].number) : unproven
[3] [ETH_LEAK] line 38, res = players[0].addr.send(1800000000000000000); : unproven
[4] [ETH_LEAK] line 41, res = players[1].addr.send(1800000000000000000); : unproven
[5] [ETH_LEAK] line 50, res = msg.sender.send(this.balance); : proven
[6] [TX_ORG] line 49, assume((msg.sender != owner)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 28, (@pre2 == players[tot].number) : unproven
[2] [NO_EFFECT] line 28, (@pre3 == players[tot].addr) : unproven
[3] [NO_EFFECT] line 29, (@pre1 == tot) : unproven
[4] [NO_EFFECT] line 36, (@pre4 == n) : unproven
[5] [ASSIGN_CONST] line 29, (tot == 0) : unproven
[6] [ASSIGN_CONST] line 36, ((!(players[0].addr != players[1].addr)) || (n == 0)) : unproven
[7] [DEAD] line 26, false : unproven
[8] [DEAD] line 31, false : unproven
[9] [DEAD] line 37, false : unproven
[10] [DEAD] line 49, false : unproven

============ Statistics ============
# Iter                    : 44
# Alarm / Query           : 4 / 6
- integer over/underflow  : 2 / 2
- kill-anyone             : 0 / 0
- ether-leaking           : 2 / 3
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 1

Time Elapsed (Real) : 12.6156032085
Time Elapsed (CPU)  : 12.615378
