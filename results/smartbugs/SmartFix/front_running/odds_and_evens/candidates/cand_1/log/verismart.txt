[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.000354s
[INFO] # path : 19

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000965s
Generating VCs ... took 0.002856s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.040689
[
0 -> true
]
[
]
1/7 ... [IO] line 29, (tot + 1) ... proven
2/7 ... [IO] line 30, (tot + 1) ... proven
3/7 ... [IO] line 37, (players[0].number + players[1].number) ... unproven
4/7 ... [ETH_LEAK] line 39, res = players[0].addr.send(1800000000000000000); ... unproven
5/7 ... [ETH_LEAK] line 42, res = players[1].addr.send(1800000000000000000); ... unproven
6/7 ... [ETH_LEAK] line 51, res = msg.sender.send(this.balance); ... unproven
7/7 ... [TX_ORG] line 50, assume((msg.sender != owner)); ... proven
took 0.45685s

Generating VCs ... took 0.00096s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.498446
[
0 -> (Read(@TU, owner__@14) == true)
]
[
]
1/7 ... [IO] line 29, (tot + 1) ... proven
2/7 ... [IO] line 30, (tot + 1) ... proven
3/7 ... [IO] line 37, (players[0].number + players[1].number) ... unproven
4/7 ... [ETH_LEAK] line 39, res = players[0].addr.send(1800000000000000000); ... unproven
5/7 ... [ETH_LEAK] line 42, res = players[1].addr.send(1800000000000000000); ... unproven
6/7 ... [ETH_LEAK] line 51, res = msg.sender.send(this.balance); ... proven
7/7 ... [TX_ORG] line 50, assume((msg.sender != owner)); ... proven
took 0.415558s

Generating VCs ... took 0.000477s
Checking validity of VCs ... 
1/11 ... [NO_EFFECT] line 28, (@pre2 == players[tot].number) ... unproven
2/11 ... [NO_EFFECT] line 28, (@pre3 == players[tot].addr) ... unproven
3/11 ... [NO_EFFECT] line 30, (@pre1 == tot) ... unproven
4/11 ... [NO_EFFECT] line 37, (@pre4 == n) ... unproven
5/11 ... [ASSIGN_CONST] line 30, (tot == 0) ... unproven
6/11 ... [ASSIGN_CONST] line 37, ((!(players[0].addr != players[1].addr)) || (n == 0)) ... unproven
7/11 ... [DEAD] line 26, false ... unproven
8/11 ... [DEAD] line 29, false ... unproven
9/11 ... [DEAD] line 32, false ... unproven
10/11 ... [DEAD] line 38, false ... unproven
11/11 ... [DEAD] line 50, false ... unproven
took 0.781734s


===== Vulnerability Report =====
[1] [IO] line 29, (tot + 1) : proven
[2] [IO] line 30, (tot + 1) : proven
[3] [IO] line 37, (players[0].number + players[1].number) : unproven
[4] [ETH_LEAK] line 39, res = players[0].addr.send(1800000000000000000); : unproven
[5] [ETH_LEAK] line 42, res = players[1].addr.send(1800000000000000000); : unproven
[6] [ETH_LEAK] line 51, res = msg.sender.send(this.balance); : proven
[7] [TX_ORG] line 50, assume((msg.sender != owner)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 28, (@pre2 == players[tot].number) : unproven
[2] [NO_EFFECT] line 28, (@pre3 == players[tot].addr) : unproven
[3] [NO_EFFECT] line 30, (@pre1 == tot) : unproven
[4] [NO_EFFECT] line 37, (@pre4 == n) : unproven
[5] [ASSIGN_CONST] line 30, (tot == 0) : unproven
[6] [ASSIGN_CONST] line 37, ((!(players[0].addr != players[1].addr)) || (n == 0)) : unproven
[7] [DEAD] line 26, false : unproven
[8] [DEAD] line 29, false : unproven
[9] [DEAD] line 32, false : unproven
[10] [DEAD] line 38, false : unproven
[11] [DEAD] line 50, false : unproven

============ Statistics ============
# Iter                    : 3
# Alarm / Query           : 3 / 7
- integer over/underflow  : 1 / 3
- kill-anyone             : 0 / 0
- ether-leaking           : 2 / 3
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 1

Time Elapsed (Real) : 1.72382903099
Time Elapsed (CPU)  : 1.696017
