[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.000475s
[INFO] # path : 19

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001133s
Generating VCs ... took 0.002387s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.042497
[
0 -> true
]
[
]
1/7 ... [IO] line 29, (tot + 1) ... unproven
2/7 ... [IO] line 36, (players[0].number + players[1].number) ... proven
3/7 ... [IO] line 37, (players[0].number + players[1].number) ... proven
4/7 ... [ETH_LEAK] line 39, res = players[0].addr.send(1800000000000000000); ... unproven
5/7 ... [ETH_LEAK] line 42, res = players[1].addr.send(1800000000000000000); ... unproven
6/7 ... [ETH_LEAK] line 51, res = msg.sender.send(this.balance); ... unproven
7/7 ... [TX_ORG] line 50, assume((msg.sender != owner)); ... proven
took 0.494824s

Generating VCs ... took 0.001174s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.537993
[
0 -> (Read(@TU, owner__@14) == true)
]
[
]
1/7 ... [IO] line 29, (tot + 1) ... unproven
2/7 ... [IO] line 36, (players[0].number + players[1].number) ... proven
3/7 ... [IO] line 37, (players[0].number + players[1].number) ... proven
4/7 ... [ETH_LEAK] line 39, res = players[0].addr.send(1800000000000000000); ... unproven
5/7 ... [ETH_LEAK] line 42, res = players[1].addr.send(1800000000000000000); ... unproven
6/7 ... [ETH_LEAK] line 51, res = msg.sender.send(this.balance); ... proven
7/7 ... [TX_ORG] line 50, assume((msg.sender != owner)); ... proven
took 0.372941s

Generating VCs ... took 0.001087s
Checking validity of VCs ... took 0.171408s

Generating VCs ... took 0.001205s
Checking validity of VCs ... took 1.635541s

Generating VCs ... took 0.00111s
Checking validity of VCs ... took 1.250694s

Generating VCs ... took 0.001065s
Checking validity of VCs ... took 0.136456s

Generating VCs ... took 0.001301s
Checking validity of VCs ... took 1.231909s

Generating VCs ... took 0.001063s
Checking validity of VCs ... took 1.660194s

Generating VCs ... took 0.00105s
Checking validity of VCs ... took 0.182191s

Iter : 10 To explore : 20 Explored : 38 Total elapsed : 7.197209
Generating VCs ... took 0.001143s
Checking validity of VCs ... took 0.189016s

Generating VCs ... took 0.001098s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 11 Total elapsed : 7.533192
[
0 -> ((1000000000000000000 >= tot__@12) /\ (Read(@TU, owner__@14) == true))
]
[
]
1/7 ... [IO] line 29, (tot + 1) ... unproven
2/7 ... [IO] line 36, (players[0].number + players[1].number) ... proven
3/7 ... [IO] line 37, (players[0].number + players[1].number) ... proven
4/7 ... [ETH_LEAK] line 39, res = players[0].addr.send(1800000000000000000); ... unproven
5/7 ... [ETH_LEAK] line 42, res = players[1].addr.send(1800000000000000000); ... unproven
6/7 ... [ETH_LEAK] line 51, res = msg.sender.send(this.balance); ... proven
7/7 ... [TX_ORG] line 50, assume((msg.sender != owner)); ... proven
took 0.310956s

Generating VCs ... took 0.001169s
Checking validity of VCs ... took 1.162823s

Generating VCs ... took 0.001051s
Checking validity of VCs ... took 1.428098s

Generating VCs ... took 0.002263s
Checking validity of VCs ... took 0.209482s

Generating VCs ... took 0.001144s
Checking validity of VCs ... took 0.190927s

Generating VCs ... took 0.001157s
Checking validity of VCs ... took 0.137766s

Generating VCs ... took 0.001152s
Checking validity of VCs ... took 0.142045s

Generating VCs ... took 0.001543s
Checking validity of VCs ... took 0.14127s

Generating VCs ... took 0.001302s
Checking validity of VCs ... took 0.142068s

Iter : 20 To explore : 15 Explored : 59 Total elapsed : 11.277138
Generating VCs ... took 0.001163s
Checking validity of VCs ... took 0.138702s

Generating VCs ... took 0.001576s
Checking validity of VCs ... took 0.141007s

Generating VCs ... took 0.001401s
Checking validity of VCs ... took 0.145587s

Generating VCs ... took 0.001261s
Checking validity of VCs ... took 0.140308s

Generating VCs ... took 0.00185s
Checking validity of VCs ... took 0.145664s

Generating VCs ... took 0.001486s
Checking validity of VCs ... took 0.140946s

Generating VCs ... took 0.001107s
Checking validity of VCs ... took 0.140968s

Generating VCs ... took 0.001268s
Checking validity of VCs ... took 0.140748s

Generating VCs ... took 0.001167s
Checking validity of VCs ... took 0.142445s

Generating VCs ... took 0.001286s
Checking validity of VCs ... took 0.143376s

Iter : 30 To explore : 5 Explored : 59 Total elapsed : 12.71205
Generating VCs ... took 0.001272s
Checking validity of VCs ... took 0.141433s

Generating VCs ... took 0.001052s
Checking validity of VCs ... took 1.145597s

Generating VCs ... took 0.001113s
Checking validity of VCs ... took 0.244224s

Generating VCs ... took 0.001267s
Checking validity of VCs ... took 1.447988s

Generating VCs ... took 0.001157s
Checking validity of VCs ... took 0.198246s

Generating VCs ... took 0.001243s
Checking validity of VCs ... took 0.144494s

Generating VCs ... took 0.001215s
Checking validity of VCs ... took 0.143521s

Generating VCs ... took 0.001263s
Checking validity of VCs ... took 0.144933s

Generating VCs ... took 0.001265s
Checking validity of VCs ... took 0.146703s

Generating VCs ... took 0.001118s
Checking validity of VCs ... took 0.141102s

Iter : 40 To explore : 4 Explored : 68 Total elapsed : 16.629084
Generating VCs ... took 0.0012s
Checking validity of VCs ... took 0.14154s

Generating VCs ... took 0.001284s
Checking validity of VCs ... took 0.146657s

Generating VCs ... took 0.001162s
Checking validity of VCs ... took 0.240044s

Generating VCs ... took 0.00119s
Checking validity of VCs ... took 0.245961s

Generating VCs ... took 0.001011s
Checking validity of VCs ... 
1/11 ... [NO_EFFECT] line 28, (@pre2 == players[tot].number) ... unproven
2/11 ... [NO_EFFECT] line 28, (@pre3 == players[tot].addr) ... unproven
3/11 ... [NO_EFFECT] line 29, (@pre1 == tot) ... unproven
4/11 ... [NO_EFFECT] line 37, (@pre4 == n) ... unproven
5/11 ... [ASSIGN_CONST] line 29, (tot == 0) ... unproven
6/11 ... [ASSIGN_CONST] line 37, ((!(players[0].addr != players[1].addr)) || (n == 0)) ... unproven
7/11 ... [DEAD] line 26, false ... unproven
8/11 ... [DEAD] line 31, false ... unproven
9/11 ... [DEAD] line 36, false ... unproven
10/11 ... [DEAD] line 38, false ... unproven
11/11 ... [DEAD] line 50, false ... unproven
took 1.43662s


===== Vulnerability Report =====
[1] [IO] line 29, (tot + 1) : unproven
[2] [IO] line 36, (players[0].number + players[1].number) : proven
[3] [IO] line 37, (players[0].number + players[1].number) : proven
[4] [ETH_LEAK] line 39, res = players[0].addr.send(1800000000000000000); : unproven
[5] [ETH_LEAK] line 42, res = players[1].addr.send(1800000000000000000); : unproven
[6] [ETH_LEAK] line 51, res = msg.sender.send(this.balance); : proven
[7] [TX_ORG] line 50, assume((msg.sender != owner)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 28, (@pre2 == players[tot].number) : unproven
[2] [NO_EFFECT] line 28, (@pre3 == players[tot].addr) : unproven
[3] [NO_EFFECT] line 29, (@pre1 == tot) : unproven
[4] [NO_EFFECT] line 37, (@pre4 == n) : unproven
[5] [ASSIGN_CONST] line 29, (tot == 0) : unproven
[6] [ASSIGN_CONST] line 37, ((!(players[0].addr != players[1].addr)) || (n == 0)) : unproven
[7] [DEAD] line 26, false : unproven
[8] [DEAD] line 31, false : unproven
[9] [DEAD] line 36, false : unproven
[10] [DEAD] line 38, false : unproven
[11] [DEAD] line 50, false : unproven

============ Statistics ============
# Iter                    : 44
# Alarm / Query           : 3 / 7
- integer over/underflow  : 1 / 3
- kill-anyone             : 0 / 0
- ether-leaking           : 2 / 3
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 1

Time Elapsed (Real) : 18.8511359692
Time Elapsed (CPU)  : 18.846639
