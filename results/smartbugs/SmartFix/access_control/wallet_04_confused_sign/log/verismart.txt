[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.000185s
[INFO] # path : 13

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000302s
Generating VCs ... took 0.000984s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.033512
[
0 -> true
]
[
]
1/6 ... [IO] line 24, (balances[msg.sender] + msg.value) ... proven
2/6 ... [IO] line 25, (balances[msg.sender] + msg.value) ... proven
3/6 ... [IO] line 32, (balances[msg.sender] - amount) ... unproven
4/6 ... [ETH_LEAK] line 31, msg.sender.transfer(amount); ... unproven
5/6 ... [ETH_LEAK] line 39, to.transfer(this.balance); ... unproven
6/6 ... [TX_ORG] line 38, assume((creator == msg.sender)); ... proven
took 0.224746s

Generating VCs ... took 0.000282s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.257939
[
0 -> (Read(@TU, creator__@3) == true)
]
[
]
1/6 ... [IO] line 24, (balances[msg.sender] + msg.value) ... proven
2/6 ... [IO] line 25, (balances[msg.sender] + msg.value) ... proven
3/6 ... [IO] line 32, (balances[msg.sender] - amount) ... unproven
4/6 ... [ETH_LEAK] line 31, msg.sender.transfer(amount); ... unproven
5/6 ... [ETH_LEAK] line 39, to.transfer(this.balance); ... proven
6/6 ... [TX_ORG] line 38, assume((creator == msg.sender)); ... proven
took 0.132777s

Generating VCs ... took 0.000283s
Checking validity of VCs ... took 0.371158s

Generating VCs ... took 0.000282s
Checking validity of VCs ... took 0.579758s

Generating VCs ... took 0.000285s
Checking validity of VCs ... took 0.252748s

Generating VCs ... took 0.000578s
Checking validity of VCs ... took 1.55371s

Generating VCs ... took 0.000283s
Checking validity of VCs ... took 0.723267s

Generating VCs ... took 0.000348s
Checking validity of VCs ... took 1.658187s

Generating VCs ... took 0.000317000000001s
Checking validity of VCs ... took 1.751847s

Iter : 10 To explore : 0 Explored : 12 Total elapsed : 7.286796
Generating VCs ... took 0.000151s
Checking validity of VCs ... 
1/9 ... [NO_EFFECT] line 25, (@pre1 == balances[msg.sender]) ... unproven
2/9 ... [NO_EFFECT] line 32, (@pre2 == balances[msg.sender]) ... unproven
3/9 ... [ASSIGN_CONST] line 25, (balances[msg.sender] == 0) ... unproven
4/9 ... [ASSIGN_CONST] line 32, (balances[msg.sender] == 0) ... unproven
5/9 ... [DEAD] line 24, false ... unproven
6/9 ... [DEAD] line 30, false ... unproven
7/9 ... [DEAD] line 31, false ... unproven
8/9 ... [DEAD] line 38, false ... unproven
9/9 ... [DEAD] line 39, false ... unproven
took 0.770398s


===== Vulnerability Report =====
[1] [IO] line 24, (balances[msg.sender] + msg.value) : proven
[2] [IO] line 25, (balances[msg.sender] + msg.value) : proven
[3] [IO] line 32, (balances[msg.sender] - amount) : unproven
[4] [ETH_LEAK] line 31, msg.sender.transfer(amount); : unproven
[5] [ETH_LEAK] line 39, to.transfer(this.balance); : proven
[6] [TX_ORG] line 38, assume((creator == msg.sender)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 25, (@pre1 == balances[msg.sender]) : unproven
[2] [NO_EFFECT] line 32, (@pre2 == balances[msg.sender]) : unproven
[3] [ASSIGN_CONST] line 25, (balances[msg.sender] == 0) : unproven
[4] [ASSIGN_CONST] line 32, (balances[msg.sender] == 0) : unproven
[5] [DEAD] line 24, false : unproven
[6] [DEAD] line 30, false : unproven
[7] [DEAD] line 31, false : unproven
[8] [DEAD] line 38, false : unproven
[9] [DEAD] line 39, false : unproven

============ Statistics ============
# Iter                    : 10
# Alarm / Query           : 2 / 6
- integer over/underflow  : 1 / 3
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 2
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 1

Time Elapsed (Real) : 8.07844400406
Time Elapsed (CPU)  : 8.057447
