[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 19
[INFO] reachable : 17
[INFO] Generating Paths ... took 0.003312s
[INFO] # path : 152

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.004796s
Generating VCs ... took 0.021675s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.106169
[
0 -> true
112 -> true
]
[
]
1/26 ... [IO] line 47, (collectedFees + msg.value) ... proven
2/26 ... [IO] line 48, (collectedFees + msg.value) ... proven
3/26 ... [IO] line 62, (msg.value * pyramidMultiplier) ... proven
4/26 ... [IO] line 63, (msg.value * pyramidMultiplier) ... unproven
5/26 ... [IO] line 71, (100 - _fee) ... proven
6/26 ... [IO] line 71, (balance + ((msg.value * (100 - _fee)) / 100)) ... unproven
7/26 ... [IO] line 71, (msg.value * (100 - _fee)) ... unproven
8/26 ... [IO] line 72, (collectedFees + ((msg.value * _fee) / 100)) ... proven
9/26 ... [IO] line 72, (msg.value * _fee) ... proven
10/26 ... [IO] line 73, (msg.value * _fee) ... proven
11/26 ... [IO] line 74, (collectedFees + ((msg.value * _fee) / 100)) ... proven
12/26 ... [IO] line 74, (msg.value * _fee) ... proven
13/26 ... [IO] line 81, (balance - participants[payoutOrder].payout) ... proven
14/26 ... [IO] line 82, (payoutOrder + 1) ... proven
15/26 ... [IO] line 95, (_amt * 1000000000000000000) ... proven
16/26 ... [IO] line 96, (_amt * 1000000000000000000) ... proven
17/26 ... [IO] line 102, (collectedFees - _amt) ... proven
18/26 ... [IO] line 108, ((collectedFees / 100) * _pcent) ... proven
19/26 ... [IO] line 109, ((collectedFees / 100) * _pcent) ... proven
20/26 ... [IO] line 112, (collectedFees - feesToCollect) ... proven
21/26 ... [IO] line 162, (participants.length - payoutOrder) ... proven
22/26 ... [ETH_LEAK] line 79, participants[payoutOrder].etherAddress.send(payoutToSend); ... unproven
23/26 ... [ETH_LEAK] line 90, creator.send(collectedFees); ... unproven
24/26 ... [ETH_LEAK] line 101, creator.send(_amt); ... unproven
25/26 ... [ETH_LEAK] line 110, creator.send(feesToCollect); ... unproven
26/26 ... [TX_ORG] line 28, assume((msg.sender == creator)); ... proven
took 4.767344s

Generating VCs ... took 0.023338s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 4.987591
[
0 -> (Read(@TU, creator__@18) == true)
112 -> (Read(@TU, creator__@18) == true)
]
[
]
1/26 ... [IO] line 47, (collectedFees + msg.value) ... proven
2/26 ... [IO] line 48, (collectedFees + msg.value) ... proven
3/26 ... [IO] line 62, (msg.value * pyramidMultiplier) ... proven
4/26 ... [IO] line 63, (msg.value * pyramidMultiplier) ... unproven
5/26 ... [IO] line 71, (100 - _fee) ... proven
6/26 ... [IO] line 71, (balance + ((msg.value * (100 - _fee)) / 100)) ... unproven
7/26 ... [IO] line 71, (msg.value * (100 - _fee)) ... unproven
8/26 ... [IO] line 72, (collectedFees + ((msg.value * _fee) / 100)) ... proven
9/26 ... [IO] line 72, (msg.value * _fee) ... proven
10/26 ... [IO] line 73, (msg.value * _fee) ... proven
11/26 ... [IO] line 74, (collectedFees + ((msg.value * _fee) / 100)) ... proven
12/26 ... [IO] line 74, (msg.value * _fee) ... proven
13/26 ... [IO] line 81, (balance - participants[payoutOrder].payout) ... proven
14/26 ... [IO] line 82, (payoutOrder + 1) ... proven
15/26 ... [IO] line 95, (_amt * 1000000000000000000) ... proven
16/26 ... [IO] line 96, (_amt * 1000000000000000000) ... proven
17/26 ... [IO] line 102, (collectedFees - _amt) ... proven
18/26 ... [IO] line 108, ((collectedFees / 100) * _pcent) ... proven
19/26 ... [IO] line 109, ((collectedFees / 100) * _pcent) ... proven
20/26 ... [IO] line 112, (collectedFees - feesToCollect) ... proven
21/26 ... [IO] line 162, (participants.length - payoutOrder) ... proven
22/26 ... [ETH_LEAK] line 79, participants[payoutOrder].etherAddress.send(payoutToSend); ... unproven
23/26 ... [ETH_LEAK] line 90, creator.send(collectedFees); ... proven
24/26 ... [ETH_LEAK] line 101, creator.send(_amt); ... proven
25/26 ... [ETH_LEAK] line 110, creator.send(feesToCollect); ... proven
26/26 ... [TX_ORG] line 28, assume((msg.sender == creator)); ... proven
took 1.108068s

Generating VCs ... took 0.022968s
Checking validity of VCs ... took 0.667476s

Generating VCs ... took 0.021998s
Checking validity of VCs ... took 0.62891s

Generating VCs ... took 0.020433s
Checking validity of VCs ... took 0.022424s

Generating VCs ... took 0.020586s
Checking validity of VCs ... took 0.521247s

Generating VCs ... took 0.022173s
Checking validity of VCs ... took 0.30761s

Generating VCs ... took 0.022387s
Checking validity of VCs ... took 0.691669s

Generating VCs ... took 0.021585s
Checking validity of VCs ... took 0.756072s

Iter : 10 To explore : 962 Explored : 1148 Total elapsed : 10.034721
Generating VCs ... took 0.023456s
Checking validity of VCs ... took 0.750938s

Generating VCs ... took 0.021893s
Checking validity of VCs ... took 1.959423s

Generating VCs ... took 0.024014s
Checking validity of VCs ... took 0.580153s

Generating VCs ... took 0.021701s
Checking validity of VCs ... took 0.702131s

Generating VCs ... took 0.021918s
Checking validity of VCs ... took 0.689286s

Generating VCs ... took 0.02159s
Checking validity of VCs ... took 0.548763s

Generating VCs ... took 0.022006s
Checking validity of VCs ... took 0.70651s

Generating VCs ... took 0.022978s
Checking validity of VCs ... took 14.12108s

Generating VCs ... took 0.020647s
Checking validity of VCs ... took 1.105837s

Generating VCs ... took 0.024534s
Checking validity of VCs ... took 1.474195s

Iter : 20 To explore : 2459 Explored : 2655 Total elapsed : 33.266666
Generating VCs ... took 0.021007s
Checking validity of VCs ... took 1.294287s

Generating VCs ... took 0.0217s
Checking validity of VCs ... took 0.601335s

Generating VCs ... took 0.0227s
Checking validity of VCs ... took 0.665271s

Generating VCs ... took 0.022666s
Checking validity of VCs ... took 0.538874s

Generating VCs ... took 0.021052s
Checking validity of VCs ... took 0.994623s

Generating VCs ... took 0.021301s
Checking validity of VCs ... took 1.060246s

Generating VCs ... took 0.024248s
Checking validity of VCs ... took 0.976917s

Generating VCs ... took 0.021316s
Checking validity of VCs ... took 1.088825s

Generating VCs ... took 0.022822s
Checking validity of VCs ... took 1.004059s

Generating VCs ... took 0.020829s
Checking validity of VCs ... took 0.987365s

Iter : 30 To explore : 3038 Explored : 3244 Total elapsed : 42.883677
Generating VCs ... took 0.022721s
Checking validity of VCs ... took 0.560967s

Generating VCs ... took 0.020155s
Checking validity of VCs ... took 0.335016s

Generating VCs ... took 0.020659s
Checking validity of VCs ... took 0.593763s

Generating VCs ... took 0.022733s
Checking validity of VCs ... took 1.085303s

Generating VCs ... took 0.022174s
Checking validity of VCs ... took 0.704721s

Generating VCs ... took 0.020653s
Checking validity of VCs ... took 0.682272s

Generating VCs ... took 0.023462s
Checking validity of VCs ... took 0.944108s

Generating VCs ... took 0.020573s
Checking validity of VCs ... took 0.659653s

Generating VCs ... took 0.024002s
Checking validity of VCs ... took 0.646989s

Generating VCs ... took 0.023279s
Checking validity of VCs ... took 0.732493s

Iter : 40 To explore : 4371 Explored : 4587 Total elapsed : 50.382872
Generating VCs ... took 0.020891s
Checking validity of VCs ... took 0.715589s

Generating VCs ... took 0.021094s
Checking validity of VCs ... took 1.179155s

Generating VCs ... took 0.024001s
Checking validity of VCs ... took 1.143585s

Generating VCs ... took 0.02429s
Checking validity of VCs ... took 1.182405s

Generating VCs ... took 0.02196s
Checking validity of VCs ... took 1.21109s

Generating VCs ... took 0.022571s
Checking validity of VCs ... took 1.144017s

Generating VCs ... took 0.022822s
Checking validity of VCs ... took 1.111888s

Generating VCs ... took 0.020569s
Checking validity of VCs ... took 0.361079s

Generating VCs ... took 0.022266s
Checking validity of VCs ... took 1.092104s

Generating VCs ... took 0.022815s
Checking validity of VCs ... took 1.869609s

Iter : 50 To explore : 4902 Explored : 5128 Total elapsed : 61.806654
Generating VCs ... took 0.02068s
Checking validity of VCs ... took 1.327939s

Generating VCs ... took 0.025293s
Checking validity of VCs ... took 1.170749s

Generating VCs ... took 0.02359s
Checking validity of VCs ... took 1.73592s

Generating VCs ... took 0.021571s
Checking validity of VCs ... took 1.480719s

Generating VCs ... took 0.021361s
Checking validity of VCs ... took 1.10864s

Generating VCs ... took 0.021253s
Checking validity of VCs ... took 1.18659s

Generating VCs ... took 0.023158s
Checking validity of VCs ... took 1.133426s

Generating VCs ... took 0.021358s
Checking validity of VCs ... took 1.179702s

Generating VCs ... took 0.025969s
Checking validity of VCs ... took 1.005398s

Generating VCs ... took 0.020996s
Checking validity of VCs ... took 1.766912s

Iter : 60 To explore : 6026 Explored : 6262 Total elapsed : 75.533929
Generating VCs ... took 0.021359s
Checking validity of VCs ... took 1.494552s

Generating VCs ... took 0.02092s
Checking validity of VCs ... took 1.107674s

Generating VCs ... took 0.026549s
Checking validity of VCs ... took 1.177893s

Generating VCs ... took 0.021637s
Checking validity of VCs ... took 0.999178s

Generating VCs ... took 0.027687s
Checking validity of VCs ... took 1.414577s

Generating VCs ... took 0.021165s
Checking validity of VCs ... took 1.494869s

Generating VCs ... took 0.021203s
Checking validity of VCs ... took 1.714823s

Generating VCs ... took 0.02118s
Checking validity of VCs ... took 1.457686s

Generating VCs ... took 0.021591s
Checking validity of VCs ... took 1.740193s

Generating VCs ... took 0.020964s
Checking validity of VCs ... took 1.81645s

Iter : 70 To explore : 7207 Explored : 7453 Total elapsed : 90.649667
Generating VCs ... took 0.024667s
Checking validity of VCs ... took 1.711026s

Generating VCs ... took 0.02178s
Checking validity of VCs ... took 1.968069s

Generating VCs ... took 0.027081s
Checking validity of VCs ... took 1.90991s

Generating VCs ... took 0.02152s
Checking validity of VCs ... took 1.528201s

Generating VCs ... took 0.021542s
Checking validity of VCs ... took 1.540624s

Generating VCs ... took 0.021255s
Checking validity of VCs ... took 2.176072s

Generating VCs ... took 0.022147s
Checking validity of VCs ... took 1.131843s

Generating VCs ... took 0.027157s
Checking validity of VCs ... took 1.218737s

Generating VCs ... took 0.026424s
Checking validity of VCs ... took 1.009031s

Generating VCs ... took 0.021224s
Checking validity of VCs ... took 2.139575s

Iter : 80 To explore : 8306 Explored : 8562 Total elapsed : 107.694485
Generating VCs ... took 0.021017s
Checking validity of VCs ... took 1.3939s

Generating VCs ... took 0.021055s
Checking validity of VCs ... took 1.030477s

Generating VCs ... took 0.020811s
Checking validity of VCs ... took 1.151031s

Generating VCs ... took 0.026195s
Checking validity of VCs ... took 0.983737s

Generating VCs ... took 0.020848s
Checking validity of VCs ... took 2.326152s

Generating VCs ... took 0.021163s
Checking validity of VCs ... took 1.369819s

Generating VCs ... took 0.020952s
Checking validity of VCs ... took 1.071929s

Generating VCs ... took 0.020888s
Checking validity of VCs ... took 1.20109s

Generating VCs ... took 0.025585s
Checking validity of VCs ... took 0.972665s

Generating VCs ... took 0.021378s
Checking validity of VCs ... took 27.018009s

Iter : 90 To explore : 9100 Explored : 9366 Total elapsed : 146.817412
Generating VCs ... took 0.020952s
Checking validity of VCs ... took 1.367496s

Generating VCs ... took 0.022687s
Checking validity of VCs ... took 1.168874s

Generating VCs ... took 0.020906s
Checking validity of VCs ... took 1.216599s

Generating VCs ... took 0.00832900000003s
Checking validity of VCs ... 
1/57 ... [NO_EFFECT] line 48, (@pre3 == collectedFees) ... unproven
2/57 ... [NO_EFFECT] line 52, (@pre2 == _fee) ... unproven
3/57 ... [NO_EFFECT] line 54, (@pre1 == _fee) ... unproven
4/57 ... [NO_EFFECT] line 63, (@pre10 == struct_init(Participant, msg.sender, ((msg.value * pyramidMultiplier) / 100)).etherAddress) ... unproven
5/57 ... [NO_EFFECT] line 63, (@pre9 == struct_init(Participant, msg.sender, ((msg.value * pyramidMultiplier) / 100)).payout) ... unproven
6/57 ... [NO_EFFECT] line 71, (@pre8 == balance) ... unproven
7/57 ... [NO_EFFECT] line 74, (@pre7 == collectedFees) ... unproven
8/57 ... [NO_EFFECT] line 78, (@pre6 == payoutToSend) ... unproven
9/57 ... [NO_EFFECT] line 81, (@pre5 == balance) ... unproven
10/57 ... [NO_EFFECT] line 82, (@pre4 == payoutOrder) ... unproven
11/57 ... [NO_EFFECT] line 96, (@pre12 == _amt) ... unproven
12/57 ... [NO_EFFECT] line 102, (@pre11 == collectedFees) ... unproven
13/57 ... [NO_EFFECT] line 109, (@pre14 == feesToCollect) ... unproven
14/57 ... [NO_EFFECT] line 112, (@pre13 == collectedFees) ... unproven
15/57 ... [NO_EFFECT] line 117, (@pre15 == creator) ... unproven
16/57 ... [NO_EFFECT] line 123, (@pre16 == pyramidMultiplier) ... unproven
17/57 ... [NO_EFFECT] line 129, (@pre17 == feePercent) ... unproven
18/57 ... [NO_EFFECT] line 134, (@pre18 == multiplier) ... unproven
19/57 ... [NO_EFFECT] line 139, (@pre19 == fee) ... unproven
20/57 ... [NO_EFFECT] line 144, (@pre20 == pyramidBalance) ... unproven
21/57 ... [NO_EFFECT] line 149, (@pre21 == balancePayout) ... unproven
22/57 ... [NO_EFFECT] line 153, (@pre22 == fees) ... unproven
23/57 ... [NO_EFFECT] line 157, (@pre23 == count) ... unproven
24/57 ... [NO_EFFECT] line 162, (@pre24 == count) ... unproven
25/57 ... [NO_EFFECT] line 167, (@pre26 == Address) ... unproven
26/57 ... [NO_EFFECT] line 168, (@pre25 == Payout) ... unproven
27/57 ... [ASSIGN_CONST] line 48, (collectedFees == 0) ... unproven
28/57 ... [ASSIGN_CONST] line 71, (balance == 0) ... unproven
29/57 ... [ASSIGN_CONST] line 74, (collectedFees == 0) ... unproven
30/57 ... [ASSIGN_CONST] line 81, (balance == 0) ... unproven
31/57 ... [ASSIGN_CONST] line 82, (payoutOrder == 0) ... unproven
32/57 ... [ASSIGN_CONST] line 102, (collectedFees == 0) ... unproven
33/57 ... [ASSIGN_CONST] line 112, (collectedFees == 0) ... unproven
34/57 ... [ASSIGN_CONST] line 162, (count == 0) ... unproven
35/57 ... [DEAD] line 28, false ... unproven
36/57 ... [DEAD] line 40, false ... unproven
37/57 ... [DEAD] line 46, false ... unproven
38/57 ... [DEAD] line 47, false ... unproven
39/57 ... [DEAD] line 54, false ... unproven
40/57 ... [DEAD] line 56, false ... unproven
41/57 ... [DEAD] line 62, false ... unproven
42/57 ... [DEAD] line 66, false ... unproven
43/57 ... [DEAD] line 67, false ... unproven
44/57 ... [DEAD] line 70, false ... unproven
45/57 ... [DEAD] line 72, false ... unproven
46/57 ... [DEAD] line 73, false ... unproven
47/57 ... [DEAD] line 88, false ... unproven
48/57 ... [DEAD] line 95, false ... unproven
49/57 ... [DEAD] line 97, false ... unproven
50/57 ... [DEAD] line 99, false ... unproven
51/57 ... [DEAD] line 106, false ... unproven
52/57 ... [DEAD] line 108, false ... unproven
53/57 ... [DEAD] line 111, false ... unproven
54/57 ... [DEAD] line 121, false ... unproven
55/57 ... [DEAD] line 127, false ... unproven
56/57 ... [DEAD] line 161, false ... unproven
57/57 ... [DEAD] line 166, false ... unproven
took 2.538073s


===== Vulnerability Report =====
[1] [IO] line 47, (collectedFees + msg.value) : proven
[2] [IO] line 48, (collectedFees + msg.value) : proven
[3] [IO] line 62, (msg.value * pyramidMultiplier) : proven
[4] [IO] line 63, (msg.value * pyramidMultiplier) : unproven
[5] [IO] line 71, (100 - _fee) : proven
[6] [IO] line 71, (balance + ((msg.value * (100 - _fee)) / 100)) : unproven
[7] [IO] line 71, (msg.value * (100 - _fee)) : unproven
[8] [IO] line 72, (collectedFees + ((msg.value * _fee) / 100)) : proven
[9] [IO] line 72, (msg.value * _fee) : proven
[10] [IO] line 73, (msg.value * _fee) : proven
[11] [IO] line 74, (collectedFees + ((msg.value * _fee) / 100)) : proven
[12] [IO] line 74, (msg.value * _fee) : proven
[13] [IO] line 81, (balance - participants[payoutOrder].payout) : proven
[14] [IO] line 82, (payoutOrder + 1) : proven
[15] [IO] line 95, (_amt * 1000000000000000000) : proven
[16] [IO] line 96, (_amt * 1000000000000000000) : proven
[17] [IO] line 102, (collectedFees - _amt) : proven
[18] [IO] line 108, ((collectedFees / 100) * _pcent) : proven
[19] [IO] line 109, ((collectedFees / 100) * _pcent) : proven
[20] [IO] line 112, (collectedFees - feesToCollect) : proven
[21] [IO] line 162, (participants.length - payoutOrder) : proven
[22] [ETH_LEAK] line 79, participants[payoutOrder].etherAddress.send(payoutToSend); : unproven
[23] [ETH_LEAK] line 90, creator.send(collectedFees); : proven
[24] [ETH_LEAK] line 101, creator.send(_amt); : proven
[25] [ETH_LEAK] line 110, creator.send(feesToCollect); : proven
[26] [TX_ORG] line 28, assume((msg.sender == creator)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 48, (@pre3 == collectedFees) : unproven
[2] [NO_EFFECT] line 52, (@pre2 == _fee) : unproven
[3] [NO_EFFECT] line 54, (@pre1 == _fee) : unproven
[4] [NO_EFFECT] line 63, (@pre10 == struct_init(Participant, msg.sender, ((msg.value * pyramidMultiplier) / 100)).etherAddress) : unproven
[5] [NO_EFFECT] line 63, (@pre9 == struct_init(Participant, msg.sender, ((msg.value * pyramidMultiplier) / 100)).payout) : unproven
[6] [NO_EFFECT] line 71, (@pre8 == balance) : unproven
[7] [NO_EFFECT] line 74, (@pre7 == collectedFees) : unproven
[8] [NO_EFFECT] line 78, (@pre6 == payoutToSend) : unproven
[9] [NO_EFFECT] line 81, (@pre5 == balance) : unproven
[10] [NO_EFFECT] line 82, (@pre4 == payoutOrder) : unproven
[11] [NO_EFFECT] line 96, (@pre12 == _amt) : unproven
[12] [NO_EFFECT] line 102, (@pre11 == collectedFees) : unproven
[13] [NO_EFFECT] line 109, (@pre14 == feesToCollect) : unproven
[14] [NO_EFFECT] line 112, (@pre13 == collectedFees) : unproven
[15] [NO_EFFECT] line 117, (@pre15 == creator) : unproven
[16] [NO_EFFECT] line 123, (@pre16 == pyramidMultiplier) : unproven
[17] [NO_EFFECT] line 129, (@pre17 == feePercent) : unproven
[18] [NO_EFFECT] line 134, (@pre18 == multiplier) : unproven
[19] [NO_EFFECT] line 139, (@pre19 == fee) : unproven
[20] [NO_EFFECT] line 144, (@pre20 == pyramidBalance) : unproven
[21] [NO_EFFECT] line 149, (@pre21 == balancePayout) : unproven
[22] [NO_EFFECT] line 153, (@pre22 == fees) : unproven
[23] [NO_EFFECT] line 157, (@pre23 == count) : unproven
[24] [NO_EFFECT] line 162, (@pre24 == count) : unproven
[25] [NO_EFFECT] line 167, (@pre26 == Address) : unproven
[26] [NO_EFFECT] line 168, (@pre25 == Payout) : unproven
[27] [ASSIGN_CONST] line 48, (collectedFees == 0) : unproven
[28] [ASSIGN_CONST] line 71, (balance == 0) : unproven
[29] [ASSIGN_CONST] line 74, (collectedFees == 0) : unproven
[30] [ASSIGN_CONST] line 81, (balance == 0) : unproven
[31] [ASSIGN_CONST] line 82, (payoutOrder == 0) : unproven
[32] [ASSIGN_CONST] line 102, (collectedFees == 0) : unproven
[33] [ASSIGN_CONST] line 112, (collectedFees == 0) : unproven
[34] [ASSIGN_CONST] line 162, (count == 0) : unproven
[35] [DEAD] line 28, false : unproven
[36] [DEAD] line 40, false : unproven
[37] [DEAD] line 46, false : unproven
[38] [DEAD] line 47, false : unproven
[39] [DEAD] line 54, false : unproven
[40] [DEAD] line 56, false : unproven
[41] [DEAD] line 62, false : unproven
[42] [DEAD] line 66, false : unproven
[43] [DEAD] line 67, false : unproven
[44] [DEAD] line 70, false : unproven
[45] [DEAD] line 72, false : unproven
[46] [DEAD] line 73, false : unproven
[47] [DEAD] line 88, false : unproven
[48] [DEAD] line 95, false : unproven
[49] [DEAD] line 97, false : unproven
[50] [DEAD] line 99, false : unproven
[51] [DEAD] line 106, false : unproven
[52] [DEAD] line 108, false : unproven
[53] [DEAD] line 111, false : unproven
[54] [DEAD] line 121, false : unproven
[55] [DEAD] line 127, false : unproven
[56] [DEAD] line 161, false : unproven
[57] [DEAD] line 166, false : unproven

============ Statistics ============
# Iter                    : 92
# Alarm / Query           : 4 / 26
- integer over/underflow  : 3 / 21
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 4
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 1

Time Elapsed (Real) : 153.163678169
Time Elapsed (CPU)  : 153.315843
