[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 5
[INFO] reachable : 3
[INFO] Generating Paths ... took 2.3e-05s
[INFO] # path : 4

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 2.2e-05s
Generating VCs ... took 4.8e-05s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.019186
[
0 -> true
]
[
]
1/3 ... [KA] line 18, selfdestruct(msg.sender); ... unproven
2/3 ... [ETH_LEAK] line 18, selfdestruct(msg.sender); ... unproven
3/3 ... [TX_ORG] line 17, assume((smartfix_owner == msg.sender)); ... proven
took 0.030638s

Generating VCs ... took 3.6e-05s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.049914
[
0 -> (Read(@TU, smartfix_owner__@4) == true)
]
[
]
1/3 ... [KA] line 18, selfdestruct(msg.sender); ... proven
2/3 ... [ETH_LEAK] line 18, selfdestruct(msg.sender); ... proven
3/3 ... [TX_ORG] line 17, assume((smartfix_owner == msg.sender)); ... proven
took 0.007481s

Generating VCs ... took 2e-05s
Checking validity of VCs ... 
1/1 ... [DEAD] line 17, false ... unproven
took 0.007997s


===== Vulnerability Report =====
[1] [KA] line 18, selfdestruct(msg.sender); : proven
[2] [ETH_LEAK] line 18, selfdestruct(msg.sender); : proven
[3] [TX_ORG] line 17, assume((smartfix_owner == msg.sender)); : proven

===== Regression Report =====
[1] [DEAD] line 17, false : unproven

============ Statistics ============
# Iter                    : 2
# Alarm / Query           : 0 / 3
- integer over/underflow  : 0 / 0
- kill-anyone             : 0 / 1
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 1

Time Elapsed (Real) : 0.0713438987732
Time Elapsed (CPU)  : 0.065402
