{
  "src": [ "parity_wallet_bug_2.sol" ],
  "knowledge": [
    {
      "abs_patch": [ "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})" ],
      "score": 0.03571428571428571
    },
    {
      "abs_patch": [ "Abs_Insert ({}, {uint256[256]}, 0, 0, 0, 0 @ {})" ],
      "score": 0.03571428571428571
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256}, {uint256}, 0, 0, 0, 0 @ {uint256})"
      ],
      "score": 0.03571428571428571
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})"
      ],
      "score": 0.03571428571428571
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})"
      ],
      "score": 0.10714285714285714
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256[256]}, 0, 0, 0, 0 @ {})"
      ],
      "score": 0.14285714285714285
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256[256]}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0 @ {uint256})"
      ],
      "score": 0.17857142857142858
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256[256]}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256}, {uint256}, 0, 0, 0, 0 @ {uint256})"
      ],
      "score": 0.21428571428571427
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256[256]}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256}, {uint256}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})"
      ],
      "score": 0.25
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256[256]}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256}, {uint256}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})"
      ],
      "score": 0.2857142857142857
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256[256]}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256}, {uint256}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})"
      ],
      "score": 0.32142857142857145
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256[256]}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256}, {uint256}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})",
        "Abs_AtomLst [\nAbs_Replace ({}, {mapping(bytes32 => struct WalletLibrary.Transaction)}, 0, 1, 0, 0 @ {}, {mapping(bytes32 => struct WalletLibrary.Transaction)}, 0, 1, 0, 0 @ {} @ {mapping(bytes32 => struct WalletLibrary.Transaction)} @ {} @ {})\nAbs_Insert ({}, {mapping(bytes32 => struct WalletLibrary.Transaction)}, 0, 1, 0, 0 @ {mapping(bytes32 => struct WalletLibrary.Transaction)})\nAbs_Insert ({}, {mapping(bytes32 => struct WalletLibrary.Transaction)}, 0, 1, 0, 0 @ {})\n]"
      ],
      "score": 0.2857142857142857
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256[256]}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256}, {uint256}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})",
        "Abs_AtomLst [\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1)\nAbs_NR ({}, {}, 0, 0, 0, 0)\nAbs_NR ({mapping(uint256 => uint256),uint256[256]}, {uint256[256]}, 0, 0, 0, 0)\nAbs_NR ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0)\nAbs_NR ({mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {uint256}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {uint256}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 0, 0, 1, 0)\nAbs_NR ({}, {mapping(bytes32 => struct WalletLibrary.Transaction)}, 0, 1, 0, 0)\n]"
      ],
      "score": 0.27285714285714285
    },
    {
      "abs_patch": [
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})",
        "Abs_Insert ({}, {uint256[256]}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({uint256}, {uint256}, 0, 0, 0, 0 @ {uint256})",
        "Abs_Insert ({}, {}, 0, 0, 0, 0 @ {})",
        "Abs_Insert ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1 @ {})"
      ],
      "score": 0.2857142857142857
    },
    {
      "abs_patch": [
        "Abs_Insert ({mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0 @ {uint256})"
      ],
      "score": 0.03571428571428571
    },
    {
      "abs_patch": [
        "Abs_Replace ({uint256}, {uint256}, 0, 0, 0, 0 @ {uint256}, {uint256}, 0, 0, 0, 0 @ {+,>=} @ {uint256} @ {+,<} @ {uint256})"
      ],
      "score": -2.0
    },
    {
      "abs_patch": [
        "Abs_Replace ({uint256}, {uint256}, 0, 0, 0, 0 @ {uint256}, {uint256}, 0, 0, 0, 0 @ {+,<=} @ {uint256} @ {+,>=} @ {uint256})"
      ],
      "score": -0.03571428571428571
    },
    {
      "abs_patch": [
        "Abs_AtomLst [\nAbs_Replace ({}, {mapping(bytes32 => struct WalletLibrary.Transaction)}, 0, 1, 0, 0 @ {}, {mapping(bytes32 => struct WalletLibrary.Transaction)}, 0, 1, 0, 0 @ {} @ {mapping(bytes32 => struct WalletLibrary.Transaction)} @ {} @ {})\nAbs_Insert ({}, {mapping(bytes32 => struct WalletLibrary.Transaction)}, 0, 1, 0, 0 @ {mapping(bytes32 => struct WalletLibrary.Transaction)})\nAbs_Insert ({}, {mapping(bytes32 => struct WalletLibrary.Transaction)}, 0, 1, 0, 0 @ {})\n]"
      ],
      "score": -0.03571428571428571
    },
    {
      "abs_patch": [
        "Abs_AtomLst [\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1)\nAbs_NR ({}, {}, 0, 0, 0, 0)\nAbs_NR ({mapping(uint256 => uint256),uint256[256]}, {uint256[256]}, 0, 0, 0, 0)\nAbs_NR ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0)\nAbs_NR ({mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {uint256}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {uint256}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 0, 0, 1, 0)\nAbs_NR ({}, {mapping(bytes32 => struct WalletLibrary.Transaction)}, 0, 1, 0, 0)\n]"
      ],
      "score": -0.048571428571428564
    },
    {
      "abs_patch": [
        "Abs_AtomLst [\nAbs_NR ({}, {}, 1, 0, 0, 0)\nAbs_NR ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 1)\nAbs_NR ({}, {}, 0, 0, 0, 0)\nAbs_NR ({mapping(uint256 => uint256),uint256[256]}, {uint256[256]}, 0, 0, 0, 0)\nAbs_NR ({uint256,mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0)\nAbs_NR ({mapping(uint256 => uint256),uint256[256]}, {uint256,uint256[256]}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {uint256}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {uint256}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {}, 0, 0, 0, 0)\nAbs_NR ({uint256}, {uint256}, 0, 0, 0, 0)\nAbs_NR ({}, {}, 0, 0, 1, 0)\nAbs_NR ({uint256}, {uint256,mapping(bytes32 => struct WalletLibrary.Transaction)}, 0, 1, 0, 0)\nAbs_NR ({}, {mapping(bytes32 => struct WalletLibrary.Transaction)}, 0, 1, 0, 0)\n]"
      ],
      "score": -2.42
    }
  ]
}