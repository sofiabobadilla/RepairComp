[
InsertLine (119, assume(((2 + i) >= 2));),
InsertLine (187, assume(((ownerIndex + 1) >= ownerIndex));),
InsertLine (169, assume((m_numOwners >= 1));),
InsertLine (359, assume(((m_spentToday + _value) >= m_spentToday));),
InsertLine (134, assume((pending.ownersDone >= ownerIndexBit));),
InsertLine (114, assume(((_owners.length + 1) >= _owners.length));),
AtomLst [
Add @nonReentrant to (WalletLibrary, @fallback, []) (line 105)
Add @nonReentrant to (WalletLibrary, initMultiowned, [address[], uint256]) (line 113)
Add @nonReentrant to (WalletLibrary, revoke, [bytes32]) (line 126)
Add @nonReentrant to (WalletLibrary, changeOwner, [address, address]) (line 140)
Add @nonReentrant to (WalletLibrary, addOwner, [address]) (line 152)
Add @nonReentrant to (WalletLibrary, removeOwner, [address]) (line 166)
Add @nonReentrant to (WalletLibrary, changeRequirement, [uint256]) (line 178)
Add @nonReentrant to (WalletLibrary, initDaylimit, [uint256]) (line 207)
Add @nonReentrant to (WalletLibrary, setDailyLimit, [uint256]) (line 212)
Add @nonReentrant to (WalletLibrary, resetSpentToday, []) (line 216)
Add @nonReentrant to (WalletLibrary, kill, [address]) (line 233)
Add @nonReentrant to (WalletLibrary, confirm, [bytes32]) (line 279)
]
]