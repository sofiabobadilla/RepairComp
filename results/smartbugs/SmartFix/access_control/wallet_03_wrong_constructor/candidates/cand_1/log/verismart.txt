[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 5
[INFO] reachable : 5
[INFO] Generating Paths ... took 0.000204s
[INFO] # path : 15

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000375s
Generating VCs ... took 0.001034s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.034984
[
0 -> true
]
[
]
1/7 ... [IO] line 25, (balances[msg.sender] + msg.value) ... proven
2/7 ... [IO] line 26, (balances[msg.sender] + msg.value) ... proven
3/7 ... [IO] line 32, (balances[msg.sender] - amount) ... proven
4/7 ... [ETH_LEAK] line 31, msg.sender.transfer(amount); ... unproven
5/7 ... [ETH_LEAK] line 39, to.transfer(this.balance); ... unproven
6/7 ... [TX_ORG] line 20, assume((creator == msg.sender)); ... proven
7/7 ... [TX_ORG] line 38, assume((creator == msg.sender)); ... proven
took 0.105886s

Generating VCs ... took 0.000326s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.140535
[
0 -> (Read(@TU, creator__@3) == true)
]
[
]
1/7 ... [IO] line 25, (balances[msg.sender] + msg.value) ... proven
2/7 ... [IO] line 26, (balances[msg.sender] + msg.value) ... proven
3/7 ... [IO] line 32, (balances[msg.sender] - amount) ... proven
4/7 ... [ETH_LEAK] line 31, msg.sender.transfer(amount); ... unproven
5/7 ... [ETH_LEAK] line 39, to.transfer(this.balance); ... proven
6/7 ... [TX_ORG] line 20, assume((creator == msg.sender)); ... proven
7/7 ... [TX_ORG] line 38, assume((creator == msg.sender)); ... proven
took 0.075763s

Generating VCs ... took 0.000301s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 0.278521
[
0 -> ((Read(@TU, creator__@3) == true) /\ @Invest_sum >= Î£_u balances__@7)
]
[
]
1/7 ... [IO] line 25, (balances[msg.sender] + msg.value) ... proven
2/7 ... [IO] line 26, (balances[msg.sender] + msg.value) ... proven
3/7 ... [IO] line 32, (balances[msg.sender] - amount) ... proven
4/7 ... [ETH_LEAK] line 31, msg.sender.transfer(amount); ... proven
5/7 ... [ETH_LEAK] line 39, to.transfer(this.balance); ... proven
6/7 ... [TX_ORG] line 20, assume((creator == msg.sender)); ... proven
7/7 ... [TX_ORG] line 38, assume((creator == msg.sender)); ... proven
took 0.305269s

Generating VCs ... took 0.000187s
Checking validity of VCs ... 
1/11 ... [NO_EFFECT] line 21, (@pre1 == creator) ... proven
2/11 ... [NO_EFFECT] line 26, (@pre2 == balances[msg.sender]) ... unproven
3/11 ... [NO_EFFECT] line 32, (@pre3 == balances[msg.sender]) ... unproven
4/11 ... [ASSIGN_CONST] line 26, (balances[msg.sender] == 0) ... unproven
5/11 ... [ASSIGN_CONST] line 32, (balances[msg.sender] == 0) ... unproven
6/11 ... [DEAD] line 20, false ... unproven
7/11 ... [DEAD] line 25, false ... unproven
8/11 ... [DEAD] line 30, false ... unproven
9/11 ... [DEAD] line 31, false ... unproven
10/11 ... [DEAD] line 38, false ... unproven
11/11 ... [DEAD] line 39, false ... unproven
took 1.076654s


===== Vulnerability Report =====
[1] [IO] line 25, (balances[msg.sender] + msg.value) : proven
[2] [IO] line 26, (balances[msg.sender] + msg.value) : proven
[3] [IO] line 32, (balances[msg.sender] - amount) : proven
[4] [ETH_LEAK] line 31, msg.sender.transfer(amount); : proven
[5] [ETH_LEAK] line 39, to.transfer(this.balance); : proven
[6] [TX_ORG] line 20, assume((creator == msg.sender)); : proven
[7] [TX_ORG] line 38, assume((creator == msg.sender)); : proven

===== Regression Report =====
[1] [NO_EFFECT] line 21, (@pre1 == creator) : proven
[2] [NO_EFFECT] line 26, (@pre2 == balances[msg.sender]) : unproven
[3] [NO_EFFECT] line 32, (@pre3 == balances[msg.sender]) : unproven
[4] [ASSIGN_CONST] line 26, (balances[msg.sender] == 0) : unproven
[5] [ASSIGN_CONST] line 32, (balances[msg.sender] == 0) : unproven
[6] [DEAD] line 20, false : unproven
[7] [DEAD] line 25, false : unproven
[8] [DEAD] line 30, false : unproven
[9] [DEAD] line 31, false : unproven
[10] [DEAD] line 38, false : unproven
[11] [DEAD] line 39, false : unproven

============ Statistics ============
# Iter                    : 3
# Alarm / Query           : 0 / 7
- integer over/underflow  : 0 / 3
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 2
- reentrancy-leaking      : 0 / 0
- reentrancy              : 0 / 0
- tx.origin               : 0 / 2

Time Elapsed (Real) : 1.6218290329
Time Elapsed (CPU)  : 1.598567
