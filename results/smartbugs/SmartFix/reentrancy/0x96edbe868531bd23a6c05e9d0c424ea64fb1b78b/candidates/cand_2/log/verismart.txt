[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 10
[INFO] reachable : 9
[INFO] Generating Paths ... took 0.000612s
[INFO] # path : 35

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.00186s
Generating VCs ... took 0.009437s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.061849
[
-1 -> true
0 -> true
]
[
]
1/12 ... [IO] line 50, (acc.balance + msg.value) ... unproven
2/12 ... [IO] line 51, (now + _lockTime) ... proven
3/12 ... [IO] line 52, (now + _lockTime) ... proven
4/12 ... [IO] line 66, (acc.balance - _am) ... unproven
5/12 ... [ETH_LEAK] line 64, msg.sender.call.value(_am)() ... unproven
6/12 ... [RE_EL] line 64, msg.sender.call.value(_am)() ... unproven
7/12 ... [RE] line 25, (PENNY_BY_PENNY, SetMinSum, [uint256]) ... unproven
8/12 ... [RE] line 32, (PENNY_BY_PENNY, SetLogFile, [address]) ... unproven
9/12 ... [RE] line 39, (PENNY_BY_PENNY, Initialized, []) ... unproven
10/12 ... [RE] line 45, (PENNY_BY_PENNY, Put, [uint256]) ... unproven
11/12 ... [RE] line 56, (PENNY_BY_PENNY, Collect, [uint256]) ... unproven
12/12 ... [RE] line 72, (PENNY_BY_PENNY, @fallback, []) ... unproven
took 0.80349s

Generating VCs ... took 0.006842s
Checking validity of VCs ... took 0.230006s

Generating VCs ... took 0.007252s
Checking validity of VCs ... took 7.833037s

Generating VCs ... took 0.007198s
Checking validity of VCs ... took 4.968073s

Generating VCs ... took 0.006706s
Checking validity of VCs ... took 5.779039s

Generating VCs ... took 0.006757s
Checking validity of VCs ... took 5.053973s

Generating VCs ... took 0.006731s
Checking validity of VCs ... took 5.123746s

Generating VCs ... took 0.007412s
Checking validity of VCs ... took 6.689403s

Generating VCs ... took 0.00664s
Checking validity of VCs ... took 0.223989s

Iter : 10 To explore : 32 Explored : 41 Total elapsed : 36.830145
Generating VCs ... took 0.006748s
Checking validity of VCs ... took 10.41927s

Generating VCs ... took 0.006611s
Checking validity of VCs ... took 11.31372s

Generating VCs ... took 0.006764s
Checking validity of VCs ... took 5.742092s

Generating VCs ... took 0.00666199999999s
Checking validity of VCs ... took 9.172966s

Generating VCs ... took 0.006558s
Checking validity of VCs ... took 0.236336s

Generating VCs ... took 0.00666200000001s
Checking validity of VCs ... took 0.418544s

Generating VCs ... took 0.006722s
Checking validity of VCs ... took 11.746904s

Generating VCs ... took 0.00662199999999s
Checking validity of VCs ... took 4.335763s

Generating VCs ... took 0.006755s
Checking validity of VCs ... took 17.070036s

Generating VCs ... took 0.006736s
Checking validity of VCs ... took 4.58259s

Iter : 20 To explore : 45 Explored : 64 Total elapsed : 111.953808
Generating VCs ... took 0.006649s
Checking validity of VCs ... took 19.406915s

Generating VCs ... took 0.00670100000002s
Checking validity of VCs ... took 11.434885s

Generating VCs ... took 0.00743299999999s
Checking validity of VCs ... took 3.953058s

Generating VCs ... took 0.006956s
Checking validity of VCs ... took 4.820695s

Generating VCs ... took 0.002985s
Checking validity of VCs ... 
1/14 ... [NO_EFFECT] line 29, (@pre1 == MinSum) ... unproven
2/14 ... [NO_EFFECT] line 50, (@pre3 == acc.balance) ... unproven
3/14 ... [NO_EFFECT] line 52, (@pre2 == acc.unlockTime) ... unproven
4/14 ... [NO_EFFECT] line 66, (@pre4 == acc.balance) ... unproven
5/14 ... [NO_EFFECT] line 99, (@pre7 == LastMsg.Sender) ... unproven
6/14 ... [NO_EFFECT] line 100, (@pre6 == LastMsg.Time) ... unproven
7/14 ... [NO_EFFECT] line 101, (@pre5 == LastMsg.Val) ... unproven
8/14 ... [ASSIGN_CONST] line 50, (acc.balance == 0) ... unproven
9/14 ... [ASSIGN_CONST] line 52, (acc.unlockTime == 0) ... unproven
10/14 ... [ASSIGN_CONST] line 66, (acc.balance == 0) ... unproven
11/14 ... [DEAD] line 51, false ... unproven
12/14 ... [DEAD] line 52, false ... unproven
13/14 ... [DEAD] line 61, false ... unproven
14/14 ... [DEAD] line 76, false ... unproven
took 0.739789s


===== Vulnerability Report =====
[1] [IO] line 50, (acc.balance + msg.value) : unproven
[2] [IO] line 51, (now + _lockTime) : proven
[3] [IO] line 52, (now + _lockTime) : proven
[4] [IO] line 66, (acc.balance - _am) : unproven
[5] [ETH_LEAK] line 64, msg.sender.call.value(_am)() : unproven
[6] [RE_EL] line 64, msg.sender.call.value(_am)() : unproven
[7] [RE] line 25, (PENNY_BY_PENNY, SetMinSum, [uint256]) : unproven
[8] [RE] line 32, (PENNY_BY_PENNY, SetLogFile, [address]) : unproven
[9] [RE] line 39, (PENNY_BY_PENNY, Initialized, []) : unproven
[10] [RE] line 45, (PENNY_BY_PENNY, Put, [uint256]) : unproven
[11] [RE] line 56, (PENNY_BY_PENNY, Collect, [uint256]) : unproven
[12] [RE] line 72, (PENNY_BY_PENNY, @fallback, []) : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 29, (@pre1 == MinSum) : unproven
[2] [NO_EFFECT] line 50, (@pre3 == acc.balance) : unproven
[3] [NO_EFFECT] line 52, (@pre2 == acc.unlockTime) : unproven
[4] [NO_EFFECT] line 66, (@pre4 == acc.balance) : unproven
[5] [NO_EFFECT] line 99, (@pre7 == LastMsg.Sender) : unproven
[6] [NO_EFFECT] line 100, (@pre6 == LastMsg.Time) : unproven
[7] [NO_EFFECT] line 101, (@pre5 == LastMsg.Val) : unproven
[8] [ASSIGN_CONST] line 50, (acc.balance == 0) : unproven
[9] [ASSIGN_CONST] line 52, (acc.unlockTime == 0) : unproven
[10] [ASSIGN_CONST] line 66, (acc.balance == 0) : unproven
[11] [DEAD] line 51, false : unproven
[12] [DEAD] line 52, false : unproven
[13] [DEAD] line 61, false : unproven
[14] [DEAD] line 76, false : unproven

============ Statistics ============
# Iter                    : 23
# Alarm / Query           : 10 / 12
- integer over/underflow  : 2 / 4
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 1
- reentrancy-leaking      : 1 / 1
- reentrancy              : 6 / 6
- tx.origin               : 0 / 0

Time Elapsed (Real) : 152.36611104
Time Elapsed (CPU)  : 152.349329
