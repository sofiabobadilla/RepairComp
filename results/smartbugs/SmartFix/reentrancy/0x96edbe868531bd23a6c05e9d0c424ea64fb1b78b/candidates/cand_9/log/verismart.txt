[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 10
[INFO] reachable : 9
[INFO] Generating Paths ... took 0.000316s
[INFO] # path : 35

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001441s
Generating VCs ... took 0.009393s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.061873
[
-1 -> true
0 -> true
]
[
]
1/12 ... [IO] line 50, (acc.balance + msg.value) ... proven
2/12 ... [IO] line 51, (acc.balance + msg.value) ... proven
3/12 ... [IO] line 52, (now + _lockTime) ... unproven
4/12 ... [IO] line 64, (acc.balance - _am) ... proven
5/12 ... [ETH_LEAK] line 65, msg.sender.call.value(_am)() ... unproven
6/12 ... [RE_EL] line 65, msg.sender.call.value(_am)() ... unproven
7/12 ... [RE] line 25, (PENNY_BY_PENNY, SetMinSum, [uint256]) ... unproven
8/12 ... [RE] line 32, (PENNY_BY_PENNY, SetLogFile, [address]) ... unproven
9/12 ... [RE] line 39, (PENNY_BY_PENNY, Initialized, []) ... unproven
10/12 ... [RE] line 45, (PENNY_BY_PENNY, Put, [uint256]) ... unproven
11/12 ... [RE] line 56, (PENNY_BY_PENNY, Collect, [uint256]) ... unproven
12/12 ... [RE] line 73, (PENNY_BY_PENNY, @fallback, []) ... unproven
took 1.122637s

Generating VCs ... took 0.006972s
Checking validity of VCs ... took 1.352898s

Generating VCs ... took 0.007051s
Checking validity of VCs ... took 3.79042s

Generating VCs ... took 0.006824s
Checking validity of VCs ... took 10.680445s

Generating VCs ... took 0.006846s
Checking validity of VCs ... took 9.308315s

Generating VCs ... took 0.006838s
Checking validity of VCs ... took 4.384573s

Generating VCs ... took 0.007558s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 7 Total elapsed : 30.767986
[
-1 -> @Invest_sum >= Σ_u,i balance__@5[Acc__@10[i]]
0 -> @Invest_sum >= Σ_u,i balance__@5[Acc__@10[i]]
]
[
]
1/12 ... [IO] line 50, (acc.balance + msg.value) ... proven
2/12 ... [IO] line 51, (acc.balance + msg.value) ... proven
3/12 ... [IO] line 52, (now + _lockTime) ... unproven
4/12 ... [IO] line 64, (acc.balance - _am) ... proven
5/12 ... [ETH_LEAK] line 65, msg.sender.call.value(_am)() ... proven
6/12 ... [RE_EL] line 65, msg.sender.call.value(_am)() ... proven
7/12 ... [RE] line 25, (PENNY_BY_PENNY, SetMinSum, [uint256]) ... unproven
8/12 ... [RE] line 32, (PENNY_BY_PENNY, SetLogFile, [address]) ... unproven
9/12 ... [RE] line 39, (PENNY_BY_PENNY, Initialized, []) ... unproven
10/12 ... [RE] line 45, (PENNY_BY_PENNY, Put, [uint256]) ... unproven
11/12 ... [RE] line 56, (PENNY_BY_PENNY, Collect, [uint256]) ... unproven
12/12 ... [RE] line 73, (PENNY_BY_PENNY, @fallback, []) ... unproven
took 18.799631s

Generating VCs ... took 0.006967s
Checking validity of VCs ... took 4.616461s

Generating VCs ... took 0.007701s
Checking validity of VCs ... took 22.438732s

Iter : 10 To explore : 14 Explored : 45 Total elapsed : 76.623644
Generating VCs ... took 0.007094s
Checking validity of VCs ... took 17.794943s

Generating VCs ... took 0.007796s
Checking validity of VCs ... took 5.691354s

Generating VCs ... took 0.00705000000001s
Checking validity of VCs ... took 19.529625s

Generating VCs ... took 0.00706799999999s
Checking validity of VCs ... took 19.983699s

Generating VCs ... took 0.00692599999999s
Checking validity of VCs ... took 4.723838s

Generating VCs ... took 0.00776299999998s
Checking validity of VCs ... took 4.255398s

Generating VCs ... took 0.006933s
Checking validity of VCs ... took 21.769859s

Generating VCs ... took 0.00349799999998s
Checking validity of VCs ... 
1/14 ... [NO_EFFECT] line 29, (@pre1 == MinSum) ... unproven
2/14 ... [NO_EFFECT] line 51, (@pre3 == acc.balance) ... unproven
3/14 ... [NO_EFFECT] line 52, (@pre2 == acc.unlockTime) ... unproven
4/14 ... [NO_EFFECT] line 64, (@pre4 == acc.balance) ... unproven
5/14 ... [NO_EFFECT] line 100, (@pre7 == LastMsg.Sender) ... unproven
6/14 ... [NO_EFFECT] line 101, (@pre6 == LastMsg.Time) ... unproven
7/14 ... [NO_EFFECT] line 102, (@pre5 == LastMsg.Val) ... unproven
8/14 ... [ASSIGN_CONST] line 51, (acc.balance == 0) ... unproven
9/14 ... [ASSIGN_CONST] line 52, (acc.unlockTime == 0) ... unproven
10/14 ... [ASSIGN_CONST] line 64, (acc.balance == 0) ... unproven
11/14 ... [DEAD] line 50, false ... unproven
12/14 ... [DEAD] line 52, false ... unproven
13/14 ... [DEAD] line 61, false ... unproven
14/14 ... [DEAD] line 77, false ... unproven
took 7.600272s


===== Vulnerability Report =====
[1] [IO] line 50, (acc.balance + msg.value) : proven
[2] [IO] line 51, (acc.balance + msg.value) : proven
[3] [IO] line 52, (now + _lockTime) : unproven
[4] [IO] line 64, (acc.balance - _am) : proven
[5] [ETH_LEAK] line 65, msg.sender.call.value(_am)() : proven
[6] [RE_EL] line 65, msg.sender.call.value(_am)() : proven
[7] [RE] line 25, (PENNY_BY_PENNY, SetMinSum, [uint256]) : unproven
[8] [RE] line 32, (PENNY_BY_PENNY, SetLogFile, [address]) : unproven
[9] [RE] line 39, (PENNY_BY_PENNY, Initialized, []) : unproven
[10] [RE] line 45, (PENNY_BY_PENNY, Put, [uint256]) : unproven
[11] [RE] line 56, (PENNY_BY_PENNY, Collect, [uint256]) : unproven
[12] [RE] line 73, (PENNY_BY_PENNY, @fallback, []) : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 29, (@pre1 == MinSum) : unproven
[2] [NO_EFFECT] line 51, (@pre3 == acc.balance) : unproven
[3] [NO_EFFECT] line 52, (@pre2 == acc.unlockTime) : unproven
[4] [NO_EFFECT] line 64, (@pre4 == acc.balance) : unproven
[5] [NO_EFFECT] line 100, (@pre7 == LastMsg.Sender) : unproven
[6] [NO_EFFECT] line 101, (@pre6 == LastMsg.Time) : unproven
[7] [NO_EFFECT] line 102, (@pre5 == LastMsg.Val) : unproven
[8] [ASSIGN_CONST] line 51, (acc.balance == 0) : unproven
[9] [ASSIGN_CONST] line 52, (acc.unlockTime == 0) : unproven
[10] [ASSIGN_CONST] line 64, (acc.balance == 0) : unproven
[11] [DEAD] line 50, false : unproven
[12] [DEAD] line 52, false : unproven
[13] [DEAD] line 61, false : unproven
[14] [DEAD] line 77, false : unproven

============ Statistics ============
# Iter                    : 16
# Alarm / Query           : 7 / 12
- integer over/underflow  : 1 / 4
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 6 / 6
- tx.origin               : 0 / 0

Time Elapsed (Real) : 178.068552971
Time Elapsed (CPU)  : 178.039468
