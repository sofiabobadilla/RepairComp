[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 7
[INFO] reachable : 6
[INFO] Generating Paths ... took 0.000332s
[INFO] # path : 30

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001662s
Generating VCs ... took 0.009481s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.062254
[
-1 -> true
0 -> true
]
[
]
1/8 ... [IO] line 16, (acc.balance + msg.value) ... proven
2/8 ... [IO] line 17, (acc.balance + msg.value) ... proven
3/8 ... [IO] line 30, (acc.balance - _am) ... proven
4/8 ... [ETH_LEAK] line 31, msg.sender.call.value(_am)() ... unproven
5/8 ... [RE_EL] line 31, msg.sender.call.value(_am)() ... unproven
6/8 ... [RE] line 11, (W_WALLET, Put, [uint256]) ... unproven
7/8 ... [RE] line 22, (W_WALLET, Collect, [uint256]) ... unproven
8/8 ... [RE] line 39, (W_WALLET, @fallback, []) ... unproven
took 0.914328s

Generating VCs ... took 0.00619s
Checking validity of VCs ... took 3.105435s

Generating VCs ... took 0.006143s
Checking validity of VCs ... took 6.482962s

Generating VCs ... took 0.006792s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 4 Total elapsed : 10.634532
[
-1 -> @Invest_sum >= Σ_u,i balance__@126[Acc__@131[i]]
0 -> @Invest_sum >= Σ_u,i balance__@126[Acc__@131[i]]
]
[
]
1/8 ... [IO] line 16, (acc.balance + msg.value) ... proven
2/8 ... [IO] line 17, (acc.balance + msg.value) ... proven
3/8 ... [IO] line 30, (acc.balance - _am) ... proven
4/8 ... [ETH_LEAK] line 31, msg.sender.call.value(_am)() ... proven
5/8 ... [RE_EL] line 31, msg.sender.call.value(_am)() ... proven
6/8 ... [RE] line 11, (W_WALLET, Put, [uint256]) ... unproven
7/8 ... [RE] line 22, (W_WALLET, Collect, [uint256]) ... unproven
8/8 ... [RE] line 39, (W_WALLET, @fallback, []) ... unproven
took 16.778463s

Generating VCs ... took 0.007147s
Checking validity of VCs ... took 16.089748s

Generating VCs ... took 0.006383s
Checking validity of VCs ... took 13.240821s

Generating VCs ... took 0.007904s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 7 Total elapsed : 57.012373
[
-1 -> ((MinSum__@136 == 1000000000000000000) /\ @Invest_sum >= Σ_u,i balance__@126[Acc__@131[i]])
0 -> @Invest_sum >= Σ_u,i balance__@126[Acc__@131[i]]
]
[
]
1/8 ... [IO] line 16, (acc.balance + msg.value) ... proven
2/8 ... [IO] line 17, (acc.balance + msg.value) ... proven
3/8 ... [IO] line 30, (acc.balance - _am) ... proven
4/8 ... [ETH_LEAK] line 31, msg.sender.call.value(_am)() ... proven
5/8 ... [RE_EL] line 31, msg.sender.call.value(_am)() ... proven
6/8 ... [RE] line 11, (W_WALLET, Put, [uint256]) ... unproven
7/8 ... [RE] line 22, (W_WALLET, Collect, [uint256]) ... unproven
8/8 ... [RE] line 39, (W_WALLET, @fallback, []) ... unproven
took 2.226796s

Generating VCs ... took 0.00797s
Checking validity of VCs ... took 15.05964s

Generating VCs ... took 0.006568s
Checking validity of VCs ... took 15.891939s

Iter : 10 To explore : 13 Explored : 67 Total elapsed : 89.918478
Generating VCs ... took 0.006416s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 10 Total elapsed : 90.308843
[
-1 -> ((MinSum__@136 == 1000000000000000000) /\ @Invest_sum >= Σ_u,i balance__@126[Acc__@131[i]])
0 -> ((MinSum__@136 == 1000000000000000000) /\ @Invest_sum >= Σ_u,i balance__@126[Acc__@131[i]])
]
[
]
1/8 ... [IO] line 16, (acc.balance + msg.value) ... proven
2/8 ... [IO] line 17, (acc.balance + msg.value) ... proven
3/8 ... [IO] line 30, (acc.balance - _am) ... proven
4/8 ... [ETH_LEAK] line 31, msg.sender.call.value(_am)() ... proven
5/8 ... [RE_EL] line 31, msg.sender.call.value(_am)() ... proven
6/8 ... [RE] line 11, (W_WALLET, Put, [uint256]) ... unproven
7/8 ... [RE] line 22, (W_WALLET, Collect, [uint256]) ... unproven
8/8 ... [RE] line 39, (W_WALLET, @fallback, []) ... unproven
took 1.676196s

Generating VCs ... took 0.006522s
Checking validity of VCs ... took 12.633498s

Generating VCs ... took 0.006506s
Checking validity of VCs ... took 16.350117s

Generating VCs ... took 0.006439s
Checking validity of VCs ... took 0.013457s

Generating VCs ... took 0.006489s
Checking validity of VCs ... took 2.171408s

Generating VCs ... took 0.00650200000001s
Checking validity of VCs ... took 3.431179s

Generating VCs ... took 0.00333999999999s
Checking validity of VCs ... 
1/14 ... [NO_EFFECT] line 17, (@pre4 == acc.balance) ... unproven
2/14 ... [NO_EFFECT] line 18, (@pre1 == acc.unlockTime) ... unproven
3/14 ... [NO_EFFECT] line 18, (@pre2 == ((_unlockTime > now) ? _unlockTime : now)) ... unproven
4/14 ... [NO_EFFECT] line 18, (@pre3 == ((_unlockTime > now) ? _unlockTime : now)) ... unproven
5/14 ... [NO_EFFECT] line 30, (@pre5 == acc.balance) ... unproven
6/14 ... [NO_EFFECT] line 81, (@pre8 == LastMsg.Sender) ... unproven
7/14 ... [NO_EFFECT] line 82, (@pre7 == LastMsg.Time) ... unproven
8/14 ... [NO_EFFECT] line 83, (@pre6 == LastMsg.Val) ... unproven
9/14 ... [ASSIGN_CONST] line 17, (acc.balance == 0) ... unproven
10/14 ... [ASSIGN_CONST] line 30, (acc.balance == 0) ... unproven
11/14 ... [DEAD] line 16, false ... unproven
12/14 ... [DEAD] line 18, false ... unproven
13/14 ... [DEAD] line 27, false ... unproven
14/14 ... [DEAD] line 43, false ... unproven
took 6.966047s


===== Vulnerability Report =====
[1] [IO] line 16, (acc.balance + msg.value) : proven
[2] [IO] line 17, (acc.balance + msg.value) : proven
[3] [IO] line 30, (acc.balance - _am) : proven
[4] [ETH_LEAK] line 31, msg.sender.call.value(_am)() : proven
[5] [RE_EL] line 31, msg.sender.call.value(_am)() : proven
[6] [RE] line 11, (W_WALLET, Put, [uint256]) : unproven
[7] [RE] line 22, (W_WALLET, Collect, [uint256]) : unproven
[8] [RE] line 39, (W_WALLET, @fallback, []) : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 17, (@pre4 == acc.balance) : unproven
[2] [NO_EFFECT] line 18, (@pre1 == acc.unlockTime) : unproven
[3] [NO_EFFECT] line 18, (@pre2 == ((_unlockTime > now) ? _unlockTime : now)) : unproven
[4] [NO_EFFECT] line 18, (@pre3 == ((_unlockTime > now) ? _unlockTime : now)) : unproven
[5] [NO_EFFECT] line 30, (@pre5 == acc.balance) : unproven
[6] [NO_EFFECT] line 81, (@pre8 == LastMsg.Sender) : unproven
[7] [NO_EFFECT] line 82, (@pre7 == LastMsg.Time) : unproven
[8] [NO_EFFECT] line 83, (@pre6 == LastMsg.Val) : unproven
[9] [ASSIGN_CONST] line 17, (acc.balance == 0) : unproven
[10] [ASSIGN_CONST] line 30, (acc.balance == 0) : unproven
[11] [DEAD] line 16, false : unproven
[12] [DEAD] line 18, false : unproven
[13] [DEAD] line 27, false : unproven
[14] [DEAD] line 43, false : unproven

============ Statistics ============
# Iter                    : 16
# Alarm / Query           : 3 / 8
- integer over/underflow  : 0 / 3
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 3 / 3
- tx.origin               : 0 / 0

Time Elapsed (Real) : 133.230694056
Time Elapsed (CPU)  : 133.210821
