[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.000205s
[INFO] # path : 14

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000501s
Generating VCs ... took 0.007781s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.035805
[
-1 -> true
0 -> true
]
[
]
1/6 ... [IO] line 13, (credit[to] + msg.value) ... unproven
2/6 ... [IO] line 19, (credit[msg.sender] - amount) ... proven
3/6 ... [ETH_LEAK] line 20, res = msg.sender.call.value(amount)(); ... unproven
4/6 ... [RE_EL] line 20, res = msg.sender.call.value(amount)(); ... unproven
5/6 ... [RE] line 12, (SimpleDAO, donate, [address]) ... unproven
6/6 ... [RE] line 16, (SimpleDAO, withdraw, [uint256]) ... unproven
took 0.292139s

Generating VCs ... took 0.000931s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 5.61381
[
-1 -> @Invest_sum >= Σ_u credit__@5
0 -> @Invest_sum >= Σ_u credit__@5
]
[
]
1/6 ... [IO] line 13, (credit[to] + msg.value) ... unproven
2/6 ... [IO] line 19, (credit[msg.sender] - amount) ... proven
3/6 ... [ETH_LEAK] line 20, res = msg.sender.call.value(amount)(); ... proven
4/6 ... [RE_EL] line 20, res = msg.sender.call.value(amount)(); ... proven
5/6 ... [RE] line 12, (SimpleDAO, donate, [address]) ... unproven
6/6 ... [RE] line 16, (SimpleDAO, withdraw, [uint256]) ... unproven
took 8.797057s

Generating VCs ... took 0.000950999999999s
Checking validity of VCs ... took 37.395039s

Generating VCs ... took 0.001006s
Checking validity of VCs ... took 1.353383s

Generating VCs ... took 0.000942999999999s
Checking validity of VCs ... took 4.762036s

Generating VCs ... took 0.000909999999998s
Checking validity of VCs ... 
1/5 ... [NO_EFFECT] line 13, (@pre1 == credit[to]) ... unproven
2/5 ... [NO_EFFECT] line 19, (@pre2 == credit[msg.sender]) ... unproven
3/5 ... [ASSIGN_CONST] line 13, (credit[to] == 0) ... unproven
4/5 ... [ASSIGN_CONST] line 19, (credit[msg.sender] == 0) ... unproven
5/5 ... [DEAD] line 17, false ... unproven
took 0.440928s


===== Vulnerability Report =====
[1] [IO] line 13, (credit[to] + msg.value) : unproven
[2] [IO] line 19, (credit[msg.sender] - amount) : proven
[3] [ETH_LEAK] line 20, res = msg.sender.call.value(amount)(); : proven
[4] [RE_EL] line 20, res = msg.sender.call.value(amount)(); : proven
[5] [RE] line 12, (SimpleDAO, donate, [address]) : unproven
[6] [RE] line 16, (SimpleDAO, withdraw, [uint256]) : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 13, (@pre1 == credit[to]) : unproven
[2] [NO_EFFECT] line 19, (@pre2 == credit[msg.sender]) : unproven
[3] [ASSIGN_CONST] line 13, (credit[to] == 0) : unproven
[4] [ASSIGN_CONST] line 19, (credit[msg.sender] == 0) : unproven
[5] [DEAD] line 17, false : unproven

============ Statistics ============
# Iter                    : 6
# Alarm / Query           : 3 / 6
- integer over/underflow  : 1 / 2
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 2 / 2
- tx.origin               : 0 / 0

Time Elapsed (Real) : 53.1002941132
Time Elapsed (CPU)  : 53.081313
