[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 7
[INFO] reachable : 6
[INFO] Generating Paths ... took 0.000386s
[INFO] # path : 30

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.002014s
Generating VCs ... took 0.009627s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.058532
[
-1 -> true
0 -> true
]
[
]
1/8 ... [IO] line 16, (acc.balance + msg.value) ... proven
2/8 ... [IO] line 17, (acc.balance + msg.value) ... proven
3/8 ... [IO] line 30, (acc.balance - _am) ... proven
4/8 ... [ETH_LEAK] line 31, msg.sender.call.value(_am)() ... unproven
5/8 ... [RE_EL] line 31, msg.sender.call.value(_am)() ... unproven
6/8 ... [RE] line 11, (X_WALLET, Put, [uint256]) ... unproven
7/8 ... [RE] line 22, (X_WALLET, Collect, [uint256]) ... unproven
8/8 ... [RE] line 39, (X_WALLET, @fallback, []) ... unproven
took 0.804412s

Generating VCs ... took 0.005826s
Checking validity of VCs ... took 2.682711s

Generating VCs ... took 0.005785s
Checking validity of VCs ... took 4.531345s

Generating VCs ... took 0.006122s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 4 Total elapsed : 8.137739
[
-1 -> @Invest_sum >= Σ_u,i balance__@126[Acc__@131[i]]
0 -> @Invest_sum >= Σ_u,i balance__@126[Acc__@131[i]]
]
[
]
1/8 ... [IO] line 16, (acc.balance + msg.value) ... proven
2/8 ... [IO] line 17, (acc.balance + msg.value) ... proven
3/8 ... [IO] line 30, (acc.balance - _am) ... proven
4/8 ... [ETH_LEAK] line 31, msg.sender.call.value(_am)() ... proven
5/8 ... [RE_EL] line 31, msg.sender.call.value(_am)() ... proven
6/8 ... [RE] line 11, (X_WALLET, Put, [uint256]) ... unproven
7/8 ... [RE] line 22, (X_WALLET, Collect, [uint256]) ... unproven
8/8 ... [RE] line 39, (X_WALLET, @fallback, []) ... unproven
took 14.976327s

Generating VCs ... took 0.00669s
Checking validity of VCs ... took 9.393976s

Generating VCs ... took 0.00599s
Checking validity of VCs ... took 12.166041s

Generating VCs ... took 0.006722s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 7 Total elapsed : 44.906258
[
-1 -> ((MinSum__@136 == 1000000000000000000) /\ @Invest_sum >= Σ_u,i balance__@126[Acc__@131[i]])
0 -> @Invest_sum >= Σ_u,i balance__@126[Acc__@131[i]]
]
[
]
1/8 ... [IO] line 16, (acc.balance + msg.value) ... proven
2/8 ... [IO] line 17, (acc.balance + msg.value) ... proven
3/8 ... [IO] line 30, (acc.balance - _am) ... proven
4/8 ... [ETH_LEAK] line 31, msg.sender.call.value(_am)() ... proven
5/8 ... [RE_EL] line 31, msg.sender.call.value(_am)() ... proven
6/8 ... [RE] line 11, (X_WALLET, Put, [uint256]) ... unproven
7/8 ... [RE] line 22, (X_WALLET, Collect, [uint256]) ... unproven
8/8 ... [RE] line 39, (X_WALLET, @fallback, []) ... unproven
took 1.213699s

Generating VCs ... took 0.005772s
Checking validity of VCs ... took 10.175363s

Generating VCs ... took 0.006158s
Checking validity of VCs ... took 12.96458s

Iter : 10 To explore : 13 Explored : 67 Total elapsed : 69.025527
Generating VCs ... took 0.005662s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 10 Total elapsed : 69.369372
[
-1 -> ((MinSum__@136 == 1000000000000000000) /\ @Invest_sum >= Σ_u,i balance__@126[Acc__@131[i]])
0 -> ((MinSum__@136 == 1000000000000000000) /\ @Invest_sum >= Σ_u,i balance__@126[Acc__@131[i]])
]
[
]
1/8 ... [IO] line 16, (acc.balance + msg.value) ... proven
2/8 ... [IO] line 17, (acc.balance + msg.value) ... proven
3/8 ... [IO] line 30, (acc.balance - _am) ... proven
4/8 ... [ETH_LEAK] line 31, msg.sender.call.value(_am)() ... proven
5/8 ... [RE_EL] line 31, msg.sender.call.value(_am)() ... proven
6/8 ... [RE] line 11, (X_WALLET, Put, [uint256]) ... unproven
7/8 ... [RE] line 22, (X_WALLET, Collect, [uint256]) ... unproven
8/8 ... [RE] line 39, (X_WALLET, @fallback, []) ... unproven
took 1.850455s

Generating VCs ... took 0.005816s
Checking validity of VCs ... took 9.93925s

Generating VCs ... took 0.00601s
Checking validity of VCs ... took 12.20428s

Generating VCs ... took 0.005869s
Checking validity of VCs ... took 0.011579s

Generating VCs ... took 0.00594000000001s
Checking validity of VCs ... took 1.896307s

Generating VCs ... took 0.005933s
Checking validity of VCs ... took 2.213619s

Generating VCs ... took 0.00308000000001s
Checking validity of VCs ... 
1/14 ... [NO_EFFECT] line 17, (@pre4 == acc.balance) ... unproven
2/14 ... [NO_EFFECT] line 18, (@pre1 == acc.unlockTime) ... unproven
3/14 ... [NO_EFFECT] line 18, (@pre2 == ((_unlockTime > now) ? _unlockTime : now)) ... unproven
4/14 ... [NO_EFFECT] line 18, (@pre3 == ((_unlockTime > now) ? _unlockTime : now)) ... unproven
5/14 ... [NO_EFFECT] line 30, (@pre5 == acc.balance) ... unproven
6/14 ... [NO_EFFECT] line 81, (@pre8 == LastMsg.Sender) ... unproven
7/14 ... [NO_EFFECT] line 82, (@pre7 == LastMsg.Time) ... unproven
8/14 ... [NO_EFFECT] line 83, (@pre6 == LastMsg.Val) ... unproven
9/14 ... [ASSIGN_CONST] line 17, (acc.balance == 0) ... unproven
10/14 ... [ASSIGN_CONST] line 30, (acc.balance == 0) ... unproven
11/14 ... [DEAD] line 16, false ... unproven
12/14 ... [DEAD] line 18, false ... unproven
13/14 ... [DEAD] line 27, false ... unproven
14/14 ... [DEAD] line 43, false ... unproven
took 4.059774s


===== Vulnerability Report =====
[1] [IO] line 16, (acc.balance + msg.value) : proven
[2] [IO] line 17, (acc.balance + msg.value) : proven
[3] [IO] line 30, (acc.balance - _am) : proven
[4] [ETH_LEAK] line 31, msg.sender.call.value(_am)() : proven
[5] [RE_EL] line 31, msg.sender.call.value(_am)() : proven
[6] [RE] line 11, (X_WALLET, Put, [uint256]) : unproven
[7] [RE] line 22, (X_WALLET, Collect, [uint256]) : unproven
[8] [RE] line 39, (X_WALLET, @fallback, []) : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 17, (@pre4 == acc.balance) : unproven
[2] [NO_EFFECT] line 18, (@pre1 == acc.unlockTime) : unproven
[3] [NO_EFFECT] line 18, (@pre2 == ((_unlockTime > now) ? _unlockTime : now)) : unproven
[4] [NO_EFFECT] line 18, (@pre3 == ((_unlockTime > now) ? _unlockTime : now)) : unproven
[5] [NO_EFFECT] line 30, (@pre5 == acc.balance) : unproven
[6] [NO_EFFECT] line 81, (@pre8 == LastMsg.Sender) : unproven
[7] [NO_EFFECT] line 82, (@pre7 == LastMsg.Time) : unproven
[8] [NO_EFFECT] line 83, (@pre6 == LastMsg.Val) : unproven
[9] [ASSIGN_CONST] line 17, (acc.balance == 0) : unproven
[10] [ASSIGN_CONST] line 30, (acc.balance == 0) : unproven
[11] [DEAD] line 16, false : unproven
[12] [DEAD] line 18, false : unproven
[13] [DEAD] line 27, false : unproven
[14] [DEAD] line 43, false : unproven

============ Statistics ============
# Iter                    : 16
# Alarm / Query           : 3 / 8
- integer over/underflow  : 0 / 3
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 3 / 3
- tx.origin               : 0 / 0

Time Elapsed (Real) : 101.276434898
Time Elapsed (CPU)  : 101.246873
