[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 4
[INFO] reachable : 4
[INFO] Generating Paths ... took 0.000203s
[INFO] # path : 13

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000539s
Generating VCs ... took 0.007264s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.033738
[
-1 -> true
0 -> true
]
[
]
1/5 ... [IO] line 17, (userBalance[msg.sender] + msg.value) ... unproven
2/5 ... [ETH_LEAK] line 26, msg.sender.call.value(tmp__1)() ... unproven
3/5 ... [RE_EL] line 26, msg.sender.call.value(tmp__1)() ... unproven
4/5 ... [RE] line 16, (Reentrance, addToBalance, []) ... unproven
5/5 ... [RE] line 20, (Reentrance, withdrawBalance, []) ... unproven
took 0.335824s

Generating VCs ... took 0.000831s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 20.459064
[
-1 -> @Invest_sum >= Σ_u userBalance__@5
0 -> @Invest_sum >= Σ_u userBalance__@5
]
[
]
1/5 ... [IO] line 17, (userBalance[msg.sender] + msg.value) ... unproven
2/5 ... [ETH_LEAK] line 26, msg.sender.call.value(tmp__1)() ... proven
3/5 ... [RE_EL] line 26, msg.sender.call.value(tmp__1)() ... proven
4/5 ... [RE] line 16, (Reentrance, addToBalance, []) ... unproven
5/5 ... [RE] line 20, (Reentrance, withdrawBalance, []) ... unproven
took 23.256501s

Generating VCs ... took 0.000964999999997s
Checking validity of VCs ... took 17.098621s

Generating VCs ... took 0.000749000000006s
Checking validity of VCs ... took 1.348801s

Generating VCs ... took 0.000858999999998s
Checking validity of VCs ... took 3.528579s

Generating VCs ... took 0.000491999999994s
Checking validity of VCs ... 
1/3 ... [NO_EFFECT] line 17, (@pre1 == userBalance[msg.sender]) ... unproven
2/3 ... [NO_EFFECT] line 24, (@pre2 == tmp__1) ... unproven
3/3 ... [ASSIGN_CONST] line 17, (userBalance[msg.sender] == 0) ... unproven
took 0.185256s


===== Vulnerability Report =====
[1] [IO] line 17, (userBalance[msg.sender] + msg.value) : unproven
[2] [ETH_LEAK] line 26, msg.sender.call.value(tmp__1)() : proven
[3] [RE_EL] line 26, msg.sender.call.value(tmp__1)() : proven
[4] [RE] line 16, (Reentrance, addToBalance, []) : unproven
[5] [RE] line 20, (Reentrance, withdrawBalance, []) : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 17, (@pre1 == userBalance[msg.sender]) : unproven
[2] [NO_EFFECT] line 24, (@pre2 == tmp__1) : unproven
[3] [ASSIGN_CONST] line 17, (userBalance[msg.sender] == 0) : unproven

============ Statistics ============
# Iter                    : 6
# Alarm / Query           : 3 / 5
- integer over/underflow  : 1 / 1
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 2 / 2
- tx.origin               : 0 / 0

Time Elapsed (Real) : 45.8035840988
Time Elapsed (CPU)  : 45.791939
