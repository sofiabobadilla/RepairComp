[INFO] compiled with solc ver. 0.4.25
[INFO] all funcs : 3
[INFO] reachable : 3

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[STEP] Run analyzer
[STEP] Collect fix targets
    (ETH_LEAK, (Reentrancy_bonus/withdrawReward/[address]), 19, (success,  ) = recipient.call.value(amountToWithdraw)("");),
    (RE_EL, (Reentrancy_bonus/withdrawReward/[address]), 19, (success,  ) = recipient.call.value(amountToWithdraw)("");)

[INFO] # of basic patch components : 3
[INFO] extracted components
[
AtomLst [
Move ([29] -> 28)
],
AtomLst [
Add @nonReentrant to (Reentrancy_bonus, withdrawReward, [address]) (line 16)
],
AtomLst [
Add @nonReentrant to (Reentrancy_bonus, withdrawReward, [address]) (line 16)
Add @nonReentrant to (Reentrancy_bonus, getFirstWithdrawalBonus, [address]) (line 23)
]
]
- New best candidate, iter 2, 347.54311204s : results/reentrancy/reentrancy_bonus/candidates/cand_2/patch.sol
- Regression found, results/reentrancy/reentrancy_bonus/candidates/cand_3/patch.sol
[STEP] Enter Repair Loop

========== Statistics ==========
# Iter                    : 4
# Alarm (orginal)         : 2
# Alarm (patch)           : 1
# Alarm wo leak (patch)   : 0
# Edit (min,max)          : 1, 1
# Patch                   : 1
- First solution          : n/a
- First solution (iter)   : n/a
- First solution (time)   : n/a
# Uncompiled candidate    : 0
# Verifier error          : 0

========== Patch info ==========
- 1, Size: 1.03, Edit: 1, Iter: 2, Time: 347.54311204, results/reentrancy/reentrancy_bonus/candidates/cand_2/patch.sol

Time Elapsed (Real) : 360.583903074
Time Elapsed (CPU)  : 5.799964
