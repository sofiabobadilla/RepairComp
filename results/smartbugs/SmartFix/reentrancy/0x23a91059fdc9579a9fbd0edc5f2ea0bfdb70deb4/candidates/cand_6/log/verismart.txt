[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 7
[INFO] reachable : 6
[INFO] Generating Paths ... took 0.000311s
[INFO] # path : 23

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001229s
Generating VCs ... took 0.005976s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.048703
[
-1 -> true
0 -> true
]
[
]
1/7 ... [IO] line 28, (balances[msg.sender] + msg.value) ... proven
2/7 ... [IO] line 29, (balances[msg.sender] + msg.value) ... proven
3/7 ... [IO] line 39, (balances[msg.sender] - _am) ... proven
4/7 ... [ETH_LEAK] line 40, msg.sender.call.value(_am)() ... unproven
5/7 ... [RE_EL] line 40, msg.sender.call.value(_am)() ... unproven
6/7 ... [RE] line 22, (PrivateBank, Deposit, []) ... unproven
7/7 ... [RE] line 34, (PrivateBank, CashOut, [uint256]) ... unproven
took 0.327483s

Generating VCs ... took 0.002934s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.390743
[
-1 -> @Invest_sum >= Σ_u balances__@5
0 -> @Invest_sum >= Σ_u balances__@5
]
[
]
1/7 ... [IO] line 28, (balances[msg.sender] + msg.value) ... proven
2/7 ... [IO] line 29, (balances[msg.sender] + msg.value) ... proven
3/7 ... [IO] line 39, (balances[msg.sender] - _am) ... proven
4/7 ... [ETH_LEAK] line 40, msg.sender.call.value(_am)() ... proven
5/7 ... [RE_EL] line 40, msg.sender.call.value(_am)() ... proven
6/7 ... [RE] line 22, (PrivateBank, Deposit, []) ... unproven
7/7 ... [RE] line 34, (PrivateBank, CashOut, [uint256]) ... unproven
took 4.41265s

Generating VCs ... took 0.002909s
Checking validity of VCs ... took 44.917685s

Generating VCs ... took 0.002889s
Checking validity of VCs ... took 1.730826s

Generating VCs ... took 0.003132s
Checking validity of VCs ... took 1.818529s

Generating VCs ... took 0.002833s
Checking validity of VCs ... took 1.326197s

Generating VCs ... took 0.002842s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 7 Total elapsed : 54.78569
[
-1 -> ((MinDeposit__@8 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
0 -> @Invest_sum >= Σ_u balances__@5
]
[
]
1/7 ... [IO] line 28, (balances[msg.sender] + msg.value) ... proven
2/7 ... [IO] line 29, (balances[msg.sender] + msg.value) ... proven
3/7 ... [IO] line 39, (balances[msg.sender] - _am) ... proven
4/7 ... [ETH_LEAK] line 40, msg.sender.call.value(_am)() ... proven
5/7 ... [RE_EL] line 40, msg.sender.call.value(_am)() ... proven
6/7 ... [RE] line 22, (PrivateBank, Deposit, []) ... unproven
7/7 ... [RE] line 34, (PrivateBank, CashOut, [uint256]) ... unproven
took 0.450346s

Generating VCs ... took 0.002792s
Checking validity of VCs ... took 47.313268s

Generating VCs ... took 0.0029s
Checking validity of VCs ... took 3.471294s

Iter : 10 To explore : 33 Explored : 90 Total elapsed : 105.853795
Generating VCs ... took 0.003439s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 10 Total elapsed : 106.115803
[
-1 -> ((MinDeposit__@8 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
0 -> ((MinDeposit__@8 == 1000000000000000000) /\ @Invest_sum >= Σ_u balances__@5)
]
[
]
1/7 ... [IO] line 28, (balances[msg.sender] + msg.value) ... proven
2/7 ... [IO] line 29, (balances[msg.sender] + msg.value) ... proven
3/7 ... [IO] line 39, (balances[msg.sender] - _am) ... proven
4/7 ... [ETH_LEAK] line 40, msg.sender.call.value(_am)() ... proven
5/7 ... [RE_EL] line 40, msg.sender.call.value(_am)() ... proven
6/7 ... [RE] line 22, (PrivateBank, Deposit, []) ... unproven
7/7 ... [RE] line 34, (PrivateBank, CashOut, [uint256]) ... unproven
took 0.54853s

Generating VCs ... took 0.003219s
Checking validity of VCs ... took 43.792503s

Generating VCs ... took 0.00152199999999s
Checking validity of VCs ... 
1/10 ... [NO_EFFECT] line 29, (@pre1 == balances[msg.sender]) ... unproven
2/10 ... [NO_EFFECT] line 39, (@pre2 == balances[msg.sender]) ... unproven
3/10 ... [NO_EFFECT] line 70, (@pre5 == LastMsg.Sender) ... unproven
4/10 ... [NO_EFFECT] line 71, (@pre4 == LastMsg.Time) ... unproven
5/10 ... [NO_EFFECT] line 72, (@pre3 == LastMsg.Val) ... unproven
6/10 ... [ASSIGN_CONST] line 29, (balances[msg.sender] == 0) ... unproven
7/10 ... [ASSIGN_CONST] line 39, (balances[msg.sender] == 0) ... unproven
8/10 ... [DEAD] line 26, false ... unproven
9/10 ... [DEAD] line 28, false ... unproven
10/10 ... [DEAD] line 36, false ... unproven
took 1.673306s


===== Vulnerability Report =====
[1] [IO] line 28, (balances[msg.sender] + msg.value) : proven
[2] [IO] line 29, (balances[msg.sender] + msg.value) : proven
[3] [IO] line 39, (balances[msg.sender] - _am) : proven
[4] [ETH_LEAK] line 40, msg.sender.call.value(_am)() : proven
[5] [RE_EL] line 40, msg.sender.call.value(_am)() : proven
[6] [RE] line 22, (PrivateBank, Deposit, []) : unproven
[7] [RE] line 34, (PrivateBank, CashOut, [uint256]) : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 29, (@pre1 == balances[msg.sender]) : unproven
[2] [NO_EFFECT] line 39, (@pre2 == balances[msg.sender]) : unproven
[3] [NO_EFFECT] line 70, (@pre5 == LastMsg.Sender) : unproven
[4] [NO_EFFECT] line 71, (@pre4 == LastMsg.Time) : unproven
[5] [NO_EFFECT] line 72, (@pre3 == LastMsg.Val) : unproven
[6] [ASSIGN_CONST] line 29, (balances[msg.sender] == 0) : unproven
[7] [ASSIGN_CONST] line 39, (balances[msg.sender] == 0) : unproven
[8] [DEAD] line 26, false : unproven
[9] [DEAD] line 28, false : unproven
[10] [DEAD] line 36, false : unproven

============ Statistics ============
# Iter                    : 11
# Alarm / Query           : 2 / 7
- integer over/underflow  : 0 / 3
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 2 / 2
- tx.origin               : 0 / 0

Time Elapsed (Real) : 151.920369864
Time Elapsed (CPU)  : 151.880675
