{
  "src": [ "0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol" ],
  "knowledge": [
    {
      "abs_patch": [
        "Abs_Insert ({mapping(address => uint256)}, {}, 1, 0, 0, 0 @ {mapping(address => uint256)})"
      ],
      "score": 0.125
    },
    {
      "abs_patch": [
        "Abs_Insert ({mapping(address => uint256)}, {uint256,mapping(address => uint256)}, 1, 1, 0, 0 @ {mapping(address => uint256)})"
      ],
      "score": 0.125
    },
    {
      "abs_patch": [
        "Abs_Replace ({mapping(address => uint256)}, {uint256,mapping(address => uint256)}, 1, 1, 0, 0 @ {mapping(address => uint256)}, {uint256,mapping(address => uint256)}, 1, 1, 0, 0 @ {>=} @ {mapping(address => uint256)} @ {<} @ {mapping(address => uint256)})"
      ],
      "score": -0.125
    },
    {
      "abs_patch": [
        "Abs_AtomLst [\nAbs_NR ({uint256}, {bool}, 0, 0, 0, 0)\nAbs_NR ({contract LogFile}, {bool}, 0, 0, 0, 0)\nAbs_NR ({bool}, {}, 0, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {}, 1, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {uint256,mapping(address => uint256)}, 1, 1, 0, 0)\n]"
      ],
      "score": 0.10625000000000001
    },
    {
      "abs_patch": [
        "Abs_AtomLst [\nAbs_NR ({uint256}, {bool}, 0, 0, 0, 0)\nAbs_NR ({contract LogFile}, {bool}, 0, 0, 0, 0)\nAbs_NR ({bool}, {}, 0, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {}, 1, 0, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {uint256,mapping(address => uint256)}, 1, 1, 0, 0)\nAbs_NR ({mapping(address => uint256)}, {}, 1, 0, 0, 0)\n]"
      ],
      "score": -2.1799999999999997
    },
    {
      "abs_patch": [
        "Abs_AtomLst [\nAbs_Move ({mapping(address => uint256)}, {uint256,mapping(address => uint256)}, 1, 1, 0, 0)\nAbs_ElseRevert ({mapping(address => uint256)}, {uint256,mapping(address => uint256)}, 1, 1, 0, 0)\n]"
      ],
      "score": 0.625
    },
    {
      "abs_patch": [
        "Abs_AtomLst [\nAbs_Move ({mapping(address => uint256)}, {uint256,mapping(address => uint256)}, 1, 1, 0, 0)\nAbs_ElseRevert ({mapping(address => uint256)}, {uint256,mapping(address => uint256)}, 1, 1, 0, 0)\n]",
        "Abs_Insert ({mapping(address => uint256)}, {}, 1, 0, 0, 0 @ {mapping(address => uint256)})"
      ],
      "score": 0.75
    }
  ]
}