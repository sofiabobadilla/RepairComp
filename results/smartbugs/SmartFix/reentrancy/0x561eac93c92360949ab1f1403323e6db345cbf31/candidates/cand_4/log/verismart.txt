[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 10
[INFO] reachable : 9
[INFO] Generating Paths ... took 0.000348s
[INFO] # path : 28

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001606s
Generating VCs ... took 0.008346s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.053318
[
-1 -> true
0 -> true
]
[
]
1/10 ... [IO] line 43, (balances[msg.sender] + msg.value) ... unproven
2/10 ... [IO] line 54, (balances[msg.sender] - _am) ... proven
3/10 ... [ETH_LEAK] line 55, msg.sender.call.value(_am)() ... unproven
4/10 ... [RE_EL] line 55, msg.sender.call.value(_am)() ... unproven
5/10 ... [RE] line 19, (BANK_SAFE, SetMinSum, [uint256]) ... unproven
6/10 ... [RE] line 26, (BANK_SAFE, SetLogFile, [address]) ... unproven
7/10 ... [RE] line 33, (BANK_SAFE, Initialized, []) ... unproven
8/10 ... [RE] line 39, (BANK_SAFE, Deposit, []) ... unproven
9/10 ... [RE] line 47, (BANK_SAFE, Collect, [uint256]) ... unproven
10/10 ... [RE] line 63, (BANK_SAFE, @fallback, []) ... unproven
took 0.520987s

Generating VCs ... took 0.004363s
Checking validity of VCs ... took 0.197576s

Generating VCs ... took 0.00444s
Checking validity of VCs ... took 0.187705s

Generating VCs ... took 0.004777s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 4 Total elapsed : 11.702586
[
-1 -> @Invest_sum >= Σ_u balances__@5
0 -> @Invest_sum >= Σ_u balances__@5
]
[
]
1/10 ... [IO] line 43, (balances[msg.sender] + msg.value) ... unproven
2/10 ... [IO] line 54, (balances[msg.sender] - _am) ... proven
3/10 ... [ETH_LEAK] line 55, msg.sender.call.value(_am)() ... proven
4/10 ... [RE_EL] line 55, msg.sender.call.value(_am)() ... proven
5/10 ... [RE] line 19, (BANK_SAFE, SetMinSum, [uint256]) ... unproven
6/10 ... [RE] line 26, (BANK_SAFE, SetLogFile, [address]) ... unproven
7/10 ... [RE] line 33, (BANK_SAFE, Initialized, []) ... unproven
8/10 ... [RE] line 39, (BANK_SAFE, Deposit, []) ... unproven
9/10 ... [RE] line 47, (BANK_SAFE, Collect, [uint256]) ... unproven
10/10 ... [RE] line 63, (BANK_SAFE, @fallback, []) ... unproven
took 16.870216s

Generating VCs ... took 0.004267s
Checking validity of VCs ... took 6.562791s

Generating VCs ... took 0.005584s
Checking validity of VCs ... took 6.236352s

Generating VCs ... took 0.006115s
Checking validity of VCs ... took 42.443094s

Generating VCs ... took 0.004407s
Checking validity of VCs ... took 31.756576s

Generating VCs ... took 0.00602600000001s
Checking validity of VCs ... took 6.167263s

Iter : 10 To explore : 24 Explored : 49 Total elapsed : 111.046396
Generating VCs ... took 0.004413s
Checking validity of VCs ... took 2.55211s

Generating VCs ... took 0.00439799999999s
Checking validity of VCs ... took 2.136868s

Generating VCs ... took 0.004758s
Checking validity of VCs ... took 2.189689s

Generating VCs ... took 0.00458399999999s
Checking validity of VCs ... took 1.985943s

Generating VCs ... took 0.004626s
Checking validity of VCs ... took 7.613215s

Generating VCs ... took 0.00444800000001s
Checking validity of VCs ... took 21.085193s

Generating VCs ... took 0.00578300000001s
Checking validity of VCs ... took 3.460477s

Generating VCs ... took 0.003962s
Checking validity of VCs ... 
1/10 ... [NO_EFFECT] line 23, (@pre1 == MinSum) ... unproven
2/10 ... [NO_EFFECT] line 43, (@pre2 == balances[msg.sender]) ... unproven
3/10 ... [NO_EFFECT] line 54, (@pre3 == balances[msg.sender]) ... unproven
4/10 ... [NO_EFFECT] line 91, (@pre6 == LastMsg.Sender) ... unproven
5/10 ... [NO_EFFECT] line 92, (@pre5 == LastMsg.Time) ... unproven
6/10 ... [NO_EFFECT] line 93, (@pre4 == LastMsg.Val) ... unproven
7/10 ... [ASSIGN_CONST] line 43, (balances[msg.sender] == 0) ... unproven
8/10 ... [ASSIGN_CONST] line 54, (balances[msg.sender] == 0) ... unproven
9/10 ... [DEAD] line 51, false ... unproven
10/10 ... [DEAD] line 67, false ... unproven
took 1.145355s


===== Vulnerability Report =====
[1] [IO] line 43, (balances[msg.sender] + msg.value) : unproven
[2] [IO] line 54, (balances[msg.sender] - _am) : proven
[3] [ETH_LEAK] line 55, msg.sender.call.value(_am)() : proven
[4] [RE_EL] line 55, msg.sender.call.value(_am)() : proven
[5] [RE] line 19, (BANK_SAFE, SetMinSum, [uint256]) : unproven
[6] [RE] line 26, (BANK_SAFE, SetLogFile, [address]) : unproven
[7] [RE] line 33, (BANK_SAFE, Initialized, []) : unproven
[8] [RE] line 39, (BANK_SAFE, Deposit, []) : unproven
[9] [RE] line 47, (BANK_SAFE, Collect, [uint256]) : unproven
[10] [RE] line 63, (BANK_SAFE, @fallback, []) : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 23, (@pre1 == MinSum) : unproven
[2] [NO_EFFECT] line 43, (@pre2 == balances[msg.sender]) : unproven
[3] [NO_EFFECT] line 54, (@pre3 == balances[msg.sender]) : unproven
[4] [NO_EFFECT] line 91, (@pre6 == LastMsg.Sender) : unproven
[5] [NO_EFFECT] line 92, (@pre5 == LastMsg.Time) : unproven
[6] [NO_EFFECT] line 93, (@pre4 == LastMsg.Val) : unproven
[7] [ASSIGN_CONST] line 43, (balances[msg.sender] == 0) : unproven
[8] [ASSIGN_CONST] line 54, (balances[msg.sender] == 0) : unproven
[9] [DEAD] line 51, false : unproven
[10] [DEAD] line 67, false : unproven

============ Statistics ============
# Iter                    : 16
# Alarm / Query           : 7 / 10
- integer over/underflow  : 1 / 2
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 6 / 6
- tx.origin               : 0 / 0

Time Elapsed (Real) : 153.297152996
Time Elapsed (CPU)  : 153.268653
