[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 10
[INFO] reachable : 9
[INFO] Generating Paths ... took 0.000357s
[INFO] # path : 27

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.00128s
Generating VCs ... took 0.005483s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.041204
[
-1 -> true
0 -> true
]
[
]
1/9 ... [IO] line 42, (balances[msg.sender] + msg.value) ... proven
2/9 ... [IO] line 43, (balances[msg.sender] + msg.value) ... proven
3/9 ... [IO] line 55, (balances[msg.sender] - _am) ... unproven
4/9 ... [ETH_LEAK] line 53, msg.sender.call.value(_am)() ... unproven
5/9 ... [RE_EL] line 53, msg.sender.call.value(_am)() ... unproven
6/9 ... [RE] line 31, (PrivateDeposit, setLog, [address]) ... unproven
7/9 ... [RE] line 36, (PrivateDeposit, Deposit, []) ... unproven
8/9 ... [RE] line 48, (PrivateDeposit, CashOut, [uint256]) ... unproven
9/9 ... [TX_ORG] line 19, assume((tx.origin == owner)); ... unproven
took 0.418155s

Generating VCs ... took 0.00352s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.463258
[
-1 -> (Read(@TU, owner__@10) == true)
0 -> (Read(@TU, owner__@10) == true)
]
[
]
1/9 ... [IO] line 42, (balances[msg.sender] + msg.value) ... proven
2/9 ... [IO] line 43, (balances[msg.sender] + msg.value) ... proven
3/9 ... [IO] line 55, (balances[msg.sender] - _am) ... unproven
4/9 ... [ETH_LEAK] line 53, msg.sender.call.value(_am)() ... unproven
5/9 ... [RE_EL] line 53, msg.sender.call.value(_am)() ... unproven
6/9 ... [RE] line 31, (PrivateDeposit, setLog, [address]) ... unproven
7/9 ... [RE] line 36, (PrivateDeposit, Deposit, []) ... unproven
8/9 ... [RE] line 48, (PrivateDeposit, CashOut, [uint256]) ... unproven
9/9 ... [TX_ORG] line 19, assume((tx.origin == owner)); ... unproven
took 0.438163s

Generating VCs ... took 0.002991s
Checking validity of VCs ... took 1.198751s

Generating VCs ... took 0.003099s
Checking validity of VCs ... took 1.31376s

Generating VCs ... took 0.003172s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 5 Total elapsed : 3.625776
[
-1 -> ((MinDeposit__@8 == 1000000000000000000) /\ (Read(@TU, owner__@10) == true))
0 -> (Read(@TU, owner__@10) == true)
]
[
]
1/9 ... [IO] line 42, (balances[msg.sender] + msg.value) ... proven
2/9 ... [IO] line 43, (balances[msg.sender] + msg.value) ... proven
3/9 ... [IO] line 55, (balances[msg.sender] - _am) ... unproven
4/9 ... [ETH_LEAK] line 53, msg.sender.call.value(_am)() ... unproven
5/9 ... [RE_EL] line 53, msg.sender.call.value(_am)() ... unproven
6/9 ... [RE] line 31, (PrivateDeposit, setLog, [address]) ... unproven
7/9 ... [RE] line 36, (PrivateDeposit, Deposit, []) ... unproven
8/9 ... [RE] line 48, (PrivateDeposit, CashOut, [uint256]) ... unproven
9/9 ... [TX_ORG] line 19, assume((tx.origin == owner)); ... unproven
took 0.609689s

Generating VCs ... took 0.003276s
Checking validity of VCs ... took 1.248346s

Generating VCs ... took 0.003294s
Checking validity of VCs ... took 1.259821s

Generating VCs ... took 0.003265s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 8 Total elapsed : 6.887626
[
-1 -> ((MinDeposit__@8 == 1000000000000000000) /\ (Read(@TU, owner__@10) == true))
0 -> ((MinDeposit__@8 == 1000000000000000000) /\ (Read(@TU, owner__@10) == true))
]
[
]
1/9 ... [IO] line 42, (balances[msg.sender] + msg.value) ... proven
2/9 ... [IO] line 43, (balances[msg.sender] + msg.value) ... proven
3/9 ... [IO] line 55, (balances[msg.sender] - _am) ... unproven
4/9 ... [ETH_LEAK] line 53, msg.sender.call.value(_am)() ... unproven
5/9 ... [RE_EL] line 53, msg.sender.call.value(_am)() ... unproven
6/9 ... [RE] line 31, (PrivateDeposit, setLog, [address]) ... unproven
7/9 ... [RE] line 36, (PrivateDeposit, Deposit, []) ... unproven
8/9 ... [RE] line 48, (PrivateDeposit, CashOut, [uint256]) ... unproven
9/9 ... [TX_ORG] line 19, assume((tx.origin == owner)); ... unproven
took 0.688277s

Generating VCs ... took 0.003087s
Checking validity of VCs ... took 1.310636s

Iter : 10 To explore : 15 Explored : 87 Total elapsed : 8.577657
Generating VCs ... took 0.003562s
Checking validity of VCs ... took 1.421865s

Generating VCs ... took 0.003209s
Checking validity of VCs ... took 0.691633s

Generating VCs ... took 0.003283s
Checking validity of VCs ... took 0.68317s

Generating VCs ... took 0.003243s
Checking validity of VCs ... took 0.719226s

Generating VCs ... took 0.003206s
Checking validity of VCs ... took 3.197702s

Generating VCs ... took 0.003087s
Checking validity of VCs ... took 1.702339s

Generating VCs ... took 0.003125s
Checking validity of VCs ... took 1.655772s

Generating VCs ... took 0.00319s
Checking validity of VCs ... took 2.157886s

Generating VCs ... took 0.003066s
Checking validity of VCs ... took 2.833667s

Generating VCs ... took 0.003866s
Checking validity of VCs ... took 2.702685s

Iter : 20 To explore : 26 Explored : 108 Total elapsed : 26.410379
Generating VCs ... took 0.003164s
Checking validity of VCs ... took 2.343479s

Generating VCs ... took 0.00329s
Checking validity of VCs ... took 4.739665s

Generating VCs ... took 0.003801s
Checking validity of VCs ... took 4.920311s

Generating VCs ... took 0.004329s
Checking validity of VCs ... took 5.03224s

Generating VCs ... took 0.003192s
Checking validity of VCs ... took 0.012376s

Generating VCs ... took 0.003432s
Checking validity of VCs ... took 0.215471s

Generating VCs ... took 0.003165s
Checking validity of VCs ... took 0.426611s

Generating VCs ... took 0.00387199999999s
Checking validity of VCs ... took 0.404307s

Generating VCs ... took 0.003162s
Checking validity of VCs ... took 0.242338s

Generating VCs ... took 0.003072s
Checking validity of VCs ... took 0.28114s

Iter : 30 To explore : 26 Explored : 118 Total elapsed : 45.081237
Generating VCs ... took 0.002987s
Checking validity of VCs ... took 0.230973s

Generating VCs ... took 0.003315s
Checking validity of VCs ... took 0.687077s

Generating VCs ... took 0.003237s
Checking validity of VCs ... took 0.387899s

Generating VCs ... took 0.00324000000001s
Checking validity of VCs ... took 0.413104s

Generating VCs ... took 0.003074s
Checking validity of VCs ... took 0.359147s

Generating VCs ... took 0.003667s
Checking validity of VCs ... took 0.820303s

Generating VCs ... took 0.003324s
Checking validity of VCs ... took 0.887224s

Generating VCs ... took 0.003266s
Checking validity of VCs ... took 0.943538s

Generating VCs ... took 0.00340600000001s
Checking validity of VCs ... took 1.271599s

Generating VCs ... took 0.003255s
Checking validity of VCs ... took 1.613557s

Iter : 40 To explore : 25 Explored : 127 Total elapsed : 52.740091
Generating VCs ... took 0.003174s
Checking validity of VCs ... took 1.087713s

Generating VCs ... took 0.00344200000001s
Checking validity of VCs ... took 0.234619s

Generating VCs ... took 0.003814s
Checking validity of VCs ... took 0.109104s

Generating VCs ... took 0.003184s
Checking validity of VCs ... took 0.109096s

Generating VCs ... took 0.003733s
Checking validity of VCs ... took 0.106683s

Generating VCs ... took 0.00349s
Checking validity of VCs ... took 0.110112s

Generating VCs ... took 0.003752s
Checking validity of VCs ... took 0.281587s

Generating VCs ... took 0.003255s
Checking validity of VCs ... took 0.204353s

Generating VCs ... took 0.003149s
Checking validity of VCs ... took 0.549841s

Generating VCs ... took 0.003138s
Checking validity of VCs ... took 0.207041s

Iter : 50 To explore : 18 Explored : 130 Total elapsed : 55.782398
Generating VCs ... took 0.003492s
Checking validity of VCs ... took 0.250181s

Generating VCs ... took 0.003234s
Checking validity of VCs ... took 1.276902s

Generating VCs ... took 0.003293s
Checking validity of VCs ... took 0.261536s

Generating VCs ... took 0.003455s
Checking validity of VCs ... took 0.108366s

Generating VCs ... took 0.0038s
Checking validity of VCs ... took 0.112269s

Generating VCs ... took 0.003389s
Checking validity of VCs ... took 0.212085s

Generating VCs ... took 0.003094s
Checking validity of VCs ... took 0.265895s

Generating VCs ... took 0.003206s
Checking validity of VCs ... took 0.544217s

Generating VCs ... took 0.003382s
Checking validity of VCs ... took 0.54001s

Generating VCs ... took 0.003251s
Checking validity of VCs ... took 0.764305s

Iter : 60 To explore : 10 Explored : 132 Total elapsed : 60.161837
Generating VCs ... took 0.003326s
Checking validity of VCs ... took 1.857218s

Generating VCs ... took 0.003337s
Checking validity of VCs ... took 0.666469s

Generating VCs ... took 0.003332s
Checking validity of VCs ... took 0.665339s

Generating VCs ... took 0.003939s
Checking validity of VCs ... took 0.665659s

Generating VCs ... took 0.00321s
Checking validity of VCs ... took 2.654706s

Generating VCs ... took 0.003354s
Checking validity of VCs ... took 0.64747s

Generating VCs ... took 0.00331200000001s
Checking validity of VCs ... took 0.920005s

Generating VCs ... took 0.00340800000001s
Checking validity of VCs ... took 4.405844s

Generating VCs ... took 0.003356s
Checking validity of VCs ... took 0.910621s

Generating VCs ... took 0.00326s
Checking validity of VCs ... took 0.547457s

Iter : 70 To explore : 3 Explored : 135 Total elapsed : 74.15595
Generating VCs ... took 0.003182s
Checking validity of VCs ... took 0.694995s

Generating VCs ... took 0.00341899999999s
Checking validity of VCs ... took 0.673089s

Generating VCs ... took 0.003445s
Checking validity of VCs ... took 0.928596s

Generating VCs ... took 0.00164099999999s
Checking validity of VCs ... 
1/11 ... [NO_EFFECT] line 43, (@pre1 == balances[msg.sender]) ... unproven
2/11 ... [NO_EFFECT] line 55, (@pre2 == balances[msg.sender]) ... unproven
3/11 ... [NO_EFFECT] line 83, (@pre5 == LastMsg.Sender) ... unproven
4/11 ... [NO_EFFECT] line 84, (@pre4 == LastMsg.Time) ... unproven
5/11 ... [NO_EFFECT] line 85, (@pre3 == LastMsg.Val) ... unproven
6/11 ... [ASSIGN_CONST] line 43, (balances[msg.sender] == 0) ... unproven
7/11 ... [ASSIGN_CONST] line 55, (balances[msg.sender] == 0) ... unproven
8/11 ... [DEAD] line 19, false ... unproven
9/11 ... [DEAD] line 40, false ... unproven
10/11 ... [DEAD] line 42, false ... unproven
11/11 ... [DEAD] line 50, false ... unproven
took 0.65564s


===== Vulnerability Report =====
[1] [IO] line 42, (balances[msg.sender] + msg.value) : proven
[2] [IO] line 43, (balances[msg.sender] + msg.value) : proven
[3] [IO] line 55, (balances[msg.sender] - _am) : unproven
[4] [ETH_LEAK] line 53, msg.sender.call.value(_am)() : unproven
[5] [RE_EL] line 53, msg.sender.call.value(_am)() : unproven
[6] [RE] line 31, (PrivateDeposit, setLog, [address]) : unproven
[7] [RE] line 36, (PrivateDeposit, Deposit, []) : unproven
[8] [RE] line 48, (PrivateDeposit, CashOut, [uint256]) : unproven
[9] [TX_ORG] line 19, assume((tx.origin == owner)); : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 43, (@pre1 == balances[msg.sender]) : unproven
[2] [NO_EFFECT] line 55, (@pre2 == balances[msg.sender]) : unproven
[3] [NO_EFFECT] line 83, (@pre5 == LastMsg.Sender) : unproven
[4] [NO_EFFECT] line 84, (@pre4 == LastMsg.Time) : unproven
[5] [NO_EFFECT] line 85, (@pre3 == LastMsg.Val) : unproven
[6] [ASSIGN_CONST] line 43, (balances[msg.sender] == 0) : unproven
[7] [ASSIGN_CONST] line 55, (balances[msg.sender] == 0) : unproven
[8] [DEAD] line 19, false : unproven
[9] [DEAD] line 40, false : unproven
[10] [DEAD] line 42, false : unproven
[11] [DEAD] line 50, false : unproven

============ Statistics ============
# Iter                    : 73
# Alarm / Query           : 7 / 9
- integer over/underflow  : 1 / 3
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 1
- reentrancy-leaking      : 1 / 1
- reentrancy              : 3 / 3
- tx.origin               : 1 / 1

Time Elapsed (Real) : 77.0823659897
Time Elapsed (CPU)  : 77.12354
