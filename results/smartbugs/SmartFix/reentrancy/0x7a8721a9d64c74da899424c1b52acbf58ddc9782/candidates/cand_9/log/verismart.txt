[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 10
[INFO] reachable : 9
[INFO] Generating Paths ... took 0.000334s
[INFO] # path : 27

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.001433s
Generating VCs ... took 0.00725s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.042401
[
-1 -> true
0 -> true
]
[
]
1/9 ... [IO] line 42, (balances[msg.sender] + msg.value) ... proven
2/9 ... [IO] line 43, (balances[msg.sender] + msg.value) ... proven
3/9 ... [IO] line 53, (balances[msg.sender] - _am) ... proven
4/9 ... [ETH_LEAK] line 54, msg.sender.call.value(_am)() ... unproven
5/9 ... [RE_EL] line 54, msg.sender.call.value(_am)() ... unproven
6/9 ... [RE] line 31, (PrivateDeposit, setLog, [address]) ... unproven
7/9 ... [RE] line 36, (PrivateDeposit, Deposit, []) ... unproven
8/9 ... [RE] line 48, (PrivateDeposit, CashOut, [uint256]) ... unproven
9/9 ... [TX_ORG] line 19, assume((tx.origin == owner)); ... unproven
took 0.419574s

Generating VCs ... took 0.003481s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.467608
[
-1 -> (Read(@TU, owner__@10) == true)
0 -> (Read(@TU, owner__@10) == true)
]
[
]
1/9 ... [IO] line 42, (balances[msg.sender] + msg.value) ... proven
2/9 ... [IO] line 43, (balances[msg.sender] + msg.value) ... proven
3/9 ... [IO] line 53, (balances[msg.sender] - _am) ... proven
4/9 ... [ETH_LEAK] line 54, msg.sender.call.value(_am)() ... unproven
5/9 ... [RE_EL] line 54, msg.sender.call.value(_am)() ... unproven
6/9 ... [RE] line 31, (PrivateDeposit, setLog, [address]) ... unproven
7/9 ... [RE] line 36, (PrivateDeposit, Deposit, []) ... unproven
8/9 ... [RE] line 48, (PrivateDeposit, CashOut, [uint256]) ... unproven
9/9 ... [TX_ORG] line 19, assume((tx.origin == owner)); ... unproven
took 0.391782s

Generating VCs ... took 0.00358s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 1.100966
[
-1 -> ((Read(@TU, owner__@10) == true) /\ @Invest_sum >= Σ_u balances__@5)
0 -> ((Read(@TU, owner__@10) == true) /\ @Invest_sum >= Σ_u balances__@5)
]
[
]
1/9 ... [IO] line 42, (balances[msg.sender] + msg.value) ... proven
2/9 ... [IO] line 43, (balances[msg.sender] + msg.value) ... proven
3/9 ... [IO] line 53, (balances[msg.sender] - _am) ... proven
4/9 ... [ETH_LEAK] line 54, msg.sender.call.value(_am)() ... proven
5/9 ... [RE_EL] line 54, msg.sender.call.value(_am)() ... proven
6/9 ... [RE] line 31, (PrivateDeposit, setLog, [address]) ... unproven
7/9 ... [RE] line 36, (PrivateDeposit, Deposit, []) ... unproven
8/9 ... [RE] line 48, (PrivateDeposit, CashOut, [uint256]) ... unproven
9/9 ... [TX_ORG] line 19, assume((tx.origin == owner)); ... unproven
took 4.694382s

Generating VCs ... took 0.003386s
Checking validity of VCs ... took 36.491049s

Generating VCs ... took 0.003618s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 5 Total elapsed : 42.332207
[
-1 -> (((MinDeposit__@8 == 1000000000000000000) /\ (Read(@TU, owner__@10) == true)) /\ @Invest_sum >= Σ_u balances__@5)
0 -> ((Read(@TU, owner__@10) == true) /\ @Invest_sum >= Σ_u balances__@5)
]
[
]
1/9 ... [IO] line 42, (balances[msg.sender] + msg.value) ... proven
2/9 ... [IO] line 43, (balances[msg.sender] + msg.value) ... proven
3/9 ... [IO] line 53, (balances[msg.sender] - _am) ... proven
4/9 ... [ETH_LEAK] line 54, msg.sender.call.value(_am)() ... proven
5/9 ... [RE_EL] line 54, msg.sender.call.value(_am)() ... proven
6/9 ... [RE] line 31, (PrivateDeposit, setLog, [address]) ... unproven
7/9 ... [RE] line 36, (PrivateDeposit, Deposit, []) ... unproven
8/9 ... [RE] line 48, (PrivateDeposit, CashOut, [uint256]) ... unproven
9/9 ... [TX_ORG] line 19, assume((tx.origin == owner)); ... unproven
took 0.593708s

Generating VCs ... took 0.00335699999999s
Checking validity of VCs ... took 34.665097s

Generating VCs ... took 0.003541s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 7 Total elapsed : 77.634338
[
-1 -> (((MinDeposit__@8 == 1000000000000000000) /\ (Read(@TU, owner__@10) == true)) /\ @Invest_sum >= Σ_u balances__@5)
0 -> (((MinDeposit__@8 == 1000000000000000000) /\ (Read(@TU, owner__@10) == true)) /\ @Invest_sum >= Σ_u balances__@5)
]
[
]
1/9 ... [IO] line 42, (balances[msg.sender] + msg.value) ... proven
2/9 ... [IO] line 43, (balances[msg.sender] + msg.value) ... proven
3/9 ... [IO] line 53, (balances[msg.sender] - _am) ... proven
4/9 ... [ETH_LEAK] line 54, msg.sender.call.value(_am)() ... proven
5/9 ... [RE_EL] line 54, msg.sender.call.value(_am)() ... proven
6/9 ... [RE] line 31, (PrivateDeposit, setLog, [address]) ... unproven
7/9 ... [RE] line 36, (PrivateDeposit, Deposit, []) ... unproven
8/9 ... [RE] line 48, (PrivateDeposit, CashOut, [uint256]) ... unproven
9/9 ... [TX_ORG] line 19, assume((tx.origin == owner)); ... unproven
took 0.790733s

Generating VCs ... took 0.00350900000001s
Checking validity of VCs ... took 37.969855s

Generating VCs ... took 0.003412s
Checking validity of VCs ... took 1.817505s

Iter : 10 To explore : 11 Explored : 77 Total elapsed : 117.929764
Generating VCs ... took 0.003653s
Checking validity of VCs ... took 1.269028s

Generating VCs ... took 0.00345900000001s
Checking validity of VCs ... took 1.706317s

Generating VCs ... took 0.00349s
Checking validity of VCs ... took 4.670813s

Generating VCs ... took 0.003615s
Checking validity of VCs ... took 4.371934s

Generating VCs ... took 0.003826s
Checking validity of VCs ... took 5.449558s

Generating VCs ... took 0.00370699999999s
Checking validity of VCs ... took 0.011563s

Generating VCs ... took 0.00362100000001s
Checking validity of VCs ... took 0.683286s

Generating VCs ... took 0.003535s
Checking validity of VCs ... took 0.754838s

Generating VCs ... took 0.0042s
Checking validity of VCs ... took 0.291604s

Generating VCs ... took 0.00404s
Checking validity of VCs ... took 0.284154s

Iter : 20 To explore : 13 Explored : 89 Total elapsed : 137.482193
Generating VCs ... took 0.00528299999999s
Checking validity of VCs ... took 0.508796s

Generating VCs ... took 0.00384099999999s
Checking validity of VCs ... took 1.553217s

Generating VCs ... took 0.00392300000001s
Checking validity of VCs ... took 1.174111s

Generating VCs ... took 0.003602s
Checking validity of VCs ... took 1.522433s

Generating VCs ... took 0.00391099999999s
Checking validity of VCs ... took 0.099738s

Generating VCs ... took 0.003726s
Checking validity of VCs ... took 0.101329s

Generating VCs ... took 0.00354300000001s
Checking validity of VCs ... took 0.281729s

Generating VCs ... took 0.00436099999999s
Checking validity of VCs ... took 0.260386s

Generating VCs ... took 0.003593s
Checking validity of VCs ... took 0.251802s

Generating VCs ... took 0.003649s
Checking validity of VCs ... took 1.246133s

Iter : 30 To explore : 8 Explored : 94 Total elapsed : 144.531594
Generating VCs ... took 0.003781s
Checking validity of VCs ... took 0.10366s

Generating VCs ... took 0.00392400000001s
Checking validity of VCs ... took 0.265842s

Generating VCs ... took 0.003727s
Checking validity of VCs ... took 1.487156s

Generating VCs ... took 0.00372900000002s
Checking validity of VCs ... took 0.656561s

Generating VCs ... took 0.003649s
Checking validity of VCs ... took 0.659627s

Generating VCs ... took 0.00381899999999s
Checking validity of VCs ... took 0.833908s

Generating VCs ... took 0.00356399999998s
Checking validity of VCs ... took 0.828766s

Generating VCs ... took 0.00389300000001s
Checking validity of VCs ... took 4.389024s

Generating VCs ... took 0.00377500000002s
Checking validity of VCs ... took 0.66179s

Generating VCs ... took 0.00347200000002s
Checking validity of VCs ... took 0.876509s

Iter : 40 To explore : 0 Explored : 96 Total elapsed : 155.346764
Generating VCs ... took 0.001833s
Checking validity of VCs ... 
1/11 ... [NO_EFFECT] line 43, (@pre1 == balances[msg.sender]) ... unproven
2/11 ... [NO_EFFECT] line 53, (@pre2 == balances[msg.sender]) ... unproven
3/11 ... [NO_EFFECT] line 84, (@pre5 == LastMsg.Sender) ... unproven
4/11 ... [NO_EFFECT] line 85, (@pre4 == LastMsg.Time) ... unproven
5/11 ... [NO_EFFECT] line 86, (@pre3 == LastMsg.Val) ... unproven
6/11 ... [ASSIGN_CONST] line 43, (balances[msg.sender] == 0) ... unproven
7/11 ... [ASSIGN_CONST] line 53, (balances[msg.sender] == 0) ... unproven
8/11 ... [DEAD] line 19, false ... unproven
9/11 ... [DEAD] line 40, false ... unproven
10/11 ... [DEAD] line 42, false ... unproven
11/11 ... [DEAD] line 50, false ... unproven
took 1.746525s


===== Vulnerability Report =====
[1] [IO] line 42, (balances[msg.sender] + msg.value) : proven
[2] [IO] line 43, (balances[msg.sender] + msg.value) : proven
[3] [IO] line 53, (balances[msg.sender] - _am) : proven
[4] [ETH_LEAK] line 54, msg.sender.call.value(_am)() : proven
[5] [RE_EL] line 54, msg.sender.call.value(_am)() : proven
[6] [RE] line 31, (PrivateDeposit, setLog, [address]) : unproven
[7] [RE] line 36, (PrivateDeposit, Deposit, []) : unproven
[8] [RE] line 48, (PrivateDeposit, CashOut, [uint256]) : unproven
[9] [TX_ORG] line 19, assume((tx.origin == owner)); : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 43, (@pre1 == balances[msg.sender]) : unproven
[2] [NO_EFFECT] line 53, (@pre2 == balances[msg.sender]) : unproven
[3] [NO_EFFECT] line 84, (@pre5 == LastMsg.Sender) : unproven
[4] [NO_EFFECT] line 85, (@pre4 == LastMsg.Time) : unproven
[5] [NO_EFFECT] line 86, (@pre3 == LastMsg.Val) : unproven
[6] [ASSIGN_CONST] line 43, (balances[msg.sender] == 0) : unproven
[7] [ASSIGN_CONST] line 53, (balances[msg.sender] == 0) : unproven
[8] [DEAD] line 19, false : unproven
[9] [DEAD] line 40, false : unproven
[10] [DEAD] line 42, false : unproven
[11] [DEAD] line 50, false : unproven

============ Statistics ============
# Iter                    : 40
# Alarm / Query           : 4 / 9
- integer over/underflow  : 0 / 3
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 3 / 3
- tx.origin               : 1 / 1

Time Elapsed (Real) : 157.09752202
Time Elapsed (CPU)  : 157.09549
