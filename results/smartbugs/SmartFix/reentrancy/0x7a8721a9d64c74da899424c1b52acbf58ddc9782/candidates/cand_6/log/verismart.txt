[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 10
[INFO] reachable : 9
[INFO] Generating Paths ... took 0.000183s
[INFO] # path : 26

[INFO] Violate CEI: false
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000781s
Generating VCs ... took 0.005866s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.043166
[
-1 -> true
0 -> true
]
[
]
1/8 ... [IO] line 42, (balances[msg.sender] + msg.value) ... unproven
2/8 ... [IO] line 52, (balances[msg.sender] - _am) ... proven
3/8 ... [ETH_LEAK] line 53, msg.sender.call.value(_am)() ... unproven
4/8 ... [RE_EL] line 53, msg.sender.call.value(_am)() ... unproven
5/8 ... [RE] line 31, (PrivateDeposit, setLog, [address]) ... unproven
6/8 ... [RE] line 36, (PrivateDeposit, Deposit, []) ... unproven
7/8 ... [RE] line 47, (PrivateDeposit, CashOut, [uint256]) ... unproven
8/8 ... [TX_ORG] line 19, assume((tx.origin == owner)); ... unproven
took 0.366144s

Generating VCs ... took 0.003216s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 2 Total elapsed : 0.415207
[
-1 -> (Read(@TU, owner__@10) == true)
0 -> (Read(@TU, owner__@10) == true)
]
[
]
1/8 ... [IO] line 42, (balances[msg.sender] + msg.value) ... unproven
2/8 ... [IO] line 52, (balances[msg.sender] - _am) ... proven
3/8 ... [ETH_LEAK] line 53, msg.sender.call.value(_am)() ... unproven
4/8 ... [RE_EL] line 53, msg.sender.call.value(_am)() ... unproven
5/8 ... [RE] line 31, (PrivateDeposit, setLog, [address]) ... unproven
6/8 ... [RE] line 36, (PrivateDeposit, Deposit, []) ... unproven
7/8 ... [RE] line 47, (PrivateDeposit, CashOut, [uint256]) ... unproven
8/8 ... [TX_ORG] line 19, assume((tx.origin == owner)); ... unproven
took 0.374954s

Generating VCs ... took 0.003397s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 5.813601
[
-1 -> ((Read(@TU, owner__@10) == true) /\ @Invest_sum >= Σ_u balances__@5)
0 -> ((Read(@TU, owner__@10) == true) /\ @Invest_sum >= Σ_u balances__@5)
]
[
]
1/8 ... [IO] line 42, (balances[msg.sender] + msg.value) ... unproven
2/8 ... [IO] line 52, (balances[msg.sender] - _am) ... proven
3/8 ... [ETH_LEAK] line 53, msg.sender.call.value(_am)() ... proven
4/8 ... [RE_EL] line 53, msg.sender.call.value(_am)() ... proven
5/8 ... [RE] line 31, (PrivateDeposit, setLog, [address]) ... unproven
6/8 ... [RE] line 36, (PrivateDeposit, Deposit, []) ... unproven
7/8 ... [RE] line 47, (PrivateDeposit, CashOut, [uint256]) ... unproven
8/8 ... [TX_ORG] line 19, assume((tx.origin == owner)); ... unproven
took 9.702044s

Generating VCs ... took 0.003336s
Checking validity of VCs ... took 35.888415s

Generating VCs ... took 0.003313s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 5 Total elapsed : 51.82868
[
-1 -> (((MinDeposit__@8 == 1000000000000000000) /\ (Read(@TU, owner__@10) == true)) /\ @Invest_sum >= Σ_u balances__@5)
0 -> ((Read(@TU, owner__@10) == true) /\ @Invest_sum >= Σ_u balances__@5)
]
[
]
1/8 ... [IO] line 42, (balances[msg.sender] + msg.value) ... unproven
2/8 ... [IO] line 52, (balances[msg.sender] - _am) ... proven
3/8 ... [ETH_LEAK] line 53, msg.sender.call.value(_am)() ... proven
4/8 ... [RE_EL] line 53, msg.sender.call.value(_am)() ... proven
5/8 ... [RE] line 31, (PrivateDeposit, setLog, [address]) ... unproven
6/8 ... [RE] line 36, (PrivateDeposit, Deposit, []) ... unproven
7/8 ... [RE] line 47, (PrivateDeposit, CashOut, [uint256]) ... unproven
8/8 ... [TX_ORG] line 19, assume((tx.origin == owner)); ... unproven
took 5.824223s

Generating VCs ... took 0.00375s
Checking validity of VCs ... took 31.810086s

Generating VCs ... took 0.00333400000001s
Checking validity of VCs ... took 1.394705s

Generating VCs ... took 0.00320600000001s
Checking validity of VCs ... took 1.558443s

Generating VCs ... took 0.003156s
Checking validity of VCs ... took 1.084125s

Iter : 10 To explore : 31 Explored : 83 Total elapsed : 88.097744
Generating VCs ... took 0.003182s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 10 Total elapsed : 92.933896
[
-1 -> (((MinDeposit__@8 == 1000000000000000000) /\ (Read(@TU, owner__@10) == true)) /\ @Invest_sum >= Σ_u balances__@5)
0 -> (((MinDeposit__@8 == 1000000000000000000) /\ (Read(@TU, owner__@10) == true)) /\ @Invest_sum >= Σ_u balances__@5)
]
[
]
1/8 ... [IO] line 42, (balances[msg.sender] + msg.value) ... unproven
2/8 ... [IO] line 52, (balances[msg.sender] - _am) ... proven
3/8 ... [ETH_LEAK] line 53, msg.sender.call.value(_am)() ... proven
4/8 ... [RE_EL] line 53, msg.sender.call.value(_am)() ... proven
5/8 ... [RE] line 31, (PrivateDeposit, setLog, [address]) ... unproven
6/8 ... [RE] line 36, (PrivateDeposit, Deposit, []) ... unproven
7/8 ... [RE] line 47, (PrivateDeposit, CashOut, [uint256]) ... unproven
8/8 ... [TX_ORG] line 19, assume((tx.origin == owner)); ... unproven
took 5.533189s

Generating VCs ... took 0.003219s
Checking validity of VCs ... took 35.820339s

Generating VCs ... took 0.00333800000001s
Checking validity of VCs ... took 1.591492s

Generating VCs ... took 0.00324599999999s
Checking validity of VCs ... took 1.173763s

Generating VCs ... took 0.00358699999998s
Checking validity of VCs ... took 3.071243s

Generating VCs ... took 0.003525s
Checking validity of VCs ... took 4.003275s

Generating VCs ... took 0.003139s
Checking validity of VCs ... took 5.400015s

Generating VCs ... took 0.003241s
Checking validity of VCs ... took 4.891045s

Generating VCs ... took 0.003289s
Checking validity of VCs ... took 0.01043s

Generating VCs ... took 0.003163s
Checking validity of VCs ... took 0.242628s

Iter : 20 To explore : 13 Explored : 101 Total elapsed : 149.897934
Generating VCs ... took 0.00439699999998s
Checking validity of VCs ... took 0.524991s

Generating VCs ... took 0.003197s
Checking validity of VCs ... took 0.239313s

Generating VCs ... took 0.00323599999999s
Checking validity of VCs ... took 0.239886s

Generating VCs ... took 0.00329099999999s
Checking validity of VCs ... took 0.240277s

Generating VCs ... took 0.00331400000002s
Checking validity of VCs ... took 0.748933s

Generating VCs ... took 0.003525s
Checking validity of VCs ... took 0.796394s

Generating VCs ... took 0.00350700000001s
Checking validity of VCs ... took 0.86497s

Generating VCs ... took 0.003398s
Checking validity of VCs ... took 0.099348s

Generating VCs ... took 0.00370199999998s
Checking validity of VCs ... took 0.102105s

Generating VCs ... took 0.00335999999999s
Checking validity of VCs ... took 0.398252s

Iter : 30 To explore : 10 Explored : 108 Total elapsed : 154.198104
Generating VCs ... took 0.00329200000002s
Checking validity of VCs ... took 0.80224s

Generating VCs ... took 0.00333799999999s
Checking validity of VCs ... took 0.188112s

Generating VCs ... took 0.003254s
Checking validity of VCs ... took 0.186259s

Generating VCs ... took 0.00325900000001s
Checking validity of VCs ... took 0.100375s

Generating VCs ... took 0.003455s
Checking validity of VCs ... took 0.181665s

Generating VCs ... took 0.00344100000001s
Checking validity of VCs ... took 0.635367s

Generating VCs ... took 0.003199s
Checking validity of VCs ... took 1.476865s

Generating VCs ... took 0.00338499999998s
Checking validity of VCs ... took 0.64778s

Generating VCs ... took 0.00335800000002s
Checking validity of VCs ... took 0.81751s

Generating VCs ... took 0.003581s
Checking validity of VCs ... took 0.836284s

Iter : 40 To explore : 3 Explored : 111 Total elapsed : 160.117333
Generating VCs ... took 0.00376800000001s
Checking validity of VCs ... took 4.168234s

Generating VCs ... took 0.00364000000002s
Checking validity of VCs ... took 0.672565s

Generating VCs ... took 0.00380899999999s
Checking validity of VCs ... took 0.837675s

Generating VCs ... took 0.00175300000001s
Checking validity of VCs ... 
1/10 ... [NO_EFFECT] line 42, (@pre1 == balances[msg.sender]) ... unproven
2/10 ... [NO_EFFECT] line 52, (@pre2 == balances[msg.sender]) ... unproven
3/10 ... [NO_EFFECT] line 83, (@pre5 == LastMsg.Sender) ... unproven
4/10 ... [NO_EFFECT] line 84, (@pre4 == LastMsg.Time) ... unproven
5/10 ... [NO_EFFECT] line 85, (@pre3 == LastMsg.Val) ... unproven
6/10 ... [ASSIGN_CONST] line 42, (balances[msg.sender] == 0) ... unproven
7/10 ... [ASSIGN_CONST] line 52, (balances[msg.sender] == 0) ... unproven
8/10 ... [DEAD] line 19, false ... unproven
9/10 ... [DEAD] line 40, false ... unproven
10/10 ... [DEAD] line 49, false ... unproven
took 1.149677s


===== Vulnerability Report =====
[1] [IO] line 42, (balances[msg.sender] + msg.value) : unproven
[2] [IO] line 52, (balances[msg.sender] - _am) : proven
[3] [ETH_LEAK] line 53, msg.sender.call.value(_am)() : proven
[4] [RE_EL] line 53, msg.sender.call.value(_am)() : proven
[5] [RE] line 31, (PrivateDeposit, setLog, [address]) : unproven
[6] [RE] line 36, (PrivateDeposit, Deposit, []) : unproven
[7] [RE] line 47, (PrivateDeposit, CashOut, [uint256]) : unproven
[8] [TX_ORG] line 19, assume((tx.origin == owner)); : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 42, (@pre1 == balances[msg.sender]) : unproven
[2] [NO_EFFECT] line 52, (@pre2 == balances[msg.sender]) : unproven
[3] [NO_EFFECT] line 83, (@pre5 == LastMsg.Sender) : unproven
[4] [NO_EFFECT] line 84, (@pre4 == LastMsg.Time) : unproven
[5] [NO_EFFECT] line 85, (@pre3 == LastMsg.Val) : unproven
[6] [ASSIGN_CONST] line 42, (balances[msg.sender] == 0) : unproven
[7] [ASSIGN_CONST] line 52, (balances[msg.sender] == 0) : unproven
[8] [DEAD] line 19, false : unproven
[9] [DEAD] line 40, false : unproven
[10] [DEAD] line 49, false : unproven

============ Statistics ============
# Iter                    : 43
# Alarm / Query           : 5 / 8
- integer over/underflow  : 1 / 2
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 3 / 3
- tx.origin               : 1 / 1

Time Elapsed (Real) : 166.96165204
Time Elapsed (CPU)  : 166.963933
