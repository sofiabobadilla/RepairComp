[CHECKER] Integer Over/Underflows
[CHECKER] Suicidal
[CHECKER] Re-Entrancy
[CHECKER] Improper use of Tx.origin
[CHECKER] Ether-Leaking

[INFO] all funcs : 3
[INFO] reachable : 3
[INFO] Generating Paths ... took 0.000171s
[INFO] # path : 13

[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
[INFO] Performing Interval Analysis ... took 0.000434s
Generating VCs ... took 0.005632s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 1 Total elapsed : 0.033841
[
-1 -> true
0 -> true
]
[
]
1/6 ... [IO] line 16, (userBalances[to] + amount) ... unproven
2/6 ... [IO] line 17, (userBalances[msg.sender] - amount) ... unproven
3/6 ... [ETH_LEAK] line 24, (success,  ) = msg.sender.call.value(amountToWithdraw)(""); ... unproven
4/6 ... [RE_EL] line 24, (success,  ) = msg.sender.call.value(amountToWithdraw)(""); ... unproven
5/6 ... [RE] line 14, (Reentrancy_cross_function, transfer, [address, uint256]) ... unproven
6/6 ... [RE] line 21, (Reentrancy_cross_function, withdrawBalance, []) ... unproven
took 0.478676s

Generating VCs ... took 0.000965s
Checking validity of VCs ... took 0.818846s

Generating VCs ... took 0.000826s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 3 Total elapsed : 1.373952
[
-1 -> NoOverFlow (ΣuserBalances__@5)
0 -> NoOverFlow (ΣuserBalances__@5)
]
[
]
1/6 ... [IO] line 16, (userBalances[to] + amount) ... unproven
2/6 ... [IO] line 17, (userBalances[msg.sender] - amount) ... unproven
3/6 ... [ETH_LEAK] line 24, (success,  ) = msg.sender.call.value(amountToWithdraw)(""); ... unproven
4/6 ... [RE_EL] line 24, (success,  ) = msg.sender.call.value(amountToWithdraw)(""); ... unproven
5/6 ... [RE] line 14, (Reentrancy_cross_function, transfer, [address, uint256]) ... unproven
6/6 ... [RE] line 21, (Reentrancy_cross_function, withdrawBalance, []) ... unproven
took 1.87761s

Generating VCs ... took 0.000752s
Checking validity of VCs ... took 1.155448s

Generating VCs ... took 0.000819000000001s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 5 Total elapsed : 4.481737
[
-1 -> ((ΣuserBalances__@5 == 0) /\ NoOverFlow (ΣuserBalances__@5))
0 -> ((ΣuserBalances__@5 == 0) /\ NoOverFlow (ΣuserBalances__@5))
]
[
]
1/6 ... [IO] line 16, (userBalances[to] + amount) ... proven
2/6 ... [IO] line 17, (userBalances[msg.sender] - amount) ... unproven
3/6 ... [ETH_LEAK] line 24, (success,  ) = msg.sender.call.value(amountToWithdraw)(""); ... proven
4/6 ... [RE_EL] line 24, (success,  ) = msg.sender.call.value(amountToWithdraw)(""); ... proven
5/6 ... [RE] line 14, (Reentrancy_cross_function, transfer, [address, uint256]) ... unproven
6/6 ... [RE] line 21, (Reentrancy_cross_function, withdrawBalance, []) ... unproven
took 29.432751s

Generating VCs ... took 0.000794999999997s
Checking validity of VCs ... 
=============== Invariants Found ===============
Iter: 6 Total elapsed : 36.321361
[
-1 -> (((ΣuserBalances__@5 == 0) /\ NoOverFlow (ΣuserBalances__@5)) /\ @Invest_sum >= Σ_u userBalances__@5)
0 -> (((ΣuserBalances__@5 == 0) /\ NoOverFlow (ΣuserBalances__@5)) /\ @Invest_sum >= Σ_u userBalances__@5)
]
[
]
1/6 ... [IO] line 16, (userBalances[to] + amount) ... proven
2/6 ... [IO] line 17, (userBalances[msg.sender] - amount) ... proven
3/6 ... [ETH_LEAK] line 24, (success,  ) = msg.sender.call.value(amountToWithdraw)(""); ... proven
4/6 ... [RE_EL] line 24, (success,  ) = msg.sender.call.value(amountToWithdraw)(""); ... proven
5/6 ... [RE] line 14, (Reentrancy_cross_function, transfer, [address, uint256]) ... unproven
6/6 ... [RE] line 21, (Reentrancy_cross_function, withdrawBalance, []) ... unproven
took 10.587292s

Generating VCs ... took 0.000550999999994s
Checking validity of VCs ... 
1/6 ... [NO_EFFECT] line 16, (@pre2 == userBalances[to]) ... proven
2/6 ... [NO_EFFECT] line 17, (@pre1 == userBalances[msg.sender]) ... unproven
3/6 ... [NO_EFFECT] line 22, (@pre3 == amountToWithdraw) ... unproven
4/6 ... [ASSIGN_CONST] line 16, ((!(msg.sender != to)) || (userBalances[to] == 0)) ... proven
5/6 ... [ASSIGN_CONST] line 17, ((!(msg.sender != to)) || (userBalances[msg.sender] == 0)) ... unproven
6/6 ... [DEAD] line 15, false ... unproven
took 62.646678s


===== Vulnerability Report =====
[1] [IO] line 16, (userBalances[to] + amount) : proven
[2] [IO] line 17, (userBalances[msg.sender] - amount) : proven
[3] [ETH_LEAK] line 24, (success,  ) = msg.sender.call.value(amountToWithdraw)(""); : proven
[4] [RE_EL] line 24, (success,  ) = msg.sender.call.value(amountToWithdraw)(""); : proven
[5] [RE] line 14, (Reentrancy_cross_function, transfer, [address, uint256]) : unproven
[6] [RE] line 21, (Reentrancy_cross_function, withdrawBalance, []) : unproven

===== Regression Report =====
[1] [NO_EFFECT] line 16, (@pre2 == userBalances[to]) : proven
[2] [NO_EFFECT] line 17, (@pre1 == userBalances[msg.sender]) : unproven
[3] [NO_EFFECT] line 22, (@pre3 == amountToWithdraw) : unproven
[4] [ASSIGN_CONST] line 16, ((!(msg.sender != to)) || (userBalances[to] == 0)) : proven
[5] [ASSIGN_CONST] line 17, ((!(msg.sender != to)) || (userBalances[msg.sender] == 0)) : unproven
[6] [DEAD] line 15, false : unproven

============ Statistics ============
# Iter                    : 7
# Alarm / Query           : 2 / 6
- integer over/underflow  : 0 / 2
- kill-anyone             : 0 / 0
- ether-leaking           : 0 / 1
- reentrancy-leaking      : 0 / 1
- reentrancy              : 2 / 2
- tx.origin               : 0 / 0

Time Elapsed (Real) : 107.052086115
Time Elapsed (CPU)  : 107.037796
