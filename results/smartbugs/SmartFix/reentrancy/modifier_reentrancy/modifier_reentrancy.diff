--- https://github.com/smartbugs/smartbugs-curated/tree/main/dataset/reentrancy/modifier_reentrancy.sol
+++ https://github.com/ASSERT-KTH/RepairComp/blob/main/results/smartbugs/SmartFix/reentrancy/modifier_reentrancy/modifier_reentrancy.sol
@@ -1,3 +1,14 @@
+contract SmartFix {

+  bool public _locked = false;

+

+  modifier _nonReentrant() {

+    require(!_locked);

+    _locked = true;

+    _;

+    _locked = false;

+  }

+}

+

 /*

  * @source: https://github.com/SmartContractSecurity/SWC-registry/blob/master/test_cases/reentracy/modifier_reentrancy.sol

  * @author: - 

@@ -6,13 +17,14 @@
 

 pragma solidity ^0.4.24;

 

-contract ModifierEntrancy {

+contract ModifierEntrancy is SmartFix {

   mapping (address => uint) public tokenBalance;

   string constant name = "Nu Token";

 

   //If a contract has a zero balance and supports the token give them some token

   // <yes> <report> REENTRANCY

-  function airDrop() hasNoBalance supportsToken  public{

+  function airDrop() _nonReentrant /* <FIX> Add Modifier:NR */ hasNoBalance supportsToken  public{

+    require(((tokenBalance[msg.sender] + 20) >= tokenBalance[msg.sender])); /* <FIX> Insert:BC */

     tokenBalance[msg.sender] += 20;

   }

 
